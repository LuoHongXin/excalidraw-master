{"version":3,"sources":["constants.ts","analytics.ts","css/variables.module.scss","locales lazy /^/.*/.json$/ groupOptions: {} namespace object","i18n.ts","colors.ts","keys.ts","utils.ts","appState.ts","hooks/useCallbackRefState.ts","element/typeChecks.ts","math.ts","points.ts","element/bounds.ts","renderer/renderElement.ts","scene/Scene.ts","random.ts","element/mutateElement.ts","element/sizeHelpers.ts","groups.ts","element/newElement.ts","element/transformHandles.ts","ga.ts","galines.ts","gapoints.ts","gadirections.ts","gatransforms.ts","element/collision.ts","element/resizeTest.ts","element/linearElementEditor.ts","element/binding.ts","element/resizeElements.ts","element/dragElements.ts","element/textWysiwyg.tsx","element/textElement.ts","element/showSelectedShapeActions.ts","element/index.ts","scene/scrollbars.ts","scene/selection.ts","scene/scroll.ts","scene/comparisons.ts","scene/zoom.ts","components/ToolButton.tsx","components/icons.tsx","actions/register.ts","actions/actionDeleteSelected.tsx","zindex.ts","actions/actionZindex.tsx","actions/actionSelectAll.ts","actions/actionDuplicateSelection.tsx","components/ButtonIconSelect.tsx","components/Popover.tsx","components/ColorPicker.tsx","components/IconPicker.tsx","actions/actionProperties.tsx","types.ts","components/DarkModeToggle.tsx","components/Tooltip.tsx","actions/actionCanvas.tsx","actions/actionFinalize.tsx","components/ProjectName.tsx","renderer/roundRect.ts","clients.ts","renderer/renderScene.ts","errors.ts","data/restore.ts","data/blob.ts","data/json.ts","scene/export.ts","charts.ts","clipboard.ts","data/index.ts","data/resave.ts","components/CheckboxItem.tsx","components/Stack.tsx","components/ActiveFile.tsx","actions/actionExport.tsx","actions/actionStyles.ts","components/HelpIcon.tsx","actions/actionGroup.tsx","actions/actionMenu.tsx","components/Avatar.tsx","actions/actionAddToLibrary.ts","actions/actionNavigate.tsx","align.ts","actions/actionAlign.tsx","disitrubte.ts","actions/actionDistribute.tsx","actions/actionFlip.ts","actions/actionClipboard.tsx","actions/actionToggleGridMode.tsx","actions/actionToggleZenMode.tsx","actions/actionToggleStats.tsx","actions/actionHistory.tsx","actions/manager.tsx","data/library.ts","gesture.ts","history.ts","shapes.tsx","actions/shortcuts.ts","components/ContextMenu.tsx","components/Actions.tsx","components/BackgroundPickerAndDarkModeToggle.tsx","components/CollabButton.tsx","components/ImageExportDialog.tsx","components/FixedSideContainer.tsx","components/HintViewer.tsx","components/Island.tsx","components/LibraryUnit.tsx","components/LoadingMessage.tsx","components/LockButton.tsx","components/Section.tsx","components/UserList.tsx","components/LibraryButton.tsx","components/MobileMenu.tsx","components/PasteChartDialog.tsx","components/HelpDialog.tsx","components/Card.tsx","components/JSONExportDialog.tsx","components/LayerUI.tsx","components/Stats.tsx","components/Toast.tsx","actions/actionToggleViewMode.tsx","components/App.tsx","components/Modal.tsx","components/Dialog.tsx","components/ErrorDialog.tsx","components/TopErrorBoundary.tsx","packages/excalidraw/publicPath.js","components/InitializeApp.tsx","excalidraw-app/app_constants.ts","packages/excalidraw/index.tsx","excalidraw-app/data/index.ts","excalidraw-app/data/firebase.ts","excalidraw-app/data/localStorage.ts","excalidraw-app/collab/Portal.tsx","excalidraw-app/collab/RoomDialog.tsx","excalidraw-app/collab/CollabWrapper.tsx","createInverseContext.tsx","excalidraw-app/components/LanguageList.tsx","excalidraw-app/CustomStats.tsx","excalidraw-app/components/icons.tsx","excalidraw-app/components/ExportToExcalidrawPlus.tsx","excalidraw-app/index.tsx","serviceWorker.tsx","excalidraw-app/pwa.ts","excalidraw-app/sentry.ts","index.tsx"],"names":["EVENT","APP_NAME","DRAGGING_THRESHOLD","LINE_CONFIRM_THRESHOLD","ELEMENT_SHIFT_TRANSLATE_AMOUNT","ELEMENT_TRANSLATE_AMOUNT","TEXT_TO_CENTER_SNAP_THRESHOLD","SHIFT_LOCKING_ANGLE","Math","PI","CURSOR_TYPE","TEXT","CROSSHAIR","GRABBING","GRAB","POINTER","MOVE","AUTO","POINTER_BUTTON","MAIN","WHEEL","SECONDARY","TOUCH","ENV","TEST","DEVELOPMENT","CLASSES","SHAPE_ACTIONS_MENU","FONT_FAMILY","Virgil","Helvetica","Cascadia","WINDOWS_EMOJI_FALLBACK_FONT","DEFAULT_FONT_SIZE","DEFAULT_FONT_FAMILY","DEFAULT_TEXT_ALIGN","DEFAULT_VERTICAL_ALIGN","DEFAULT_VERSION","GRID_SIZE","MIME_TYPES","excalidraw","excalidrawlib","EXPORT_DATA_TYPES","excalidrawClipboard","excalidrawLibrary","EXPORT_SOURCE","window","location","origin","STORAGE_KEYS","LOCAL_STORAGE_LIBRARY","TAP_TWICE_TIMEOUT","TOUCH_CTX_MENU_TIMEOUT","TITLE_TIMEOUT","TOAST_TIMEOUT","VERSION_TIMEOUT","SCROLL_TIMEOUT","ZOOM_STEP","IDLE_THRESHOLD","ACTIVE_THRESHOLD","MODES","VIEW","ZEN","GRID","THEME_FILTER","cssVariables","themeFilter","URL_QUERY_KEYS","addLibrary","URL_HASH_KEYS","DEFAULT_UI_OPTIONS","canvasActions","changeViewBackgroundColor","clearCanvas","export","saveFileToDisk","loadScene","saveToActiveFile","theme","saveAsImage","MQ_MAX_WIDTH_PORTRAIT","MQ_MAX_WIDTH_LANDSCAPE","MQ_MAX_HEIGHT_LANDSCAPE","MAX_DECIMALS_FOR_SVG_EXPORT","EXPORT_SCALES","DEFAULT_EXPORT_PADDING","trackEvent","process","REACT_APP_GOOGLE_ANALYTICS_ID","gtag","category","name","label","value","event_category","event_label","JEST_WORKER_ID","module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","all","slice","t","keys","Object","defaultLang","languages","rtl","concat","sort","left","right","filter","lang","percentages","TEST_LANG_CODE","unshift","currentLang","currentLangData","setLanguage","a","document","documentElement","dir","startsWith","getLanguage","findPartsForData","data","parts","index","length","part","undefined","path","replacement","JSON","stringify","split","translation","fallbackLangData","key","replace","shades","oc","red","pink","grape","violet","indigo","blue","cyan","teal","green","lime","yellow","orange","canvasBackground","white","gray","elementBackground","elementStroke","black","isDarwin","test","navigator","platform","isWindows","CODES","KEYS","isArrowKey","getResizeCenterPointKey","event","altKey","getResizeWithSidesSameLengthKey","shiftKey","getRotateWithDiscreteAngleKey","SVG_NS","mockDateTime","getDateTime","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hr","getHours","min","getMinutes","capitalizeString","str","charAt","toUpperCase","isWritableElement","target","HTMLElement","dataset","type","HTMLBRElement","HTMLTextAreaElement","HTMLInputElement","getFontFamilyString","fontFamily","entries","fontFamilyString","getFontString","fontSize","measureText","text","font","line","createElement","body","style","position","whiteSpace","appendChild","innerText","x","join","width","offsetWidth","height","offsetHeight","span","display","overflow","baseline","offsetTop","removeChild","debounce","fn","timeout","handle","lastArgs","ret","args","clearTimeout","setTimeout","flush","_lastArgs","cancel","distance","y","abs","resetCursor","canvas","cursor","setCursor","setCursorForShape","shape","isFullScreen","fullscreenElement","nodeName","getShortcutKey","shortcut","viewportCoordsToSceneCoords","clientX","clientY","zoom","offsetLeft","scrollX","scrollY","invScale","sceneCoordsToViewportCoords","sceneX","sceneY","getGlobalCSSVariable","getComputedStyle","getPropertyValue","RE_RTL_CHECK","RegExp","isRTL","tupleToCoors","xyTuple","muteFSAbortError","error","isTransparent","color","isRGBTransparent","substr","isRRGGBBTransparent","colors","resolvablePromise","reject","promise","_resolve","_reject","withBatchedUpdates","func","unstable_batchedUpdates","nFormatter","num","digits","si","symbol","toFixed","getVersion","querySelector","content","defaultExportScale","includes","devicePixelRatio","getDefaultAppState","collaborators","Map","currentChartType","currentItemBackgroundColor","currentItemEndArrowhead","currentItemFillStyle","currentItemFontFamily","currentItemFontSize","currentItemLinearStrokeSharpness","currentItemOpacity","currentItemRoughness","currentItemStartArrowhead","currentItemStrokeColor","currentItemStrokeSharpness","currentItemStrokeStyle","currentItemStrokeWidth","currentItemTextAlign","cursorButton","draggingElement","editingElement","editingGroupId","editingLinearElement","elementLocked","elementType","errorMessage","exportBackground","exportScale","exportEmbedScene","exportWithDarkMode","fileHandle","gridSize","isBindingEnabled","isLibraryOpen","isLoading","isResizing","isRotating","lastPointerDownWith","multiElement","openMenu","openPopup","pasteDialog","shown","previousSelectedElementIds","resizingElement","scrolledOutside","selectedElementIds","selectedGroupIds","selectionElement","shouldCacheIgnoreZoom","showHelpDialog","showStats","startBoundElement","suggestedBindings","toastMessage","viewBackgroundColor","zenModeEnabled","viewModeEnabled","APP_STATE_STORAGE_CONF","browser","_clearAppStateForStorage","appState","exportType","stateForExport","propConfig","clearAppStateForLocalStorage","cleanAppStateForExport","useCallbackRefState","useState","refValue","setRefValue","useCallback","isTextElement","element","isFreeDrawElement","isFreeDrawElementType","isLinearElement","isLinearElementType","isBindingElement","isBindingElementType","isBindableElement","rotate","x1","y1","x2","y2","angle","cos","sin","rotatePoint","point","center","adjustXYWithRotation","sides","deltaX1","deltaY1","deltaX2","deltaY2","w","n","s","distance2d","xd","yd","hypot","isPathALoop","points","zoomValue","first","last","isPointInPolygon","vertices","extreme","Number","MAX_SAFE_INTEGER","p","count","i","current","next","doSegmentsIntersect","orderedColinearOrientation","isPointWithinBounds","q","r","max","val","p1","q1","p2","q2","o1","o2","o3","o4","getGridPoint","round","rescalePoints","dimension","nextDimensionSize","prevPoints","prevDimValues","prevMaxDimension","prevMinDimension","prevDimensionSize","dimensionScaleFactor","nextMinDimension","Infinity","scaledPoints","prevPoint","currentDimension","scaledValue","scaledPoint","getElementAbsoluteCoords","getFreeDrawElementAbsoluteCoords","getLinearElementAbsoluteCoords","getCurvePathOps","sets","set","ops","getMinMaxXYFromCurvePathOps","transformXY","currentP","reduce","limits","op","p3","p0","equation","idx","pow","minY","minX","maxX","maxY","getBoundsFromPoints","coords","getShapeForElement","getElementBounds","bounds","cx","cy","getLinearElementRotatedBounds","x11","y11","x12","y12","x22","y22","x21","y21","h","ww","hh","getCommonBounds","elements","forEach","getResizedElementAbsoluteCoords","nextWidth","nextHeight","gen","rough","generator","curve","strokeSharpness","linearPath","generateRoughOptions","getElementPointsCoords","sharpness","defaultAppState","getDashArrayDashed","strokeWidth","getDashArrayDotted","getCanvasPadding","drawElementOnCanvas","rc","context","globalAlpha","opacity","lineJoin","lineCap","draw","save","fillStyle","strokeColor","pathsCache","get","getFreeDrawPath2D","fill","restore","shouldTemporarilyAttach","isConnected","setAttribute","textAlign","lines","lineHeight","verticalOffset","horizontalOffset","fillText","remove","elementWithCanvasCache","WeakMap","shapeCache","invalidateShapeForElement","delete","continuousPath","options","seed","strokeLineDash","strokeStyle","disableMultiStroke","fillWeight","hachureGap","roughness","stroke","preserveVertices","backgroundColor","curveFitting","generateElementShape","rectangle","topX","floor","rightX","rightY","getDiamondPoints","topY","bottomX","bottomY","leftX","leftY","polygon","ellipse","startArrowhead","endArrowhead","getArrowheadShapes","arrowhead","arrowheadPoints","prevOp","nx","ny","size","arrow","bar","dot","px","py","minSize","xs","ys","x3","y3","getArrowheadPoints","circle","x4","y4","dash","shapes","push","generateFreeDrawShape","generateElementWithCanvas","sceneState","prevElementWithCanvas","shouldRegenerateBecauseZoom","canvasZoom","elementWithCanvas","getContext","padding","canvasOffsetX","canvasOffsetY","ceil","translate","scale","generateElementCanvas","drawElementFromCanvas","drawImage","renderElement","renderOptimizations","fillRect","shiftX","shiftY","roughSVGDrawWithPrecision","rsvg","drawable","precision","pshape","fixedDecimalPlaceDigits","renderElementToSvg","svgRoot","offsetX","offsetY","degree","node","group","ownerDocument","createElementNS","getFreeDrawSvgPath","direction","textAnchor","textContent","svgPathData","Path2D","inputPoints","simulatePressure","pressures","thinning","smoothing","streamline","easing","getFreeDrawShape","d","isIdKey","elementKey","Scene","callbacks","Set","nonDeletedElements","elementsMap","this","getElement","isNonDeletedElement","result","getNonDeletedElement","nextElements","clear","mapElementToScene","getNonDeletedElements","informMutation","Array","from","callback","cb","has","add","sceneMapById","scene","sceneMapByElement","random","Random","now","randomInteger","randomId","nanoid","mutateElement","updates","didChange","getSizeFromPoints","nextPoints","didChangePoints","nextPoint","version","versionNonce","getScene","newElementWith","bumpVersion","isInvisiblySmallElement","getPerfectElementSize","absWidth","absHeight","lockedAngle","atan","tan","sign","getNormalizedDimensions","selectGroup","groupId","elementsInGroup","groupIds","fromEntries","isSelectedViaGroup","getSelectedGroupForElement","find","getSelectedGroupIds","selectGroupsForSelectedElements","nextAppState","selectedElements","getSelectedElements","indexOfEditingGroup","indexOf","isElementInGroup","getElementsInGroup","addToGroup","prevGroupIds","newGroupId","positionOfEditingGroupId","positionToInsert","splice","_newElementBase","boundElementIds","rest","isDeleted","newElement","opts","getTextElementPositionOffsets","metrics","verticalAlign","newTextElement","offsets","updateTextElement","nextText","nextBaseline","prevMetrics","isFinite","getAdjustedDimensions","newLinearElement","lastCommittedPoint","startBinding","endBinding","deepCopyElement","depth","prototype","toString","call","tmp","constructor","create","getPrototypeOf","hasOwnProperty","isArray","k","arr","duplicateElement","groupIdMapForOperation","overrides","copy","mapper","endIndex","getNewGroupIdsForDuplication","assign","transformHandleSizes","mouse","pen","touch","OMIT_SIDES_FOR_MULTIPLE_ELEMENTS","OMIT_SIDES_FOR_TEXT_ELEMENT","OMIT_SIDES_FOR_LINE_SLASH","nw","se","OMIT_SIDES_FOR_LINE_BACKSLASH","ne","sw","generateTransformHandle","getTransformHandlesFromCoords","pointerType","omitSides","handleWidth","handleHeight","handleMarginX","handleMarginY","dashedLineMargin","centeringOffset","transformHandles","rotation","minimumSizeForEightHandles","getTransformHandles","nvector","reverse","b","isNumber","sub","mul","mulScalar","meet","joinScalar","norm","sqrt","inorm","normalized","inormalized","c","GA","through","to","orthogonal","toTuple","intersect","line1","line2","point1","point2","distanceToLine","pivot","apply","motor","isHittingElementBoundingBoxWithoutHittingElement","threshold","isHittingElementNotConsideringBoundingBox","isPointHittingElementBoundingBox","check","isStrictlyInside","isDraggableFromInside","isElementDraggableFromInside","isInsideCheck","isNearCheck","hitTestPointAgainstElement","isElementSelected","rotatedX","rotatedY","bindingBorderTest","maxBindingGap","isOutsideCheck","elementWidth","elementHeight","smallerDimension","distanceToBindableElement","distanceToRectangle","hitTestFreeDrawElement","hitTestLinear","console","warn","distanceToDiamond","distanceToEllipse","pointRelativeToElement","pointRel","hwidth","hheight","GAPoint","GALine","side","ellipseParamsForTest","tangent","tx","ty","_","xx","yy","ex","ey","rx","ry","qx","qy","intersection","closestPoint","rotatedPoint","P","A","B","delta","U","C","da","db","pointAbs","side1","side2","relX","relY","some","subshape","hitTestCurveInside","hitTestRoughShape","pointTuple","elementCoords","coordsCenter","GATransform","pointRotated","pointRelToCenterAbs","GADirection","elementPos","pointRelToPos","ax","ay","relativizationToElementCenter","bx","by","determineFocusDistance","relateToCenter","aRel","bRel","m","mabs","nabs","getSortedElementLineIntersections","nearPoint","intersections","gap","corners","getCorners","flatMap","edge","intersectSegment","offsetSegment","getCircleIntersections","getEllipseIntersections","sortedIntersections","i1","i2","hx","hy","segment","offset","squares","discr","discrRoot","xn","yn","radius","findFocusPointForEllipse","relativeDistance","relativeDistanceAbs","orientation","pyo","findFocusPointForRectangulars","maxDistance","tangentPoint","corner","odd","operation","polygonPoints","pointsOnBezierCurves","lineThreshold","mx","my","pointInBezierEquation","isInsideTransformHandle","transformHandle","getElementWithTransformHandleType","scenePointerX","scenePointerY","transformHandleType","rotationTransformHandle","resizeTest","getTransformHandleTypeFromCoords","RESIZE_CURSORS","getCursorForResizingElement","shouldSwapCursors","rotateResizeCursor","LinearElementEditor","elementId","activePointIndex","isDragging","lastUncommittedPoint","pointerOffset","startBindingElement","endBindingElement","normalizePoints","setState","maybeSuggestBinding","newPoint","createPointAt","movePoint","binding","bindingElement","getHoveredElementForBinding","getPointAtIndexGlobalCoordinates","history","scenePointer","didAddPoint","hitElement","resumeRecording","clickedPointIndex","getPointIndexUnderCursor","bindOrUnbindLinearElement","targetPoint","lastPoint","indexMaybeFromEnd","absoluteCoords","pointHandles","getPointsGlobalCoordinates","POINT_HANDLE_SIZE","pointerOnGrid","_idx","getNormalizedPoints","pointIndex","targetPosition","otherUpdates","deltaX","deltaY","nextCoords","prevCoords","nextCenterX","nextCenterY","prevCenterX","prevCenterY","rotated","linearElement","boundToElementIds","unboundFromElementIds","bindOrUnbindLinearElementEdge","onlyUnbound","bindableElement","otherEdgeBindableElement","startOrEnd","isLinearElementSimpleAndAlreadyBoundOnOppositeEdge","bindLinearElement","unbound","unbindLinearElement","bindOrUnbindSelectedElements","getElligibleElementForBindingElement","maybeBindBindableElement","getElligibleElementsForBindableElementAndWhere","where","maybeBindLinearElement","pointerCoords","hoveredElement","calculateFocusAndGap","otherBinding","isLinearElementSimpleAndAlreadyBound","alreadyBoundToId","unbindLinearElements","field","getElementAtPosition","getElements","edgePointIndex","adjacentPointIndex","edgePoint","adjacentPoint","focus","updateBoundElements","changedElement","newSize","simultaneouslyUpdated","simultaneouslyUpdatedElementIds","getSimultaneouslyUpdatedElementIds","doesNeedUpdate","maybeCalculateNewGapWhenScaling","updateBoundPoint","boundElement","newEdgePoint","focusPointAbsolute","adjecentPoint","adjecentPointRel","reverseRelateToCenter","determineFocusPoint","intersectElementWithLine","pointFromAbsoluteCoords","currentBinding","newWidth","newHeight","getElligibleElementsForBindingElement","getLinearElementEdgeCoors","canBindStart","isLinearElementEligibleForNewBindingByBindable","canBindEnd","maybeElement","fixBindingsAfterDuplication","sceneElements","oldElements","oldIdToDuplicatedId","duplicatesServeAsOld","allBoundElementIds","allBindableElementIds","shouldReverseRoles","oldElement","boundElementId","newBindingAfterDuplication","fixBindingsAfterDeletion","deletedElements","deletedElementIds","deletedElement","newBindingAfterDeletion","normalizeAngle","rotateSingleElement","pointerX","pointerY","isRotateWithDiscreteAngle","atan2","reshapeSingleTwoPointElement","resizeArrowDirection","getPerfectElementSizeWithRotation","nextElementX","nextElementY","rescalePointsInElement","measureFontSizeFromWH","nextFontSize","resizeSingleTextElement","isResizeFromCenter","nextFont","getSidesForTransformHandle","resizeSingleElement","stateAtResizeStart","shouldKeepSidesRatio","transformHandleDirection","startTopLeft","startBottomRight","startCenter","rotatedPointer","esx1","esy1","boundsCurrentWidth","boundsCurrentHeight","scaleX","scaleY","eleInitialWidth","eleInitialHeight","eleNewWidth","eleNewHeight","widthRatio","heightRatio","ratio","newBoundsX1","newBoundsY1","newBoundsWidth","newBoundsHeight","newTopLeft","bottomLeft","topRight","rotatedTopLeft","newCenter","rotatedNewCenter","rescaledPoints","newOrigin","resizedElement","resizeMultipleElements","getNextXY","origX1","origY1","finalX1","finalY1","origX2","origY2","finalX2","finalY2","prev","origCoords","finalCoords","rotateMultipleElements","pointerDownState","centerX","centerY","centerAngle","origAngle","originalElements","rotatedCX","rotatedCY","dragNewElement","originX","originY","isResizeWithSidesSameLength","isResizeCenterPoint","newX","newY","normalizeText","getTransform","maxWidth","translateX","translateY","redrawTextBoundingBox","showSelectedShapeActions","Boolean","getElementMap","acc","getSceneVersion","el","_clearElements","clearElementsForExport","clearElementsForLocalStorage","SCROLLBAR_COLOR","getScrollBars","viewportWidth","viewportHeight","horizontal","vertical","elementsMinX","elementsMinY","elementsMaxX","elementsMaxY","viewportWidthWithZoom","viewportHeightWithZoom","viewportWidthDiff","viewportHeightDiff","safeArea","top","parseInt","bottom","viewportMinX","viewportMinY","viewportMaxX","viewportMaxY","sceneMinX","sceneMinY","sceneMaxX","sceneMaxY","SCROLLBAR_MARGIN","isOverScrollBars","scrollBars","scrollBar","isOverHorizontal","isOverVertical","isOverEither","isSomeElementSelected","getTargetElements","centerScrollOn","scenePoint","viewportDimensions","calculateScrollCenter","getVisibleElements","cords","viewportX1","viewportY1","viewportX2","viewportY2","isOutsideViewPort","minDistance","closestElement","getClosestElementBounds","hasBackground","hasStrokeWidth","hasStrokeStyle","canChangeSharpness","hasText","canHaveArrowheads","isAtPositionFn","getNewZoom","newZoomValue","prevZoom","canvasOffset","zoomOnViewportPoint","getNormalizedZoom","normalizedZoom","parseFloat","ToolButton","React","forwardRef","props","ref","excalId","useExcalidrawContainer","innerRef","useRef","useImperativeHandle","sizeCn","className","clsx","visible","hidden","ToolIcon","selected","title","onClick","icon","keyBindingLabel","showAriaLabel","children","onChange","checked","defaultProps","activeElementColor","iconFillColor","handlerColor","createIcon","mirror","focusable","role","viewBox","checkIcon","link","saveAs","load","clipboard","trash","palette","exportFile","exportImage","exportToFileIcon","zoomIn","zoomOut","done","menu","undo","redo","questionCircle","share","shareIOS","shareWindows","BringForwardIcon","memo","SendBackwardIcon","BringToFrontIcon","SendToBackIcon","AlignTopIcon","strokeLinecap","AlignBottomIcon","AlignLeftIcon","AlignRightIcon","DistributeHorizontallyIcon","DistributeVerticallyIcon","CenterVerticallyIcon","strokeDasharray","CenterHorizontallyIcon","users","start","stop","close","back","marginLeft","clone","shield","file","GroupIcon","UngroupIcon","FillHachureIcon","fillRule","clipRule","FillCrossHatchIcon","FillSolidIcon","StrokeWidthIcon","StrokeStyleSolidIcon","StrokeStyleDashedIcon","StrokeStyleDottedIcon","SloppinessArchitectIcon","SloppinessArtistIcon","SloppinessCartoonistIcon","EdgeSharpIcon","EdgeRoundIcon","ArrowheadNoneIcon","ArrowheadArrowIcon","flip","transform","ArrowheadDotIcon","ArrowheadBarIcon","FontSizeSmallIcon","FontSizeMediumIcon","FontSizeLargeIcon","FontSizeExtraLargeIcon","FontFamilyHandDrawnIcon","FontFamilyNormalIcon","FontFamilyCodeIcon","TextAlignLeftIcon","TextAlignCenterIcon","TextAlignRightIcon","actions","register","action","handleGroupEditingState","siblingElements","actionDeleteSelected","perform","commitToHistory","deleteSelectedElements","contextItemLabel","keyTest","PanelComponent","updateData","getIndicesToMove","selectedIndices","deletedIndices","includeDeletedIndex","getTargetIndex","boundaryIndex","sourceElement","indexFilter","candidateIndex","array","fromIndex","findLastIndex","findIndex","nextElement","siblingGroupId","elementsInSiblingGroup","getTargetElementsMap","indices","shiftElements","indicesToMove","targetElementsMap","groupedIndices","toContiguousGroups","leadingIndex","trailingIndex","targetIndex","leadingElements","targetElements","displacedElements","trailingElements","shiftElementsToEnd","groupElements","values","moveOneLeft","moveOneRight","moveAllLeft","moveAllRight","actionSendBackward","keyPriority","actionBringForward","actionSendToBack","actionBringToFront","actionSelectAll","actionDuplicateSelection","selectedPoint","duplicateElements","groupIdMap","newElements","duplicateAndOffsetElement","finalElements","ButtonIconSelect","option","active","Popover","onCloseRequest","fitInViewport","popoverRef","useLayoutEffect","getBoundingClientRect","innerWidth","innerHeight","useEffect","handler","contains","addEventListener","removeEventListener","isValidColor","Option","keyBindings","flat","Picker","onClose","showInput","firstItem","activeItem","gallery","colorInput","onKeyDown","activeElement","preventDefault","nextIndex","toLowerCase","nativeEvent","stopImmediatePropagation","stopPropagation","tabIndex","_color","_colorWithoutHash","currentTarget","onFocus","ColorInput","innerValue","setInnerValue","inputRef","changeColor","inputValue","getColor","spellCheck","onBlur","ColorPicker","isActive","setActive","pickerButton","Suspense","fallback","changedColor","rFirstItem","rActiveItem","rGallery","pressedOption","keyBinding","metaKey","ctrlKey","IconPicker","rPickerButton","UserIdleState","changeProperty","getFormValue","getAttribute","defaultValue","attributes","getCommonAttributeOfSelectedElements","DarkModeToggle","step","onWheel","shouldUpdateForNonLinearElements","every","shouldUpdateForLinearElements","ICONS","MOON","SUN","getTooltipDiv","existingDiv","div","classList","Tooltip","long","onPointerEnter","item","tooltip","minWidth","itemX","itemBottom","itemTop","itemWidth","labelWidth","labelHeight","margin","updateTooltip","onPointerLeave","zoomToFitElements","useIsMobile","confirm","_elements","zoomToSelection","commonBounds","commonBoundsWidth","zoomValueForWidth","commonBoundsHeight","zoomValueForHeight","smallestZoomValue","zoomAdjustedToSteps","zoomValueToFitBoundsOnViewport","newZoom","actionFinalize","marginInlineStart","focusContainer","multiPointElement","isLoop","linePoints","firstPoint","ProjectName","fileName","setFileName","htmlFor","isNameEditable","parent","parentElement","focusNearestParent","isComposing","keyCode","blur","roundRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","getClientColors","clientId","currentUser","sum","charCodeAt","backgrounds","strokes","background","hasEmojiSupport","ctx","textBaseline","getImageData","supportsEmoji","strokeRectWithRotation","strokeRect","fillCircle","arc","strokeGrid","renderLinearPointHandles","lineWidth","setLineDash","renderScene","renderScrollbars","renderSelection","renderGrid","atLeastOneVisibleElement","setTransform","normalizedCanvasWidth","normalizedCanvasHeight","hasTransparence","clearRect","zoomTranslationX","zoomTranslationY","visibleElements","isVisibleElement","suggestedBinding","renderBindingHighlight","selections","selectionColors","remoteSelectedElementIds","socketId","elementX1","elementY1","elementX2","elementY2","addSelectionForGroupId","selection","renderSelectionBorder","locallySelectedElements","renderTransformHandles","dashedLinePadding","initialLineDash","getLineDash","remotePointerViewportCoords","isOutOfBounds","userState","remotePointerUserStates","AWAY","remotePointerButton","username","remotePointerUsernames","idleState","IDLE","ACTIVE","usernameAndIdleState","paddingHorizontal","paddingVertical","measure","measureHeight","actualBoundingBoxDescent","actualBoundingBoxAscent","SCROLLBAR_WIDTH","elementProperties","dashWidth","spaceWidth","lineDashOffset","renderHighlight","renderBindingHighlightForSuggestedPointBinding","renderBindingHighlightForBindableElement","strokeOffset","strokeDiamondWithRotation","strokeEllipseWithRotation","canvasWidth","canvasHeight","viewTransformations","topLeftSceneCoords","bottomRightSceneCoords","renderSceneToSvg","CanvasError","message","AllowedExcalidrawElementTypes","diamond","freedraw","restoreElementWithProperties","extra","base","restoreElement","fontFamilyName","fontPx","_fontFamily","restoreElements","localElements","localElementsMap","migratedElement","localElement","restoreAppState","localAppState","suppliedValue","localValue","parseFileContents","blob","decodePngMetadata","Blob","contents","reader","FileReader","readAsText","onloadend","readyState","DONE","decodeSvgMetadata","svg","getFileHandleType","match","isImageFileHandle","loadFromBlob","parse","isValidExcalidrawData","loadLibraryFromBlob","canvasToBlob","toBlob","serializeAsJSON","source","saveAsJSON","serialized","fileSave","description","extensions","loadFromJSON","fileOpen","isValidLibrary","json","saveLibraryAsJSON","library","loadLibrary","libraryItems","importLibraryFromJSON","importLibrary","SVG_EXPORT_TAG","exportToCanvas","exportPadding","createCanvas","getCanvasSize","exportToSvg","metadata","encodeSvgMetadata","innerHTML","rect","BAR_WIDTH","BAR_GAP","BAR_HEIGHT","NOT_SPREADSHEET","VALID_SPREADSHEET","tryParseNumber","exec","isNumericColumn","columnIndex","tryParseCells","cells","numCols","reason","hasHeader","spreadsheet","labels","valueColumnIndex","labelColumnIndex","rows","row","bgColors","commonProps","getChartDimentions","chartWidth","chartHeight","chartBaseElements","debug","debugRect","chartXLabels","minYLabel","toLocaleString","chartYLabels","chartLines","renderSpreadsheet","chartType","dots","chartTypeLine","bars","barHeight","chartTypeBar","CLIPBOARD","PREFER_APP_CLIPBOARD","probablySupportsClipboardReadText","probablySupportsClipboardWriteText","probablySupportsClipboardBlob","HTMLCanvasElement","copyToClipboard","copyTextToSystemClipboard","getAppClipboard","parsePotentialSpreadsheet","trim","numColsFirstLine","transposedResults","nextCells","col","nextCellRow","transposeCells","tryParseSpreadsheet","getSystemClipboard","clipboardData","getData","readText","parseClipboard","systemClipboard","spreadsheetResult","appClipboardData","systemClipboardData","copyBlobToClipboardAsPng","write","ClipboardItem","copied","writeText","copyTextViaExecCommand","textarea","border","yPosition","pageYOffset","scrollTop","success","select","setSelectionRange","execCommand","exportCanvas","tempSvg","outerHTML","tempCanvas","encodePngMetadata","resaveAsImageWithScene","fileHandleType","CheckboxItem","align","justifyContent","alignItems","justifyItems","ActiveFile","onSave","actionSaveFileToDisk","appProps","allElements","exportedElements","trunc","getExportSize","scaleButtonTitle","fileHandleExists","fsSupported","copiedStyles","loadedElements","loadedAppState","marginTop","marginBottom","actionCopyStyles","actionPasteStyles","pastedElement","HelpIcon","enableActionGroup","requestFullscreen","exitFullscreen","allElementsInSameGroup","actionGroup","selectedGroupId","elementIdsInGroup","updatedElements","lastElementInGroup","lastGroupElementIndex","lastIndexOf","elementsAfterGroup","elementsBeforeGroup","updatedElement","updatedElementsInOrder","contextItemPredicate","actionUngroup","nextGroupIds","removeFromSelectedGroups","Avatar","actionAddToLibrary","collaborator","shortName","names","substring","firstName","lastName","getClientInitials","pointer","app","items","saveLibrary","getMaximumGroups","groups","currentGroupMembers","calculateTranslation","selectionBoundingBox","axis","groupBoundingBox","getCommonBoundingBox","noTranslation","alignSelectedElements","alignment","alignElements","updatedElementsMap","midX","midY","distributeSelectedElements","distribution","mid","end","extent","index0","g","index1","pos","box","distributeElements","actionFlipHorizontal","space","flipSelectedElements","eligibleElements","enableActionFlipHorizontal","actionFlipVertical","enableActionFlipVertical","flipDirection","flipElements","flipElement","rotateElement","originalX","originalY","originalAngle","finalOffsetX","usingNWHandle","newNCoordsX","nHandle","rotationAngle","actionCopy","actionCut","actionCopyAsSvg","_data","actionCopyAsPng","exportSelection","exportColorScheme","actionToggleGridMode","actionToggleZenMode","actionToggleStats","writeData","prevElements","updater","prevElementMap","nextElementMap","prevElement","syncHistory","ActionManager","getAppState","getElementsIncludingDeleted","renderAction","UIOptions","formState","actionResult","registerAction","Library","libraryCache","resetLibrary","onLibraryChange","restoreLibraryItem","libraryItem","libraryItemsFromStorage","prevLibraryItems","serializedItems","libraryFile","isUniqueitem","existingLibraryItems","targetLibraryItem","libItemExcalidrawItem","filtered","restoredItem","getCenter","pointers","allCoords","getDistance","clearAppStatePropertiesForHistory","History","elementCache","recording","stateHistory","redoStack","lastEntry","generateEntry","dehydrateHistoryEntry","dehydratedExcalidrawElement","versions","dehydratedHistoryEntry","hydrateHistoryEntry","nextEntry","newEntryDehydrated","newEntry","shouldCreateEntry","clearRedoStack","entryToRestore","pop","currentEntry","state","pushEntry","SHAPES","shortcutMap","cut","paste","copyStyles","pasteStyles","selectAll","duplicateSelection","sendBackward","bringForward","sendToBack","bringToFront","copyAsPng","copyAsSvg","ungroup","gridMode","zenMode","stats","addToLibrary","flipHorizontal","flipVertical","viewMode","getShortcutFromShortcutName","shortcuts","ContextMenu","actionManager","onContextMenu","actionName","dangerous","checkmark","executeAction","contextMenuNodeByContainer","params","of","render","container","contextMenuNode","unmountComponentAtNode","handleClose","getContextMenuNode","SelectedShapeActions","isEditing","isMobile","showFillIcons","showChangeBackgroundIcons","ShapesSwitcher","setAppState","letter","ZoomActions","BackgroundPickerAndDarkModeToggle","showThemeBtn","CollabButton","isCollaborating","collaboratorCount","supportsContextFilters","ErrorCanvasPreview","renderPreview","previewNode","ExportButton","shade","OpenColor","ImageExportModal","onExportToPng","onExportToSvg","onExportToClipboard","someElementIsSelected","exportSelected","setExportSelected","previewRef","catch","gridTemplateColumns","userSelect","ImageExportDialog","modalIsShown","setModalIsShown","FixedSideContainer","HintViewer","hint","multiMode","targetElement","getHints","Island","PLUS_ICON","LibraryUnit","pendingElements","onRemoveFromLibrary","elementsToRender","child","tagName","isHovered","setIsHovered","adder","onMouseEnter","onMouseLeave","draggable","onDragStart","dataTransfer","setData","LoadingMessage","CHECKED","xmlns","UNCHECKED","LockButton","Section","heading","header","UserList","mobile","UserList_mobile","LIBRARY_ICON","LibraryButton","MobileMenu","libraryMenu","renderJSONExportDialog","renderImageExportDialog","onCollabButtonClick","onLockToggle","renderCustomFooter","marginRight","client","Fragment","ChartPreviewBtn","chartElements","setChartElements","parentNode","PasteChartDialog","onInsertChart","handleChartClick","small","autofocus","Header","href","rel","Columns","flexDirection","flexWrap","Column","ShortcutIsland","caption","Shortcut","flex","isOr","ShortcutKey","HelpDialog","Card","JSONExportModal","exportOpts","onExportToBackend","renderCustomUI","JSONExportDialog","LibraryMenuItems","onAddToLibrary","onInsertShape","setLibraryItems","libraryReturnUrl","numCells","CELLS_PER_ROW","numRows","addedPendingElements","referrer","pathname","shouldAddPendingElements","bind","LibraryMenu","onClickOutside","listener","Element","useOnClickOutside","closest","loadingState","setIsLoading","loadingTimerRef","race","removeFromLibrary","indexToRemove","nextItems","LayerUI","onInsertElements","showExitZenModeBtn","toggleZenMode","renderTopRightUI","createExporter","Separator","closeLibrary","deselectItems","dialogs","shouldRenderSelectedShapeActions","zIndex","maxHeight","renderFixedSideContainer","areEqual","getNecessaryObj","prevAppState","langCode","Stats","boundingBox","selectedBoundingBox","colSpan","renderCustomStats","Toast","clearToast","timerRef","scheduleTimeout","actionToggleViewMode","IsMobileContext","createContext","useContext","ExcalidrawContainerContext","didTapTwice","tappedTwiceTimer","cursorX","cursorY","isHoldingSpace","isPanning","isDraggingScrollBar","currentScrollBars","touchTimeout","invalidateContextMenu","lastPointerUp","gesture","lastCenter","initialDistance","initialScale","App","unmounted","detachIsMobileMqHandler","excalidrawContainerRef","createRef","resizeObserver","nearestScrollableContainer","excalidrawContainerValue","autoFocus","getSceneElementsIncludingDeleted","getSceneElements","syncActionResult","replaceAllElements","gridModeEnabled","setCurrentState","onUnload","disableEvent","onFontLoaded","onSceneUpdated","importLibraryFromUrl","url","token","hash","URLSearchParams","replaceState","search","query","fetch","decodeURIComponent","request","numShapes","alert","resetHistory","resetScene","resetLoadingState","initializeScene","launchQueue","setConsumer","launchParams","files","getFile","initialData","scrollToContent","libraryUrl","onResize","onScroll","getCanvasOffsets","onCut","cutAll","onCopy","copyAll","onTapStart","resetTapTwice","touches","handleCanvasDoubleClick","onTapEnd","pasteFromClipboard","elementUnderCursor","elementFromPoint","onPaste","addElementsFromPasteOrLibrary","addTextFromPaste","selectShapeTool","elementsCenterX","elementsCenterY","dx","dy","gridX","gridY","obj","removePointer","pointerId","toggleLock","prevState","toggleStats","setToastMessage","restoreFileFromShare","caches","open","webShareTargetCache","loadFileToCanvas","updateScene","sceneData","updateCurrentCursorPosition","Proxy","ev","prop","HTMLSelectElement","handleKeyDown","maybeSuggestBindingForAll","selectedElement","startTextEditing","findShapeByKey","onKeyUp","onGestureStart","onGestureChange","onGestureEnd","insertAtParentCenter","existingTextElement","getTextElementAtPosition","parentCenterPosition","getTextWysiwygSnappedToCenterPosition","elementCenterX","elementCenterY","handleTextWysiwyg","isExistingElement","getSelectedGroupIdForElement","handleCanvasPointerMove","savePointer","scaleFactor","resetShouldCacheIgnoreZoomDebounced","isOverScrollBar","handlePointerMove","maybeSuggestBindingAtCursor","maybeSuggestBindingForLinearElementAtCursor","buttons","elementWithTransformHandleType","isHittingCommonBoundingBoxOfSelectedElements","handleTouchMove","handleCanvasPointerDown","getSelection","anchorNode","removeAllRanges","maybeOpenContextMenuAfterPointerDownOnTouchDevices","maybeCleanupAfterMissingPointerUp","handleCanvasPanUsingWheelOrSpaceDrag","button","updateGestureOnPointerDown","initialPointerDownState","handleDraggingScrollBar","clearSelectionIfNotUsingSelection","updateBindingEnabledOnPointerMove","handleSelectionOnPointerDown","handleLinearElementOnPointerDown","handleFreeDrawElementOnPointerDown","createGenericElementOnPointerDown","onPointerMove","onPointerMoveFromPointerDownHandler","onPointerUp","onPointerUpFromPointerDownHandler","onKeyDownFromPointerDownHandler","onKeyUpFromPointerDownHandler","POINTER_MOVE","POINTER_UP","KEYDOWN","KEYUP","eventListeners","onMove","onUp","handleTextOnPointerDown","handleCanvasContextMenu","nextPastePrevented","isLinux","lastX","lastY","preventNextPaste","PASTE","enableNextPaste","teardown","BLUR","passive","resize","handleType","getResizeOffsetXY","arrowDirection","getResizeArrowDirection","handlePointerDown","hit","allHitElements","getElementsAtPosition","someHitElementIsSelected","isASelectedElement","hasHitCommonBoundingBoxOfSelectedElements","clearSelection","wasAddedToSelection","pressure","shouldEnableBinding","shouldEnableBindingForPointerEvent","hoveredBindableElement","oppositeBindingBoundElement","handleCanvasRef","handleWheel","TOUCH_START","TOUCH_END","handleAppOnDrop","getAsFileSystemHandle","libraryShapes","endsWith","preferSelected","_openContextMenu","maybeDragNewGenericElement","lastCoords","originInGrid","maybeHandleResize","resizeX","resizeY","transformElements","maybeGroupAction","maybeUngroupAction","maybeFlipHorizontal","maybeFlipVertical","separator","appStates","viewModeOptions","log10","isNaN","onPointerUpdate","pointersMap","updateDOMRect","currentWidth","currentHeight","currentOffsetTop","currentOffsetLeft","refresh","excalidrawRef","readyPromise","api","ready","registerAll","undoOnce","redoOnce","createRedoAction","canvasScale","canvasDOMWidth","canvasDOMHeight","onPointerCancel","onTouchMove","onPointerDown","onDoubleClick","renderFooter","onDrop","handleKeyboardGlobally","Provider","renderCanvas","defineProperties","configurable","addCallback","addEventListeners","ResizeObserver","observe","matchMedia","mediaQuery","matches","addListener","removeListener","disconnect","removeEventListeners","destroy","COPY","CUT","SCROLL","MOUSE_MOVE","RESIZE","UNLOAD","DRAG_OVER","DROP","GESTURE_START","GESTURE_CHANGE","GESTURE_END","fonts","detectScroll","overflowY","scrollHeight","clientHeight","getNearestScrollableContainer","prevProps","updateLanguage","deselectElements","toggle","pointerViewportCoords","pointerUsernames","pointerUserStates","user","record","updateElement","_element","onSubmit","getViewportCoords","excalidrawContainer","updateWysiwygStyle","viewportX","viewportY","editable","wrap","minHeight","backfaceVisibility","outline","oninput","onkeydown","submittedViaKeyboard","handleSubmit","outdent","indent","dispatchEvent","Event","TAB","repeat","RE_LEADING_TAB","selectionStart","selectionEnd","linesStartIndices","getSelectedLinesStartIndices","startIndex","startValue","endValue","removedTabs","tabMatch","startOffset","startIndices","stopEvent","cleanup","viaKeyboard","isDestroyed","onblur","observer","bindBlurEvent","unbindUpdate","SVGElement","capture","textWysiwyg","elementWithHighestZIndex","hitTest","withCmdOrCtrl","scrollbars","hasBeenDuplicated","drag","hasOccurred","handlePointerMoveOverScrollbars","getDragOffsetXY","handlePointDragging","dragX","dragY","dragDistanceX","dragDistanceY","lockDirection","distanceX","distanceY","lockX","lockY","original","dragSelectedElements","elementsToAppend","duplicatedElement","originDragX","originDragY","nextSceneElements","elementsWithinSelection","selectionX1","selectionY1","selectionX2","selectionY2","getElementsWithinSelection","childEvent","handlePointerUp","idsOfSelectedElementsThatAreInGroups","prevId","_prevState","gId","includedElementIds","getEligibleElementsForBinding","elementClickedInside","getElementContainingPosition","Component","Modal","modalRoot","useBodyRoot","createPortal","labelledBy","setDiv","isMobileRef","isDarkTheme","Dialog","islandNode","setIslandNode","lastActiveElement","focusableElements","queryFocusableElements","currentIndex","querySelectorAll","ErrorDialog","TopErrorBoundary","hasError","sentryEventId","localStorage","errorSplash","errorInfo","_localStorage","Sentry","scope","setExtras","eventId","templateStrFn","default","encodeURIComponent","reload","createGithubIssue","selectTextArea","readOnly","__webpack_public_path__","EXCALIDRAW_ASSET_PATH","pkg","SCENE","InitializeApp","Excalidraw","nextProps","prevUIOptions","nextUIOptions","prevUIOptionsKeys","nextUIOptionsKeys","isUIOptionsSame","prevKeys","nextKeys","forwardedRefComp","BROADCAST","byteToHex","byte","generateRandomID","Uint8Array","crypto","getRandomValues","generateEncryptionKey","subtle","generateKey","exportKey","createIV","encryptAESGEM","getImportedKey","importedKey","iv","encrypt","decryptAESGEM","decrypt","decrypted","decodedData","TextDecoder","decode","getCollaborationLinkData","URL","roomId","roomKey","generateCollaborationLinkData","usage","importKey","alg","ext","key_ops","kty","decryptImported","encrypted","privateKey","importFromBackend","response","ok","arrayBuffer","buffer","byteLength","fixedIv","string","localDataState","exportToBackend","encoded","TextEncoder","encode","payloadBlob","Response","payload","exportedKey","method","urlString","prompt","error_class","firebasePromise","firestorePromise","firebseStoragePromise","_loadFirebase","firebase","firebaseConfig","initializeApp","_getFirebase","loadFirestore","loadFirebaseStorage","encryptElements","ciphertext","decryptElements","firebaseSceneVersionCache","isSavedToFirebase","portal","socket","sceneVersion","saveToFirebase","nextDocData","firestore","fromUint8Array","docRef","collection","doc","runTransaction","transaction","exists","update","didUpdate","loadFromFirebase","storedScene","toUint8Array","importUsernameFromLocalStorage","getItem","importFromLocalStorage","savedElements","savedState","getElementsStorageSize","getTotalStorageSize","collab","APP_STORAGE_KEYS","Portal","socketInitialized","broadcastedElementVersions","broadcastScene","sceneType","syncableElements","syncAll","INIT","syncableElement","broadcastPromise","_broadcastSocketData","saveCollabRoomToFirebase","broadcastIdleChange","broadcastMouseLocation","excalidrawAPI","on","emit","_socketId","getSyncableElements","clients","setCollaborators","volatile","isOpen","getShareIcon","isAppleBrowser","vendor","isWindowsBrowser","appVersion","RoomDialog","activeRoomLink","onUsernameChange","onRoomCreate","onRoomDestroy","setErrorMessage","roomLinkInput","copyRoomLink","shareRoomLink","selectInput","onKeyPress","initialValue","Context","InverseConsumer","_updateProviderValue","InverseProvider","Consumer","createInverseContext","CollabContext","CollabContextConsumer","CollabContextProvider","CollabWrapper","activeIntervalId","idleTimeoutId","socketInitializationTimer","lastBroadcastedOrReceivedSceneVersion","destroySocketClient","isUnload","beforeUnload","returnValue","setItem","timestamp","room","openPortal","initializeSocketClient","closePortal","pushState","existingRoomLinkData","scenePromise","socketIOClient","initializeSocket","encryptedData","decryptedData","UPDATE","remoteElements","reconciledElements","reconcileElements","handleRemoteSceneUpdate","init","socketID","off","initializeIdleDetector","currentElements","localElementMap","setLastBroadcastedOrReceivedSceneVersion","reportIdle","setInterval","reportActive","onVisibilityChange","clearInterval","onIdleStateChange","VISIBILITY_CHANGE","getLastBroadcastedOrReceivedSceneVersion","broadcastElements","queueBroadcastAllElements","throttle","currentVersion","newVersion","saveUsernameToLocalStorage","contextValue","getContextValue","BEFORE_UNLOAD","sockets","PureComponent","LanguageList","i18n","currentLangCode","getStorageSizes","total","CustomStats","storageSizes","setStorageSizes","sizes","excalidrawPlusIcon","encryptData","exportToExcalidrawPlus","storage","put","customMetadata","created","ExportToExcalidrawPlus","onError","languageDetector","LanguageDetector","languageUtils","formatLanguageCode","isWhitelisted","checkWhitelist","saveDebounced","saveToLocalStorage","searchParams","jsonBackendMatch","externalUrlMatch","roomLinkData","once","collabAPI","PlusLinkJSX","unicodeBidi","ExcalidrawWrapper","detect","setLangCode","initialStatePromiseRef","excalidrawRefCallback","onHashChange","oldURL","titleTimeout","HASHCHANGE","cacheUserLanguage","renderLanguageList","isTinyDevice","borderRadius","removeItem","ExcalidrawApp","isLocalhost","hostname","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","info","onUpdate","onSuccess","checkValidServiceWorker","headers","contentType","status","unregister","userAgent","registerServiceWorker","waitingServiceWorker","waiting","STATE_CHANGE","postMessage","SentryEnvHostnameMap","onlineEnv","REACT_APP_DISABLE_SENTRY","dsn","environment","release","ignoreErrors","integrations","SentryIntegrations","levels","beforeSend","__EXCALIDRAW_SHA__","ReactDOM","getElementById"],"mappings":"yGAAA,49CA4BYA,EA5BZ,iBAIaC,EAAW,aAEXC,EAAqB,GACrBC,EAAyB,EACzBC,EAAiC,EACjCC,EAA2B,EAC3BC,EAAgC,GAChCC,EAAsBC,KAAKC,GAAK,GAChCC,EAAc,CACzBC,KAAM,OACNC,UAAW,YACXC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,KAAM,OACNC,KAAM,IAEKC,EAAiB,CAC5BC,KAAM,EACNC,MAAO,EACPC,UAAW,EACXC,OAAQ,I,SAGEtB,K,YAAAA,E,cAAAA,E,UAAAA,E,kBAAAA,E,cAAAA,E,uBAAAA,E,gBAAAA,E,gBAAAA,E,YAAAA,E,qBAAAA,E,YAAAA,E,yBAAAA,E,6BAAAA,E,6BAAAA,E,+BAAAA,E,2BAAAA,E,uBAAAA,E,2BAAAA,E,cAAAA,E,yBAAAA,E,qBAAAA,E,wBAAAA,E,qCAAAA,E,iBAAAA,M,KA2BL,IAAMuB,EAAM,CACjBC,KAAM,OACNC,YAAa,eAGFC,EAAU,CACrBC,mBAAoB,kBAITC,EAAc,CACzBC,OAAQ,EACRC,UAAW,EACXC,SAAU,GAGCC,EAA8B,iBAE9BC,EAAoB,GACpBC,EAAwCN,EAAYC,OACpDM,EAAqB,OACrBC,EAAyB,MACzBC,EAAkB,YAIlBC,EAAY,GAEZC,EAAa,CACxBC,WAAY,kCACZC,cAAe,sCAGJC,EAAoB,CAC/BF,WAAY,aACZG,oBAAqB,uBACrBC,kBAAmB,iBAGRC,EAAgBC,OAAOC,SAASC,OAEhCC,EAAe,CAC1BC,sBAAuB,sBAIZC,EAAoB,IACpBC,EAAyB,IACzBC,EAAgB,IAChBC,EAAgB,IAChBC,EAAkB,IAClBC,EAAiB,IACjBC,EAAY,GAGZC,EAAiB,IAEjBC,EAAmB,IAEnBC,EAAQ,CACnBC,KAAM,WACNC,IAAK,UACLC,KAAM,YAGKC,EAAeC,IAAaC,YAE5BC,EAAiB,CAC5BC,WAAY,cAGDC,EAAgB,CAC3BD,WAAY,cAGDE,EAA4C,CACvDC,cAAe,CACbC,2BAA2B,EAC3BC,aAAa,EACbC,OAAQ,CAAEC,gBAAgB,GAC1BC,WAAW,EACXC,kBAAkB,EAClBC,OAAO,EACPC,aAAa,IAIJC,EAAwB,IACxBC,EAAyB,IACzBC,EAA0B,IAE1BC,EAA8B,EAE9BC,EAAgB,CAAC,EAAG,EAAG,GACvBC,EAAyB,I,kGCrJ/B,IAAMC,EACQ,qBAAZC,IAAP,UACAA,o3BADA,aACA,EAAaC,gCACK,qBAAX1C,QACPA,OAAO2C,KACH,SAACC,EAAkBC,EAAcC,EAAgBC,GAC/C/C,OAAO2C,KAAK,QAASE,EAAM,CACzBG,eAAgBJ,EAChBK,YAAaH,EACbC,YAGe,qBAAZN,IAAP,UAAkCA,o3BAAlC,OAAkC,EAAaS,gBAC/C,SAACN,EAAkBC,EAAcC,EAAgBC,Q,2kbCZvDI,EAAOC,QAAU,CAAC,YAAc,mC,6BCDhC,IAAIC,EAAM,CACT,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,GAED,eAAgB,CACf,IACA,IAED,YAAa,CACZ,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,iBAAkB,CACjB,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,qBAAsB,CACrB,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,IAED,eAAgB,CACf,IACA,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","file":"static/js/main.dd105873.chunk.js","sourcesContent":["import cssVariables from \"./css/variables.module.scss\";\nimport { AppProps } from \"./types\";\nimport { FontFamilyValues } from \"./element/types\";\n\nexport const APP_NAME = \"Excalidraw\";\n\nexport const DRAGGING_THRESHOLD = 10; // px\nexport const LINE_CONFIRM_THRESHOLD = 8; // px\nexport const ELEMENT_SHIFT_TRANSLATE_AMOUNT = 5;\nexport const ELEMENT_TRANSLATE_AMOUNT = 1;\nexport const TEXT_TO_CENTER_SNAP_THRESHOLD = 30;\nexport const SHIFT_LOCKING_ANGLE = Math.PI / 12;\nexport const CURSOR_TYPE = {\n  TEXT: \"text\",\n  CROSSHAIR: \"crosshair\",\n  GRABBING: \"grabbing\",\n  GRAB: \"grab\",\n  POINTER: \"pointer\",\n  MOVE: \"move\",\n  AUTO: \"\",\n};\nexport const POINTER_BUTTON = {\n  MAIN: 0,\n  WHEEL: 1,\n  SECONDARY: 2,\n  TOUCH: -1,\n};\n\nexport enum EVENT {\n  COPY = \"copy\",\n  PASTE = \"paste\",\n  CUT = \"cut\",\n  KEYDOWN = \"keydown\",\n  KEYUP = \"keyup\",\n  MOUSE_MOVE = \"mousemove\",\n  RESIZE = \"resize\",\n  UNLOAD = \"unload\",\n  BLUR = \"blur\",\n  DRAG_OVER = \"dragover\",\n  DROP = \"drop\",\n  GESTURE_END = \"gestureend\",\n  BEFORE_UNLOAD = \"beforeunload\",\n  GESTURE_START = \"gesturestart\",\n  GESTURE_CHANGE = \"gesturechange\",\n  POINTER_MOVE = \"pointermove\",\n  POINTER_UP = \"pointerup\",\n  STATE_CHANGE = \"statechange\",\n  WHEEL = \"wheel\",\n  TOUCH_START = \"touchstart\",\n  TOUCH_END = \"touchend\",\n  HASHCHANGE = \"hashchange\",\n  VISIBILITY_CHANGE = \"visibilitychange\",\n  SCROLL = \"scroll\",\n}\n\nexport const ENV = {\n  TEST: \"test\",\n  DEVELOPMENT: \"development\",\n};\n\nexport const CLASSES = {\n  SHAPE_ACTIONS_MENU: \"App-menu__left\",\n};\n\n// 1-based in case we ever do `if(element.fontFamily)`\nexport const FONT_FAMILY = {\n  Virgil: 1,\n  Helvetica: 2,\n  Cascadia: 3,\n};\n\nexport const WINDOWS_EMOJI_FALLBACK_FONT = \"Segoe UI Emoji\";\n\nexport const DEFAULT_FONT_SIZE = 20;\nexport const DEFAULT_FONT_FAMILY: FontFamilyValues = FONT_FAMILY.Virgil;\nexport const DEFAULT_TEXT_ALIGN = \"left\";\nexport const DEFAULT_VERTICAL_ALIGN = \"top\";\nexport const DEFAULT_VERSION = \"{version}\";\n\nexport const CANVAS_ONLY_ACTIONS = [\"selectAll\"];\n\nexport const GRID_SIZE = 20; // TODO make it configurable?\n\nexport const MIME_TYPES = {\n  excalidraw: \"application/vnd.excalidraw+json\",\n  excalidrawlib: \"application/vnd.excalidrawlib+json\",\n};\n\nexport const EXPORT_DATA_TYPES = {\n  excalidraw: \"excalidraw\",\n  excalidrawClipboard: \"excalidraw/clipboard\",\n  excalidrawLibrary: \"excalidrawlib\",\n} as const;\n\nexport const EXPORT_SOURCE = window.location.origin;\n\nexport const STORAGE_KEYS = {\n  LOCAL_STORAGE_LIBRARY: \"excalidraw-library\",\n} as const;\n\n// time in milliseconds\nexport const TAP_TWICE_TIMEOUT = 300;\nexport const TOUCH_CTX_MENU_TIMEOUT = 500;\nexport const TITLE_TIMEOUT = 10000;\nexport const TOAST_TIMEOUT = 5000;\nexport const VERSION_TIMEOUT = 30000;\nexport const SCROLL_TIMEOUT = 100;\nexport const ZOOM_STEP = 0.1;\n\n// Report a user inactive after IDLE_THRESHOLD milliseconds\nexport const IDLE_THRESHOLD = 60_000;\n// Report a user active each ACTIVE_THRESHOLD milliseconds\nexport const ACTIVE_THRESHOLD = 3_000;\n\nexport const MODES = {\n  VIEW: \"viewMode\",\n  ZEN: \"zenMode\",\n  GRID: \"gridMode\",\n};\n\nexport const THEME_FILTER = cssVariables.themeFilter;\n\nexport const URL_QUERY_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const URL_HASH_KEYS = {\n  addLibrary: \"addLibrary\",\n} as const;\n\nexport const DEFAULT_UI_OPTIONS: AppProps[\"UIOptions\"] = {\n  canvasActions: {\n    changeViewBackgroundColor: true,\n    clearCanvas: true,\n    export: { saveFileToDisk: true },\n    loadScene: true,\n    saveToActiveFile: true,\n    theme: true,\n    saveAsImage: true,\n  },\n};\n\nexport const MQ_MAX_WIDTH_PORTRAIT = 730;\nexport const MQ_MAX_WIDTH_LANDSCAPE = 1000;\nexport const MQ_MAX_HEIGHT_LANDSCAPE = 500;\n\nexport const MAX_DECIMALS_FOR_SVG_EXPORT = 2;\n\nexport const EXPORT_SCALES = [1, 2, 3];\nexport const DEFAULT_EXPORT_PADDING = 10; // px\n","export const trackEvent =\n  typeof process !== \"undefined\" &&\n  process.env?.REACT_APP_GOOGLE_ANALYTICS_ID &&\n  typeof window !== \"undefined\" &&\n  window.gtag\n    ? (category: string, name: string, label?: string, value?: number) => {\n        window.gtag(\"event\", name, {\n          event_category: category,\n          event_label: label,\n          value,\n        });\n      }\n    : typeof process !== \"undefined\" && process.env?.JEST_WORKER_ID\n    ? (category: string, name: string, label?: string, value?: number) => {}\n    : (category: string, name: string, label?: string, value?: number) => {\n        // Uncomment the next line to track locally\n        // console.info(\"Track Event\", category, name, label, value);\n      };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeFilter\":\"invert(93%) hue-rotate(180deg)\"};","var map = {\n\t\"./ar-SA.json\": [\n\t\t106,\n\t\t4\n\t],\n\t\"./bg-BG.json\": [\n\t\t107,\n\t\t5\n\t],\n\t\"./ca-ES.json\": [\n\t\t108,\n\t\t6\n\t],\n\t\"./cs-CZ.json\": [\n\t\t109,\n\t\t7\n\t],\n\t\"./da-DK.json\": [\n\t\t110,\n\t\t8\n\t],\n\t\"./de-DE.json\": [\n\t\t111,\n\t\t9\n\t],\n\t\"./el-GR.json\": [\n\t\t112,\n\t\t10\n\t],\n\t\"./en.json\": [\n\t\t50\n\t],\n\t\"./es-ES.json\": [\n\t\t113,\n\t\t11\n\t],\n\t\"./fa-IR.json\": [\n\t\t114,\n\t\t12\n\t],\n\t\"./fi-FI.json\": [\n\t\t115,\n\t\t13\n\t],\n\t\"./fr-FR.json\": [\n\t\t116,\n\t\t14\n\t],\n\t\"./he-IL.json\": [\n\t\t117,\n\t\t15\n\t],\n\t\"./hi-IN.json\": [\n\t\t118,\n\t\t16\n\t],\n\t\"./hu-HU.json\": [\n\t\t119,\n\t\t17\n\t],\n\t\"./id-ID.json\": [\n\t\t120,\n\t\t18\n\t],\n\t\"./it-IT.json\": [\n\t\t121,\n\t\t19\n\t],\n\t\"./ja-JP.json\": [\n\t\t122,\n\t\t20\n\t],\n\t\"./kab-KAB.json\": [\n\t\t123,\n\t\t21\n\t],\n\t\"./kk-KZ.json\": [\n\t\t124,\n\t\t22\n\t],\n\t\"./ko-KR.json\": [\n\t\t125,\n\t\t23\n\t],\n\t\"./lv-LV.json\": [\n\t\t126,\n\t\t24\n\t],\n\t\"./my-MM.json\": [\n\t\t127,\n\t\t25\n\t],\n\t\"./nb-NO.json\": [\n\t\t128,\n\t\t26\n\t],\n\t\"./nl-NL.json\": [\n\t\t129,\n\t\t27\n\t],\n\t\"./nn-NO.json\": [\n\t\t130,\n\t\t28\n\t],\n\t\"./oc-FR.json\": [\n\t\t131,\n\t\t29\n\t],\n\t\"./pa-IN.json\": [\n\t\t132,\n\t\t30\n\t],\n\t\"./percentages.json\": [\n\t\t51\n\t],\n\t\"./pl-PL.json\": [\n\t\t133,\n\t\t31\n\t],\n\t\"./pt-BR.json\": [\n\t\t134,\n\t\t32\n\t],\n\t\"./pt-PT.json\": [\n\t\t135,\n\t\t33\n\t],\n\t\"./ro-RO.json\": [\n\t\t136,\n\t\t34\n\t],\n\t\"./ru-RU.json\": [\n\t\t137,\n\t\t35\n\t],\n\t\"./sk-SK.json\": [\n\t\t138,\n\t\t36\n\t],\n\t\"./sv-SE.json\": [\n\t\t139,\n\t\t37\n\t],\n\t\"./tr-TR.json\": [\n\t\t140,\n\t\t38\n\t],\n\t\"./uk-UA.json\": [\n\t\t141,\n\t\t39\n\t],\n\t\"./zh-CN.json\": [\n\t\t142,\n\t\t40\n\t],\n\t\"./zh-TW.json\": [\n\t\t143,\n\t\t41\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 70;\nmodule.exports = webpackAsyncContext;","import fallbackLangData from \"./locales/en.json\";\nimport percentages from \"./locales/percentages.json\";\nimport { ENV } from \"./constants\";\n\nconst COMPLETION_THRESHOLD = 85;\n\nexport interface Language {\n  code: string;\n  label: string;\n  rtl?: boolean;\n}\n\nexport const defaultLang = { code: \"en\", label: \"English\" };\n\nconst allLanguages: Language[] = [\n  { code: \"ar-SA\", label: \"العربية\", rtl: true },\n  { code: \"bg-BG\", label: \"Български\" },\n  { code: \"ca-ES\", label: \"Català\" },\n  { code: \"de-DE\", label: \"Deutsch\" },\n  { code: \"el-GR\", label: \"Ελληνικά\" },\n  { code: \"es-ES\", label: \"Español\" },\n  { code: \"fa-IR\", label: \"فارسی\", rtl: true },\n  { code: \"fi-FI\", label: \"Suomi\" },\n  { code: \"fr-FR\", label: \"Français\" },\n  { code: \"he-IL\", label: \"עברית\", rtl: true },\n  { code: \"hi-IN\", label: \"हिन्दी\" },\n  { code: \"hu-HU\", label: \"Magyar\" },\n  { code: \"id-ID\", label: \"Bahasa Indonesia\" },\n  { code: \"it-IT\", label: \"Italiano\" },\n  { code: \"ja-JP\", label: \"日本語\" },\n  { code: \"kab-KAB\", label: \"Taqbaylit\" },\n  { code: \"ko-KR\", label: \"한국어\" },\n  { code: \"my-MM\", label: \"Burmese\" },\n  { code: \"nb-NO\", label: \"Norsk bokmål\" },\n  { code: \"nl-NL\", label: \"Nederlands\" },\n  { code: \"nn-NO\", label: \"Norsk nynorsk\" },\n  { code: \"oc-FR\", label: \"Occitan\" },\n  { code: \"pa-IN\", label: \"ਪੰਜਾਬੀ\" },\n  { code: \"pl-PL\", label: \"Polski\" },\n  { code: \"pt-BR\", label: \"Português Brasileiro\" },\n  { code: \"pt-PT\", label: \"Português\" },\n  { code: \"ro-RO\", label: \"Română\" },\n  { code: \"ru-RU\", label: \"Русский\" },\n  { code: \"sk-SK\", label: \"Slovenčina\" },\n  { code: \"sv-SE\", label: \"Svenska\" },\n  { code: \"tr-TR\", label: \"Türkçe\" },\n  { code: \"uk-UA\", label: \"Українська\" },\n  { code: \"zh-CN\", label: \"简体中文\" },\n  { code: \"zh-TW\", label: \"繁體中文\" },\n  { code: \"lv-LV\", label: \"Latviešu\" },\n  { code: \"cs-CZ\", label: \"Česky\" },\n  { code: \"kk-KZ\", label: \"Қазақ тілі\" },\n].concat([defaultLang]);\n\nexport const languages: Language[] = allLanguages\n  .sort((left, right) => (left.label > right.label ? 1 : -1))\n  .filter(\n    (lang) =>\n      (percentages as Record<string, number>)[lang.code] >=\n      COMPLETION_THRESHOLD,\n  );\n\nconst TEST_LANG_CODE = \"__test__\";\nif (process.env.NODE_ENV === ENV.DEVELOPMENT) {\n  languages.unshift(\n    { code: TEST_LANG_CODE, label: \"test language\" },\n    {\n      code: `${TEST_LANG_CODE}.rtl`,\n      label: \"\\u{202a}test language (rtl)\\u{202c}\",\n      rtl: true,\n    },\n  );\n}\n\nlet currentLang: Language = defaultLang;\nlet currentLangData = {};\n\nexport const setLanguage = async (lang: Language) => {\n  currentLang = lang;\n  document.documentElement.dir = currentLang.rtl ? \"rtl\" : \"ltr\";\n  document.documentElement.lang = currentLang.code;\n\n  if (lang.code.startsWith(TEST_LANG_CODE)) {\n    currentLangData = {};\n  } else {\n    currentLangData = await import(\n      /* webpackChunkName: \"i18n-[request]\" */ `./locales/${currentLang.code}.json`\n    );\n  }\n};\n\nexport const getLanguage = () => currentLang;\n\nconst findPartsForData = (data: any, parts: string[]) => {\n  for (let index = 0; index < parts.length; ++index) {\n    const part = parts[index];\n    if (data[part] === undefined) {\n      return undefined;\n    }\n    data = data[part];\n  }\n  if (typeof data !== \"string\") {\n    return undefined;\n  }\n  return data;\n};\n\nexport const t = (path: string, replacement?: { [key: string]: string }) => {\n  if (currentLang.code.startsWith(TEST_LANG_CODE)) {\n    const name = replacement\n      ? `${path}(${JSON.stringify(replacement).slice(1, -1)})`\n      : path;\n    return `\\u{202a}[[${name}]]\\u{202c}`;\n  }\n\n  const parts = path.split(\".\");\n  let translation =\n    findPartsForData(currentLangData, parts) ||\n    findPartsForData(fallbackLangData, parts);\n  if (translation === undefined) {\n    throw new Error(`Can't find translation for ${path}`);\n  }\n\n  if (replacement) {\n    for (const key in replacement) {\n      translation = translation.replace(`{{${key}}}`, replacement[key]);\n    }\n  }\n  return translation;\n};\n","import oc from \"open-color\";\n\nconst shades = (index: number) => [\n  oc.red[index],\n  oc.pink[index],\n  oc.grape[index],\n  oc.violet[index],\n  oc.indigo[index],\n  oc.blue[index],\n  oc.cyan[index],\n  oc.teal[index],\n  oc.green[index],\n  oc.lime[index],\n  oc.yellow[index],\n  oc.orange[index],\n];\n\nexport default {\n  canvasBackground: [oc.white, oc.gray[0], oc.gray[1], ...shades(0)],\n  elementBackground: [\"transparent\", oc.gray[4], oc.gray[6], ...shades(6)],\n  elementStroke: [oc.black, oc.gray[8], oc.gray[7], ...shades(9)],\n};\n","export const isDarwin = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\nexport const isWindows = /^Win/.test(window.navigator.platform);\n\nexport const CODES = {\n  EQUAL: \"Equal\",\n  MINUS: \"Minus\",\n  NUM_ADD: \"NumpadAdd\",\n  NUM_SUBTRACT: \"NumpadSubtract\",\n  NUM_ZERO: \"Numpad0\",\n  BRACKET_RIGHT: \"BracketRight\",\n  BRACKET_LEFT: \"BracketLeft\",\n  ONE: \"Digit1\",\n  TWO: \"Digit2\",\n  NINE: \"Digit9\",\n  QUOTE: \"Quote\",\n  ZERO: \"Digit0\",\n  SLASH: \"Slash\",\n  C: \"KeyC\",\n  D: \"KeyD\",\n  G: \"KeyG\",\n  F: \"KeyF\",\n  H: \"KeyH\",\n  V: \"KeyV\",\n  X: \"KeyX\",\n  Z: \"KeyZ\",\n  R: \"KeyR\",\n} as const;\n\nexport const KEYS = {\n  ARROW_DOWN: \"ArrowDown\",\n  ARROW_LEFT: \"ArrowLeft\",\n  ARROW_RIGHT: \"ArrowRight\",\n  ARROW_UP: \"ArrowUp\",\n  BACKSPACE: \"Backspace\",\n  ALT: \"Alt\",\n  CTRL_OR_CMD: isDarwin ? \"metaKey\" : \"ctrlKey\",\n  DELETE: \"Delete\",\n  ENTER: \"Enter\",\n  ESCAPE: \"Escape\",\n  QUESTION_MARK: \"?\",\n  SPACE: \" \",\n  TAB: \"Tab\",\n\n  A: \"a\",\n  D: \"d\",\n  E: \"e\",\n  G: \"g\",\n  L: \"l\",\n  O: \"o\",\n  P: \"p\",\n  Q: \"q\",\n  R: \"r\",\n  S: \"s\",\n  T: \"t\",\n  V: \"v\",\n  X: \"x\",\n  Y: \"y\",\n  Z: \"z\",\n} as const;\n\nexport type Key = keyof typeof KEYS;\n\nexport const isArrowKey = (key: string) =>\n  key === KEYS.ARROW_LEFT ||\n  key === KEYS.ARROW_RIGHT ||\n  key === KEYS.ARROW_DOWN ||\n  key === KEYS.ARROW_UP;\n\nexport const getResizeCenterPointKey = (event: MouseEvent | KeyboardEvent) =>\n  event.altKey;\n\nexport const getResizeWithSidesSameLengthKey = (\n  event: MouseEvent | KeyboardEvent,\n) => event.shiftKey;\n\nexport const getRotateWithDiscreteAngleKey = (\n  event: MouseEvent | KeyboardEvent,\n) => event.shiftKey;\n","import colors from \"./colors\";\nimport {\n  CURSOR_TYPE,\n  DEFAULT_VERSION,\n  FONT_FAMILY,\n  WINDOWS_EMOJI_FALLBACK_FONT,\n} from \"./constants\";\nimport { FontFamilyValues, FontString } from \"./element/types\";\nimport { Zoom } from \"./types\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { isDarwin } from \"./keys\";\n\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\n\nlet mockDateTime: string | null = null;\n\nexport const setDateTimeForTests = (dateTime: string) => {\n  mockDateTime = dateTime;\n};\n\nexport const getDateTime = () => {\n  if (mockDateTime) {\n    return mockDateTime;\n  }\n\n  const date = new Date();\n  const year = date.getFullYear();\n  const month = `${date.getMonth() + 1}`.padStart(2, \"0\");\n  const day = `${date.getDate()}`.padStart(2, \"0\");\n  const hr = `${date.getHours()}`.padStart(2, \"0\");\n  const min = `${date.getMinutes()}`.padStart(2, \"0\");\n\n  return `${year}-${month}-${day}-${hr}${min}`;\n};\n\nexport const capitalizeString = (str: string) =>\n  str.charAt(0).toUpperCase() + str.slice(1);\n\nexport const isToolIcon = (\n  target: Element | EventTarget | null,\n): target is HTMLElement =>\n  target instanceof HTMLElement && target.className.includes(\"ToolIcon\");\n\nexport const isInputLike = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLSelectElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLInputElement ||\n  target instanceof HTMLTextAreaElement ||\n  target instanceof HTMLSelectElement;\n\nexport const isWritableElement = (\n  target: Element | EventTarget | null,\n): target is\n  | HTMLInputElement\n  | HTMLTextAreaElement\n  | HTMLBRElement\n  | HTMLDivElement =>\n  (target instanceof HTMLElement && target.dataset.type === \"wysiwyg\") ||\n  target instanceof HTMLBRElement || // newline in wysiwyg\n  target instanceof HTMLTextAreaElement ||\n  (target instanceof HTMLInputElement &&\n    (target.type === \"text\" || target.type === \"number\"));\n\nexport const getFontFamilyString = ({\n  fontFamily,\n}: {\n  fontFamily: FontFamilyValues;\n}) => {\n  for (const [fontFamilyString, id] of Object.entries(FONT_FAMILY)) {\n    if (id === fontFamily) {\n      return `${fontFamilyString}, ${WINDOWS_EMOJI_FALLBACK_FONT}`;\n    }\n  }\n  return WINDOWS_EMOJI_FALLBACK_FONT;\n};\n\n/** returns fontSize+fontFamily string for assignment to DOM elements */\nexport const getFontString = ({\n  fontSize,\n  fontFamily,\n}: {\n  fontSize: number;\n  fontFamily: FontFamilyValues;\n}) => {\n  return `${fontSize}px ${getFontFamilyString({ fontFamily })}` as FontString;\n};\n\n// https://github.com/grassator/canvas-text-editor/blob/master/lib/FontMetrics.js\nexport const measureText = (text: string, font: FontString) => {\n  const line = document.createElement(\"div\");\n  const body = document.body;\n  line.style.position = \"absolute\";\n  line.style.whiteSpace = \"pre\";\n  line.style.font = font;\n  body.appendChild(line);\n  line.innerText = text\n    .split(\"\\n\")\n    // replace empty lines with single space because leading/trailing empty\n    // lines would be stripped from computation\n    .map((x) => x || \" \")\n    .join(\"\\n\");\n  const width = line.offsetWidth;\n  const height = line.offsetHeight;\n  // Now creating 1px sized item that will be aligned to baseline\n  // to calculate baseline shift\n  const span = document.createElement(\"span\");\n  span.style.display = \"inline-block\";\n  span.style.overflow = \"hidden\";\n  span.style.width = \"1px\";\n  span.style.height = \"1px\";\n  line.appendChild(span);\n  // Baseline is important for positioning text on canvas\n  const baseline = span.offsetTop + span.offsetHeight;\n  document.body.removeChild(line);\n\n  return { width, height, baseline };\n};\n\nexport const debounce = <T extends any[]>(\n  fn: (...args: T) => void,\n  timeout: number,\n) => {\n  let handle = 0;\n  let lastArgs: T | null = null;\n  const ret = (...args: T) => {\n    lastArgs = args;\n    clearTimeout(handle);\n    handle = window.setTimeout(() => {\n      lastArgs = null;\n      fn(...args);\n    }, timeout);\n  };\n  ret.flush = () => {\n    clearTimeout(handle);\n    if (lastArgs) {\n      const _lastArgs = lastArgs;\n      lastArgs = null;\n      fn(..._lastArgs);\n    }\n  };\n  ret.cancel = () => {\n    lastArgs = null;\n    clearTimeout(handle);\n  };\n  return ret;\n};\n\nexport const selectNode = (node: Element) => {\n  const selection = window.getSelection();\n  if (selection) {\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n};\n\nexport const removeSelection = () => {\n  const selection = window.getSelection();\n  if (selection) {\n    selection.removeAllRanges();\n  }\n};\n\nexport const distance = (x: number, y: number) => Math.abs(x - y);\n\nexport const resetCursor = (canvas: HTMLCanvasElement | null) => {\n  if (canvas) {\n    canvas.style.cursor = \"\";\n  }\n};\n\nexport const setCursor = (canvas: HTMLCanvasElement | null, cursor: string) => {\n  if (canvas) {\n    canvas.style.cursor = cursor;\n  }\n};\n\nexport const setCursorForShape = (\n  canvas: HTMLCanvasElement | null,\n  shape: string,\n) => {\n  if (!canvas) {\n    return;\n  }\n  if (shape === \"selection\") {\n    resetCursor(canvas);\n  } else {\n    canvas.style.cursor = CURSOR_TYPE.CROSSHAIR;\n  }\n};\n\nexport const isFullScreen = () =>\n  document.fullscreenElement?.nodeName === \"HTML\";\n\nexport const allowFullScreen = () =>\n  document.documentElement.requestFullscreen();\n\nexport const exitFullScreen = () => document.exitFullscreen();\n\nexport const getShortcutKey = (shortcut: string): string => {\n  shortcut = shortcut\n    .replace(/\\bAlt\\b/i, \"Alt\")\n    .replace(/\\bShift\\b/i, \"Shift\")\n    .replace(/\\b(Enter|Return)\\b/i, \"Enter\")\n    .replace(/\\bDel\\b/i, \"Delete\");\n\n  if (isDarwin) {\n    return shortcut\n      .replace(/\\bCtrlOrCmd\\b/i, \"Cmd\")\n      .replace(/\\bAlt\\b/i, \"Option\");\n  }\n  return shortcut.replace(/\\bCtrlOrCmd\\b/i, \"Ctrl\");\n};\n\nexport const viewportCoordsToSceneCoords = (\n  { clientX, clientY }: { clientX: number; clientY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const invScale = 1 / zoom.value;\n  const x = (clientX - zoom.translation.x - offsetLeft) * invScale - scrollX;\n  const y = (clientY - zoom.translation.y - offsetTop) * invScale - scrollY;\n  return { x, y };\n};\n\nexport const sceneCoordsToViewportCoords = (\n  { sceneX, sceneY }: { sceneX: number; sceneY: number },\n  {\n    zoom,\n    offsetLeft,\n    offsetTop,\n    scrollX,\n    scrollY,\n  }: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const x = (sceneX + scrollX + offsetLeft) * zoom.value + zoom.translation.x;\n  const y = (sceneY + scrollY + offsetTop) * zoom.value + zoom.translation.y;\n  return { x, y };\n};\n\nexport const getGlobalCSSVariable = (name: string) =>\n  getComputedStyle(document.documentElement).getPropertyValue(`--${name}`);\n\nconst RS_LTR_CHARS =\n  \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n  \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\";\nconst RS_RTL_CHARS = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\";\nconst RE_RTL_CHECK = new RegExp(`^[^${RS_LTR_CHARS}]*[${RS_RTL_CHARS}]`);\n/**\n * Checks whether first directional character is RTL. Meaning whether it starts\n *  with RTL characters, or indeterminate (numbers etc.) characters followed by\n *  RTL.\n * See https://github.com/excalidraw/excalidraw/pull/1722#discussion_r436340171\n */\nexport const isRTL = (text: string) => RE_RTL_CHECK.test(text);\n\nexport const tupleToCoors = (\n  xyTuple: readonly [number, number],\n): { x: number; y: number } => {\n  const [x, y] = xyTuple;\n  return { x, y };\n};\n\n/** use as a rejectionHandler to mute filesystem Abort errors */\nexport const muteFSAbortError = (error?: Error) => {\n  if (error?.name === \"AbortError\") {\n    return;\n  }\n  throw error;\n};\n\nexport const findIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = 0,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length, Math.max(fromIndex, 0));\n  let index = fromIndex - 1;\n  while (++index < array.length) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const findLastIndex = <T>(\n  array: readonly T[],\n  cb: (element: T, index: number, array: readonly T[]) => boolean,\n  fromIndex: number = array.length - 1,\n) => {\n  if (fromIndex < 0) {\n    fromIndex = array.length + fromIndex;\n  }\n  fromIndex = Math.min(array.length - 1, Math.max(fromIndex, 0));\n  let index = fromIndex + 1;\n  while (--index > -1) {\n    if (cb(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n\nexport const isTransparent = (color: string) => {\n  const isRGBTransparent = color.length === 5 && color.substr(4, 1) === \"0\";\n  const isRRGGBBTransparent = color.length === 9 && color.substr(7, 2) === \"00\";\n  return (\n    isRGBTransparent ||\n    isRRGGBBTransparent ||\n    color === colors.elementBackground[0]\n  );\n};\n\nexport type ResolvablePromise<T> = Promise<T> & {\n  resolve: [T] extends [undefined] ? (value?: T) => void : (value: T) => void;\n  reject: (error: Error) => void;\n};\nexport const resolvablePromise = <T>() => {\n  let resolve!: any;\n  let reject!: any;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  (promise as any).resolve = resolve;\n  (promise as any).reject = reject;\n  return promise as ResolvablePromise<T>;\n};\n\n/**\n * @param func handler taking at most single parameter (event).\n */\nexport const withBatchedUpdates = <\n  TFunction extends ((event: any) => void) | (() => void)\n>(\n  func: Parameters<TFunction>[\"length\"] extends 0 | 1 ? TFunction : never,\n) =>\n  ((event) => {\n    unstable_batchedUpdates(func as TFunction, event);\n  }) as TFunction;\n\n//https://stackoverflow.com/a/9462382/8418\nexport const nFormatter = (num: number, digits: number): string => {\n  const si = [\n    { value: 1, symbol: \"b\" },\n    { value: 1e3, symbol: \"k\" },\n    { value: 1e6, symbol: \"M\" },\n    { value: 1e9, symbol: \"G\" },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  let index;\n  for (index = si.length - 1; index > 0; index--) {\n    if (num >= si[index].value) {\n      break;\n    }\n  }\n  return (\n    (num / si[index].value).toFixed(digits).replace(rx, \"$1\") + si[index].symbol\n  );\n};\n\nexport const getVersion = () => {\n  return (\n    document.querySelector<HTMLMetaElement>('meta[name=\"version\"]')?.content ||\n    DEFAULT_VERSION\n  );\n};\n\n// Adapted from https://github.com/Modernizr/Modernizr/blob/master/feature-detects/emoji.js\nexport const supportsEmoji = () => {\n  const canvas = document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) {\n    return false;\n  }\n  const offset = 12;\n  ctx.fillStyle = \"#f00\";\n  ctx.textBaseline = \"top\";\n  ctx.font = \"32px Arial\";\n  // Modernizr used 🐨, but it is sort of supported on Windows 7.\n  // Luckily 😀 isn't supported.\n  ctx.fillText(\"😀\", 0, 0);\n  return ctx.getImageData(offset, offset, 1, 1).data[0] !== 0;\n};\n\nexport const getNearestScrollableContainer = (\n  element: HTMLElement,\n): HTMLElement | Document => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent === document.body) {\n      return document;\n    }\n    const { overflowY } = window.getComputedStyle(parent);\n    const hasScrollableContent = parent.scrollHeight > parent.clientHeight;\n    if (\n      hasScrollableContent &&\n      (overflowY === \"auto\" || overflowY === \"scroll\")\n    ) {\n      return parent;\n    }\n    parent = parent.parentElement;\n  }\n  return document;\n};\n\nexport const focusNearestParent = (element: HTMLInputElement) => {\n  let parent = element.parentElement;\n  while (parent) {\n    if (parent.tabIndex > -1) {\n      parent.focus();\n      return;\n    }\n    parent = parent.parentElement;\n  }\n};\n","import oc from \"open-color\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_TEXT_ALIGN,\n  EXPORT_SCALES,\n} from \"./constants\";\nimport { t } from \"./i18n\";\nimport { AppState, NormalizedZoomValue } from \"./types\";\nimport { getDateTime } from \"./utils\";\n\nconst defaultExportScale = EXPORT_SCALES.includes(devicePixelRatio)\n  ? devicePixelRatio\n  : 1;\n\nexport const getDefaultAppState = (): Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\" | \"width\" | \"height\"\n> => {\n  return {\n    theme: \"light\",\n    collaborators: new Map(),\n    currentChartType: \"bar\",\n    currentItemBackgroundColor: \"transparent\",\n    currentItemEndArrowhead: \"arrow\",\n    currentItemFillStyle: \"hachure\",\n    currentItemFontFamily: DEFAULT_FONT_FAMILY,\n    currentItemFontSize: DEFAULT_FONT_SIZE,\n    currentItemLinearStrokeSharpness: \"round\",\n    currentItemOpacity: 100,\n    currentItemRoughness: 1,\n    currentItemStartArrowhead: null,\n    currentItemStrokeColor: oc.black,\n    currentItemStrokeSharpness: \"sharp\",\n    currentItemStrokeStyle: \"solid\",\n    currentItemStrokeWidth: 1,\n    currentItemTextAlign: DEFAULT_TEXT_ALIGN,\n    cursorButton: \"up\",\n    draggingElement: null,\n    editingElement: null,\n    editingGroupId: null,\n    editingLinearElement: null,\n    elementLocked: false,\n    elementType: \"selection\",\n    errorMessage: null,\n    exportBackground: true,\n    exportScale: defaultExportScale,\n    exportEmbedScene: false,\n    exportWithDarkMode: false,\n    fileHandle: null,\n    gridSize: null,\n    isBindingEnabled: true,\n    isLibraryOpen: false,\n    isLoading: false,\n    isResizing: false,\n    isRotating: false,\n    lastPointerDownWith: \"mouse\",\n    multiElement: null,\n    name: `${t(\"labels.untitled\")}-${getDateTime()}`,\n    openMenu: null,\n    openPopup: null,\n    pasteDialog: { shown: false, data: null },\n    previousSelectedElementIds: {},\n    resizingElement: null,\n    scrolledOutside: false,\n    scrollX: 0,\n    scrollY: 0,\n    selectedElementIds: {},\n    selectedGroupIds: {},\n    selectionElement: null,\n    shouldCacheIgnoreZoom: false,\n    showHelpDialog: false,\n    showStats: false,\n    startBoundElement: null,\n    suggestedBindings: [],\n    toastMessage: null,\n    viewBackgroundColor: oc.white,\n    zenModeEnabled: false,\n    zoom: { value: 1 as NormalizedZoomValue, translation: { x: 0, y: 0 } },\n    viewModeEnabled: false,\n  };\n};\n\n/**\n * Config containing all AppState keys. Used to determine whether given state\n *  prop should be stripped when exporting to given storage type.\n */\nconst APP_STATE_STORAGE_CONF = (<\n  Values extends {\n    /** whether to keep when storing to browser storage (localStorage/IDB) */\n    browser: boolean;\n    /** whether to keep when exporting to file/database */\n    export: boolean;\n  },\n  T extends Record<keyof AppState, Values>\n>(\n  config: { [K in keyof T]: K extends keyof AppState ? T[K] : never },\n) => config)({\n  theme: { browser: true, export: false },\n  collaborators: { browser: false, export: false },\n  currentChartType: { browser: true, export: false },\n  currentItemBackgroundColor: { browser: true, export: false },\n  currentItemEndArrowhead: { browser: true, export: false },\n  currentItemFillStyle: { browser: true, export: false },\n  currentItemFontFamily: { browser: true, export: false },\n  currentItemFontSize: { browser: true, export: false },\n  currentItemLinearStrokeSharpness: { browser: true, export: false },\n  currentItemOpacity: { browser: true, export: false },\n  currentItemRoughness: { browser: true, export: false },\n  currentItemStartArrowhead: { browser: true, export: false },\n  currentItemStrokeColor: { browser: true, export: false },\n  currentItemStrokeSharpness: { browser: true, export: false },\n  currentItemStrokeStyle: { browser: true, export: false },\n  currentItemStrokeWidth: { browser: true, export: false },\n  currentItemTextAlign: { browser: true, export: false },\n  cursorButton: { browser: true, export: false },\n  draggingElement: { browser: false, export: false },\n  editingElement: { browser: false, export: false },\n  editingGroupId: { browser: true, export: false },\n  editingLinearElement: { browser: false, export: false },\n  elementLocked: { browser: true, export: false },\n  elementType: { browser: true, export: false },\n  errorMessage: { browser: false, export: false },\n  exportBackground: { browser: true, export: false },\n  exportEmbedScene: { browser: true, export: false },\n  exportScale: { browser: true, export: false },\n  exportWithDarkMode: { browser: true, export: false },\n  fileHandle: { browser: false, export: false },\n  gridSize: { browser: true, export: true },\n  height: { browser: false, export: false },\n  isBindingEnabled: { browser: false, export: false },\n  isLibraryOpen: { browser: false, export: false },\n  isLoading: { browser: false, export: false },\n  isResizing: { browser: false, export: false },\n  isRotating: { browser: false, export: false },\n  lastPointerDownWith: { browser: true, export: false },\n  multiElement: { browser: false, export: false },\n  name: { browser: true, export: false },\n  offsetLeft: { browser: false, export: false },\n  offsetTop: { browser: false, export: false },\n  openMenu: { browser: true, export: false },\n  openPopup: { browser: false, export: false },\n  pasteDialog: { browser: false, export: false },\n  previousSelectedElementIds: { browser: true, export: false },\n  resizingElement: { browser: false, export: false },\n  scrolledOutside: { browser: true, export: false },\n  scrollX: { browser: true, export: false },\n  scrollY: { browser: true, export: false },\n  selectedElementIds: { browser: true, export: false },\n  selectedGroupIds: { browser: true, export: false },\n  selectionElement: { browser: false, export: false },\n  shouldCacheIgnoreZoom: { browser: true, export: false },\n  showHelpDialog: { browser: false, export: false },\n  showStats: { browser: true, export: false },\n  startBoundElement: { browser: false, export: false },\n  suggestedBindings: { browser: false, export: false },\n  toastMessage: { browser: false, export: false },\n  viewBackgroundColor: { browser: true, export: true },\n  width: { browser: false, export: false },\n  zenModeEnabled: { browser: true, export: false },\n  zoom: { browser: true, export: false },\n  viewModeEnabled: { browser: false, export: false },\n});\n\nconst _clearAppStateForStorage = <ExportType extends \"export\" | \"browser\">(\n  appState: Partial<AppState>,\n  exportType: ExportType,\n) => {\n  type ExportableKeys = {\n    [K in keyof typeof APP_STATE_STORAGE_CONF]: typeof APP_STATE_STORAGE_CONF[K][ExportType] extends true\n      ? K\n      : never;\n  }[keyof typeof APP_STATE_STORAGE_CONF];\n  const stateForExport = {} as { [K in ExportableKeys]?: typeof appState[K] };\n  for (const key of Object.keys(appState) as (keyof typeof appState)[]) {\n    const propConfig = APP_STATE_STORAGE_CONF[key];\n    if (propConfig?.[exportType]) {\n      // @ts-ignore see https://github.com/microsoft/TypeScript/issues/31445\n      stateForExport[key] = appState[key];\n    }\n  }\n  return stateForExport;\n};\n\nexport const clearAppStateForLocalStorage = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"browser\");\n};\n\nexport const cleanAppStateForExport = (appState: Partial<AppState>) => {\n  return _clearAppStateForStorage(appState, \"export\");\n};\n","import { useCallback, useState } from \"react\";\n\nexport const useCallbackRefState = <T>() => {\n  const [refValue, setRefValue] = useState<T | null>(null);\n  const refCallback = useCallback((value: T | null) => setRefValue(value), []);\n  return [refValue, refCallback] as const;\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawBindableElement,\n  ExcalidrawGenericElement,\n  ExcalidrawFreeDrawElement,\n} from \"./types\";\n\nexport const isGenericElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawGenericElement => {\n  return (\n    element != null &&\n    (element.type === \"selection\" ||\n      element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\")\n  );\n};\n\nexport const isTextElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawTextElement => {\n  return element != null && element.type === \"text\";\n};\n\nexport const isFreeDrawElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawFreeDrawElement => {\n  return element != null && isFreeDrawElementType(element.type);\n};\n\nexport const isFreeDrawElementType = (\n  elementType: ExcalidrawElement[\"type\"],\n): boolean => {\n  return elementType === \"freedraw\";\n};\n\nexport const isLinearElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && isLinearElementType(element.type);\n};\n\nexport const isLinearElementType = (\n  elementType: ExcalidrawElement[\"type\"],\n): boolean => {\n  return (\n    elementType === \"arrow\" || elementType === \"line\" // || elementType === \"freedraw\"\n  );\n};\n\nexport const isBindingElement = (\n  element?: ExcalidrawElement | null,\n): element is ExcalidrawLinearElement => {\n  return element != null && isBindingElementType(element.type);\n};\n\nexport const isBindingElementType = (\n  elementType: ExcalidrawElement[\"type\"],\n): boolean => {\n  return elementType === \"arrow\";\n};\n\nexport const isBindableElement = (\n  element: ExcalidrawElement | null,\n): element is ExcalidrawBindableElement => {\n  return (\n    element != null &&\n    (element.type === \"rectangle\" ||\n      element.type === \"diamond\" ||\n      element.type === \"ellipse\" ||\n      element.type === \"text\")\n  );\n};\n\nexport const isExcalidrawElement = (element: any): boolean => {\n  return (\n    element?.type === \"text\" ||\n    element?.type === \"diamond\" ||\n    element?.type === \"rectangle\" ||\n    element?.type === \"ellipse\" ||\n    element?.type === \"arrow\" ||\n    element?.type === \"freedraw\" ||\n    element?.type === \"line\"\n  );\n};\n","import { NormalizedZoomValue, Point, Zoom } from \"./types\";\nimport { LINE_CONFIRM_THRESHOLD } from \"./constants\";\nimport { ExcalidrawLinearElement } from \"./element/types\";\n\nexport const rotate = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n  angle: number,\n): [number, number] =>\n  // 𝑎′𝑥=(𝑎𝑥−𝑐𝑥)cos𝜃−(𝑎𝑦−𝑐𝑦)sin𝜃+𝑐𝑥\n  // 𝑎′𝑦=(𝑎𝑥−𝑐𝑥)sin𝜃+(𝑎𝑦−𝑐𝑦)cos𝜃+𝑐𝑦.\n  // https://math.stackexchange.com/questions/2204520/how-do-i-rotate-a-line-segment-in-a-specific-point-on-the-line\n  [\n    (x1 - x2) * Math.cos(angle) - (y1 - y2) * Math.sin(angle) + x2,\n    (x1 - x2) * Math.sin(angle) + (y1 - y2) * Math.cos(angle) + y2,\n  ];\n\nexport const rotatePoint = (\n  point: Point,\n  center: Point,\n  angle: number,\n): [number, number] => rotate(point[0], point[1], center[0], center[1], angle);\n\nexport const adjustXYWithRotation = (\n  sides: {\n    n?: boolean;\n    e?: boolean;\n    s?: boolean;\n    w?: boolean;\n  },\n  x: number,\n  y: number,\n  angle: number,\n  deltaX1: number,\n  deltaY1: number,\n  deltaX2: number,\n  deltaY2: number,\n): [number, number] => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  if (sides.e && sides.w) {\n    x += deltaX1 + deltaX2;\n  } else if (sides.e) {\n    x += deltaX1 * (1 + cos);\n    y += deltaX1 * sin;\n    x += deltaX2 * (1 - cos);\n    y += deltaX2 * -sin;\n  } else if (sides.w) {\n    x += deltaX1 * (1 - cos);\n    y += deltaX1 * -sin;\n    x += deltaX2 * (1 + cos);\n    y += deltaX2 * sin;\n  }\n\n  if (sides.n && sides.s) {\n    y += deltaY1 + deltaY2;\n  } else if (sides.n) {\n    x += deltaY1 * sin;\n    y += deltaY1 * (1 - cos);\n    x += deltaY2 * -sin;\n    y += deltaY2 * (1 + cos);\n  } else if (sides.s) {\n    x += deltaY1 * -sin;\n    y += deltaY1 * (1 + cos);\n    x += deltaY2 * sin;\n    y += deltaY2 * (1 - cos);\n  }\n  return [x, y];\n};\n\nexport const getPointOnAPath = (point: Point, path: Point[]) => {\n  const [px, py] = point;\n  const [start, ...other] = path;\n  let [lastX, lastY] = start;\n  let kLine: number = 0;\n  let idx: number = 0;\n\n  // if any item in the array is true, it means that a point is\n  // on some segment of a line based path\n  const retVal = other.some(([x2, y2], i) => {\n    // we always take a line when dealing with line segments\n    const x1 = lastX;\n    const y1 = lastY;\n\n    lastX = x2;\n    lastY = y2;\n\n    // if a point is not within the domain of the line segment\n    // it is not on the line segment\n    if (px < x1 || px > x2) {\n      return false;\n    }\n\n    // check if all points lie on the same line\n    // y1 = kx1 + b, y2 = kx2 + b\n    // y2 - y1 = k(x2 - x2) -> k = (y2 - y1) / (x2 - x1)\n\n    // coefficient for the line (p0, p1)\n    const kL = (y2 - y1) / (x2 - x1);\n\n    // coefficient for the line segment (p0, point)\n    const kP1 = (py - y1) / (px - x1);\n\n    // coefficient for the line segment (point, p1)\n    const kP2 = (py - y2) / (px - x2);\n\n    // because we are basing both lines from the same starting point\n    // the only option for collinearity is having same coefficients\n\n    // using it for floating point comparisons\n    const epsilon = 0.3;\n\n    // if coefficient is more than an arbitrary epsilon,\n    // these lines are nor collinear\n    if (Math.abs(kP1 - kL) > epsilon && Math.abs(kP2 - kL) > epsilon) {\n      return false;\n    }\n\n    // store the coefficient because we are goint to need it\n    kLine = kL;\n    idx = i;\n\n    return true;\n  });\n\n  // Return a coordinate that is always on the line segment\n  if (retVal === true) {\n    return { x: point[0], y: kLine * point[0], segment: idx };\n  }\n\n  return null;\n};\n\nexport const distance2d = (x1: number, y1: number, x2: number, y2: number) => {\n  const xd = x2 - x1;\n  const yd = y2 - y1;\n  return Math.hypot(xd, yd);\n};\n\nexport const centerPoint = (a: Point, b: Point): Point => {\n  return [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n};\n\n// Checks if the first and last point are close enough\n// to be considered a loop\nexport const isPathALoop = (\n  points: ExcalidrawLinearElement[\"points\"],\n  /** supply if you want the loop detection to account for current zoom */\n  zoomValue: Zoom[\"value\"] = 1 as NormalizedZoomValue,\n): boolean => {\n  if (points.length >= 3) {\n    const [first, last] = [points[0], points[points.length - 1]];\n    const distance = distance2d(first[0], first[1], last[0], last[1]);\n\n    // Adjusting LINE_CONFIRM_THRESHOLD to current zoom so that when zoomed in\n    // really close we make the threshold smaller, and vice versa.\n    return distance <= LINE_CONFIRM_THRESHOLD / zoomValue;\n  }\n  return false;\n};\n\n// Draw a line from the point to the right till infiinty\n// Check how many lines of the polygon does this infinite line intersects with\n// If the number of intersections is odd, point is in the polygon\nexport const isPointInPolygon = (\n  points: Point[],\n  x: number,\n  y: number,\n): boolean => {\n  const vertices = points.length;\n\n  // There must be at least 3 vertices in polygon\n  if (vertices < 3) {\n    return false;\n  }\n  const extreme: Point = [Number.MAX_SAFE_INTEGER, y];\n  const p: Point = [x, y];\n  let count = 0;\n  for (let i = 0; i < vertices; i++) {\n    const current = points[i];\n    const next = points[(i + 1) % vertices];\n    if (doSegmentsIntersect(current, next, p, extreme)) {\n      if (orderedColinearOrientation(current, p, next) === 0) {\n        return isPointWithinBounds(current, p, next);\n      }\n      count++;\n    }\n  }\n  // true if count is off\n  return count % 2 === 1;\n};\n\n// Returns whether `q` lies inside the segment/rectangle defined by `p` and `r`.\n// This is an approximation to \"does `q` lie on a segment `pr`\" check.\nconst isPointWithinBounds = (p: Point, q: Point, r: Point) => {\n  return (\n    q[0] <= Math.max(p[0], r[0]) &&\n    q[0] >= Math.min(p[0], r[0]) &&\n    q[1] <= Math.max(p[1], r[1]) &&\n    q[1] >= Math.min(p[1], r[1])\n  );\n};\n\n// For the ordered points p, q, r, return\n// 0 if p, q, r are colinear\n// 1 if Clockwise\n// 2 if counterclickwise\nconst orderedColinearOrientation = (p: Point, q: Point, r: Point) => {\n  const val = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (val === 0) {\n    return 0;\n  }\n  return val > 0 ? 1 : 2;\n};\n\n// Check is p1q1 intersects with p2q2\nconst doSegmentsIntersect = (p1: Point, q1: Point, p2: Point, q2: Point) => {\n  const o1 = orderedColinearOrientation(p1, q1, p2);\n  const o2 = orderedColinearOrientation(p1, q1, q2);\n  const o3 = orderedColinearOrientation(p2, q2, p1);\n  const o4 = orderedColinearOrientation(p2, q2, q1);\n\n  if (o1 !== o2 && o3 !== o4) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and p2 lies on segment p1q1\n  if (o1 === 0 && isPointWithinBounds(p1, p2, q1)) {\n    return true;\n  }\n\n  // p1, q1 and p2 are colinear and q2 lies on segment p1q1\n  if (o2 === 0 && isPointWithinBounds(p1, q2, q1)) {\n    return true;\n  }\n\n  // p2, q2 and p1 are colinear and p1 lies on segment p2q2\n  if (o3 === 0 && isPointWithinBounds(p2, p1, q2)) {\n    return true;\n  }\n\n  // p2, q2 and q1 are colinear and q1 lies on segment p2q2\n  if (o4 === 0 && isPointWithinBounds(p2, q1, q2)) {\n    return true;\n  }\n\n  return false;\n};\n\n// TODO: Rounding this point causes some shake when free drawing\nexport const getGridPoint = (\n  x: number,\n  y: number,\n  gridSize: number | null,\n): [number, number] => {\n  if (gridSize) {\n    return [\n      Math.round(x / gridSize) * gridSize,\n      Math.round(y / gridSize) * gridSize,\n    ];\n  }\n  return [x, y];\n};\n","import { Point } from \"./types\";\n\nexport const getSizeFromPoints = (points: readonly Point[]) => {\n  const xs = points.map((point) => point[0]);\n  const ys = points.map((point) => point[1]);\n  return {\n    width: Math.max(...xs) - Math.min(...xs),\n    height: Math.max(...ys) - Math.min(...ys),\n  };\n};\n\nexport const rescalePoints = (\n  dimension: 0 | 1,\n  nextDimensionSize: number,\n  prevPoints: readonly Point[],\n): Point[] => {\n  const prevDimValues = prevPoints.map((point) => point[dimension]);\n  const prevMaxDimension = Math.max(...prevDimValues);\n  const prevMinDimension = Math.min(...prevDimValues);\n  const prevDimensionSize = prevMaxDimension - prevMinDimension;\n\n  const dimensionScaleFactor =\n    prevDimensionSize === 0 ? 1 : nextDimensionSize / prevDimensionSize;\n\n  let nextMinDimension = Infinity;\n\n  const scaledPoints = prevPoints.map(\n    (prevPoint) =>\n      prevPoint.map((value, currentDimension) => {\n        if (currentDimension !== dimension) {\n          return value;\n        }\n        const scaledValue = value * dimensionScaleFactor;\n        nextMinDimension = Math.min(scaledValue, nextMinDimension);\n        return scaledValue;\n      }) as [number, number],\n  );\n\n  if (scaledPoints.length === 2) {\n    // we don't tranlate two-point lines\n    return scaledPoints;\n  }\n\n  const translation = prevMinDimension - nextMinDimension;\n\n  const nextPoints = scaledPoints.map(\n    (scaledPoint) =>\n      scaledPoint.map((value, currentDimension) => {\n        return currentDimension === dimension ? value + translation : value;\n      }) as [number, number],\n  );\n\n  return nextPoints;\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  Arrowhead,\n  ExcalidrawFreeDrawElement,\n} from \"./types\";\nimport { distance2d, rotate } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Drawable, Op } from \"roughjs/bin/core\";\nimport { Point } from \"../types\";\nimport {\n  getShapeForElement,\n  generateRoughOptions,\n} from \"../renderer/renderElement\";\nimport { isFreeDrawElement, isLinearElement } from \"./typeChecks\";\nimport { rescalePoints } from \"../points\";\n\n// x and y position of top left corner, x and y position of bottom right corner\nexport type Bounds = readonly [number, number, number, number];\n\n// If the element is created from right to left, the width is going to be negative\n// This set of functions retrieves the absolute position of the 4 points.\nexport const getElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n): Bounds => {\n  if (isFreeDrawElement(element)) {\n    return getFreeDrawElementAbsoluteCoords(element);\n  } else if (isLinearElement(element)) {\n    return getLinearElementAbsoluteCoords(element);\n  }\n  return [\n    element.x,\n    element.y,\n    element.x + element.width,\n    element.y + element.height,\n  ];\n};\n\nexport const pointRelativeTo = (\n  element: ExcalidrawElement,\n  absoluteCoords: Point,\n): Point => {\n  return [absoluteCoords[0] - element.x, absoluteCoords[1] - element.y];\n};\n\nexport const getDiamondPoints = (element: ExcalidrawElement) => {\n  // Here we add +1 to avoid these numbers to be 0\n  // otherwise rough.js will throw an error complaining about it\n  const topX = Math.floor(element.width / 2) + 1;\n  const topY = 0;\n  const rightX = element.width;\n  const rightY = Math.floor(element.height / 2) + 1;\n  const bottomX = topX;\n  const bottomY = element.height;\n  const leftX = 0;\n  const leftY = rightY;\n\n  return [topX, topY, rightX, rightY, bottomX, bottomY, leftX, leftY];\n};\n\nexport const getCurvePathOps = (shape: Drawable): Op[] => {\n  for (const set of shape.sets) {\n    if (set.type === \"path\") {\n      return set.ops;\n    }\n  }\n  return shape.sets[0].ops;\n};\n\nconst getMinMaxXYFromCurvePathOps = (\n  ops: Op[],\n  transformXY?: (x: number, y: number) => [number, number],\n): [number, number, number, number] => {\n  let currentP: Point = [0, 0];\n  const { minX, minY, maxX, maxY } = ops.reduce(\n    (limits, { op, data }) => {\n      // There are only four operation types:\n      // move, bcurveTo, lineTo, and curveTo\n      if (op === \"move\") {\n        // change starting point\n        currentP = (data as unknown) as Point;\n        // move operation does not draw anything; so, it always\n        // returns false\n      } else if (op === \"bcurveTo\") {\n        // create points from bezier curve\n        // bezier curve stores data as a flattened array of three positions\n        // [x1, y1, x2, y2, x3, y3]\n        const p1 = [data[0], data[1]] as Point;\n        const p2 = [data[2], data[3]] as Point;\n        const p3 = [data[4], data[5]] as Point;\n\n        const p0 = currentP;\n        currentP = p3;\n\n        const equation = (t: number, idx: number) =>\n          Math.pow(1 - t, 3) * p3[idx] +\n          3 * t * Math.pow(1 - t, 2) * p2[idx] +\n          3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n          p0[idx] * Math.pow(t, 3);\n\n        let t = 0;\n        while (t <= 1.0) {\n          let x = equation(t, 0);\n          let y = equation(t, 1);\n          if (transformXY) {\n            [x, y] = transformXY(x, y);\n          }\n\n          limits.minY = Math.min(limits.minY, y);\n          limits.minX = Math.min(limits.minX, x);\n\n          limits.maxX = Math.max(limits.maxX, x);\n          limits.maxY = Math.max(limits.maxY, y);\n\n          t += 0.1;\n        }\n      } else if (op === \"lineTo\") {\n        // TODO: Implement this\n      } else if (op === \"qcurveTo\") {\n        // TODO: Implement this\n      }\n      return limits;\n    },\n    { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n  );\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getBoundsFromPoints = (\n  points: ExcalidrawFreeDrawElement[\"points\"],\n): [number, number, number, number] => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  for (const [x, y] of points) {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  }\n\n  return [minX, minY, maxX, maxY];\n};\n\nconst getFreeDrawElementAbsoluteCoords = (\n  element: ExcalidrawFreeDrawElement,\n): [number, number, number, number] => {\n  const [minX, minY, maxX, maxY] = getBoundsFromPoints(element.points);\n\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nconst getLinearElementAbsoluteCoords = (\n  element: ExcalidrawLinearElement,\n): [number, number, number, number] => {\n  let coords: [number, number, number, number];\n\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    coords = [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else {\n    const shape = getShapeForElement(element) as Drawable[];\n\n    // first element is always the curve\n    const ops = getCurvePathOps(shape[0]);\n\n    const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n\n    coords = [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  }\n\n  return coords;\n};\n\nexport const getArrowheadPoints = (\n  element: ExcalidrawLinearElement,\n  shape: Drawable[],\n  position: \"start\" | \"end\",\n  arrowhead: Arrowhead,\n) => {\n  const ops = getCurvePathOps(shape[0]);\n  if (ops.length < 1) {\n    return null;\n  }\n\n  // The index of the bCurve operation to examine.\n  const index = position === \"start\" ? 1 : ops.length - 1;\n\n  const data = ops[index].data;\n  const p3 = [data[4], data[5]] as Point;\n  const p2 = [data[2], data[3]] as Point;\n  const p1 = [data[0], data[1]] as Point;\n\n  // We need to find p0 of the bezier curve.\n  // It is typically the last point of the previous\n  // curve; it can also be the position of moveTo operation.\n  const prevOp = ops[index - 1];\n  let p0: Point = [0, 0];\n  if (prevOp.op === \"move\") {\n    p0 = (prevOp.data as unknown) as Point;\n  } else if (prevOp.op === \"bcurveTo\") {\n    p0 = [prevOp.data[4], prevOp.data[5]];\n  }\n\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // Ee know the last point of the arrow (or the first, if start arrowhead).\n  const [x2, y2] = position === \"start\" ? p0 : p3;\n\n  // By using cubic bezier equation (B(t)) and the given parameters,\n  // we calculate a point that is closer to the last point.\n  // The value 0.3 is chosen arbitrarily and it works best for all\n  // the tested cases.\n  const [x1, y1] = [equation(0.3, 0), equation(0.3, 1)];\n\n  // Find the normalized direction vector based on the\n  // previously calculated points.\n  const distance = Math.hypot(x2 - x1, y2 - y1);\n  const nx = (x2 - x1) / distance;\n  const ny = (y2 - y1) / distance;\n\n  const size = {\n    arrow: 30,\n    bar: 15,\n    dot: 15,\n  }[arrowhead]; // pixels (will differ for each arrowhead)\n\n  let length = 0;\n\n  if (arrowhead === \"arrow\") {\n    // Length for -> arrows is based on the length of the last section\n    const [cx, cy] = element.points[element.points.length - 1];\n    const [px, py] =\n      element.points.length > 1\n        ? element.points[element.points.length - 2]\n        : [0, 0];\n\n    length = Math.hypot(cx - px, cy - py);\n  } else {\n    // Length for other arrowhead types is based on the total length of the line\n    for (let i = 0; i < element.points.length; i++) {\n      const [px, py] = element.points[i - 1] || [0, 0];\n      const [cx, cy] = element.points[i];\n      length += Math.hypot(cx - px, cy - py);\n    }\n  }\n\n  // Scale down the arrowhead until we hit a certain size so that it doesn't look weird.\n  // This value is selected by minimizing a minimum size with the last segment of the arrowhead\n  const minSize = Math.min(size, length / 2);\n  const xs = x2 - nx * minSize;\n  const ys = y2 - ny * minSize;\n\n  if (arrowhead === \"dot\") {\n    const r = Math.hypot(ys - y2, xs - x2) + element.strokeWidth;\n    return [x2, y2, r];\n  }\n\n  const angle = {\n    arrow: 20,\n    bar: 90,\n  }[arrowhead]; // degrees\n\n  // Return points\n  const [x3, y3] = rotate(xs, ys, x2, y2, (-angle * Math.PI) / 180);\n  const [x4, y4] = rotate(xs, ys, x2, y2, (angle * Math.PI) / 180);\n  return [x2, y2, x3, y3, x4, y4];\n};\n\nconst getLinearElementRotatedBounds = (\n  element: ExcalidrawLinearElement,\n  cx: number,\n  cy: number,\n): [number, number, number, number] => {\n  if (element.points.length < 2 || !getShapeForElement(element)) {\n    // XXX this is just a poor estimate and not very useful\n    const { minX, minY, maxX, maxY } = element.points.reduce(\n      (limits, [x, y]) => {\n        [x, y] = rotate(element.x + x, element.y + y, cx, cy, element.angle);\n        limits.minY = Math.min(limits.minY, y);\n        limits.minX = Math.min(limits.minX, x);\n        limits.maxX = Math.max(limits.maxX, x);\n        limits.maxY = Math.max(limits.maxY, y);\n        return limits;\n      },\n      { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity },\n    );\n    return [minX, minY, maxX, maxY];\n  }\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  // first element is always the curve\n  const ops = getCurvePathOps(shape[0]);\n\n  const transformXY = (x: number, y: number) =>\n    rotate(element.x + x, element.y + y, cx, cy, element.angle);\n  return getMinMaxXYFromCurvePathOps(ops, transformXY);\n};\n\n// We could cache this stuff\nexport const getElementBounds = (\n  element: ExcalidrawElement,\n): [number, number, number, number] => {\n  let bounds: [number, number, number, number];\n\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  if (isFreeDrawElement(element)) {\n    const [minX, minY, maxX, maxY] = getBoundsFromPoints(\n      element.points.map(([x, y]) =>\n        rotate(x, y, cx - element.x, cy - element.y, element.angle),\n      ),\n    );\n\n    return [\n      minX + element.x,\n      minY + element.y,\n      maxX + element.x,\n      maxY + element.y,\n    ];\n  } else if (isLinearElement(element)) {\n    bounds = getLinearElementRotatedBounds(element, cx, cy);\n  } else if (element.type === \"diamond\") {\n    const [x11, y11] = rotate(cx, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(cx, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x1, cy, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, cy, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  } else if (element.type === \"ellipse\") {\n    const w = (x2 - x1) / 2;\n    const h = (y2 - y1) / 2;\n    const cos = Math.cos(element.angle);\n    const sin = Math.sin(element.angle);\n    const ww = Math.hypot(w * cos, h * sin);\n    const hh = Math.hypot(h * cos, w * sin);\n    bounds = [cx - ww, cy - hh, cx + ww, cy + hh];\n  } else {\n    const [x11, y11] = rotate(x1, y1, cx, cy, element.angle);\n    const [x12, y12] = rotate(x1, y2, cx, cy, element.angle);\n    const [x22, y22] = rotate(x2, y2, cx, cy, element.angle);\n    const [x21, y21] = rotate(x2, y1, cx, cy, element.angle);\n    const minX = Math.min(x11, x12, x22, x21);\n    const minY = Math.min(y11, y12, y22, y21);\n    const maxX = Math.max(x11, x12, x22, x21);\n    const maxY = Math.max(y11, y12, y22, y21);\n    bounds = [minX, minY, maxX, maxY];\n  }\n\n  return bounds;\n};\n\nexport const getCommonBounds = (\n  elements: readonly ExcalidrawElement[],\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minX = Infinity;\n  let maxX = -Infinity;\n  let minY = Infinity;\n  let maxY = -Infinity;\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    minX = Math.min(minX, x1);\n    minY = Math.min(minY, y1);\n    maxX = Math.max(maxX, x2);\n    maxY = Math.max(maxY, y2);\n  });\n\n  return [minX, minY, maxX, maxY];\n};\n\nexport const getResizedElementAbsoluteCoords = (\n  element: ExcalidrawElement,\n  nextWidth: number,\n  nextHeight: number,\n): [number, number, number, number] => {\n  if (!(isLinearElement(element) || isFreeDrawElement(element))) {\n    return [\n      element.x,\n      element.y,\n      element.x + nextWidth,\n      element.y + nextHeight,\n    ];\n  }\n\n  const points = rescalePoints(\n    0,\n    nextWidth,\n    rescalePoints(1, nextHeight, element.points),\n  );\n\n  let bounds: [number, number, number, number];\n\n  if (isFreeDrawElement(element)) {\n    // Free Draw\n    bounds = getBoundsFromPoints(points);\n  } else {\n    // Line\n    const gen = rough.generator();\n    const curve =\n      element.strokeSharpness === \"sharp\"\n        ? gen.linearPath(\n            points as [number, number][],\n            generateRoughOptions(element),\n          )\n        : gen.curve(\n            points as [number, number][],\n            generateRoughOptions(element),\n          );\n    const ops = getCurvePathOps(curve);\n    bounds = getMinMaxXYFromCurvePathOps(ops);\n  }\n\n  const [minX, minY, maxX, maxY] = bounds;\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getElementPointsCoords = (\n  element: ExcalidrawLinearElement,\n  points: readonly (readonly [number, number])[],\n  sharpness: ExcalidrawElement[\"strokeSharpness\"],\n): [number, number, number, number] => {\n  // This might be computationally heavey\n  const gen = rough.generator();\n  const curve =\n    sharpness === \"sharp\"\n      ? gen.linearPath(\n          points as [number, number][],\n          generateRoughOptions(element),\n        )\n      : gen.curve(points as [number, number][], generateRoughOptions(element));\n  const ops = getCurvePathOps(curve);\n  const [minX, minY, maxX, maxY] = getMinMaxXYFromCurvePathOps(ops);\n  return [\n    minX + element.x,\n    minY + element.y,\n    maxX + element.x,\n    maxY + element.y,\n  ];\n};\n\nexport const getClosestElementBounds = (\n  elements: readonly ExcalidrawElement[],\n  from: { x: number; y: number },\n): [number, number, number, number] => {\n  if (!elements.length) {\n    return [0, 0, 0, 0];\n  }\n\n  let minDistance = Infinity;\n  let closestElement = elements[0];\n\n  elements.forEach((element) => {\n    const [x1, y1, x2, y2] = getElementBounds(element);\n    const distance = distance2d((x1 + x2) / 2, (y1 + y2) / 2, from.x, from.y);\n\n    if (distance < minDistance) {\n      minDistance = distance;\n      closestElement = element;\n    }\n  });\n\n  return getElementBounds(closestElement);\n};\n","import {\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  Arrowhead,\n  NonDeletedExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n} from \"../element/types\";\nimport {\n  isTextElement,\n  isLinearElement,\n  isFreeDrawElement,\n} from \"../element/typeChecks\";\nimport {\n  getDiamondPoints,\n  getElementAbsoluteCoords,\n  getArrowheadPoints,\n} from \"../element/bounds\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { Drawable, Options } from \"roughjs/bin/core\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport { RoughGenerator } from \"roughjs/bin/generator\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  SVG_NS,\n  distance,\n  getFontString,\n  getFontFamilyString,\n  isRTL,\n} from \"../utils\";\nimport { isPathALoop } from \"../math\";\nimport rough from \"roughjs/bin/rough\";\nimport { Zoom } from \"../types\";\nimport { getDefaultAppState } from \"../appState\";\nimport getFreeDrawShape from \"perfect-freehand\";\nimport { MAX_DECIMALS_FOR_SVG_EXPORT } from \"../constants\";\n\nconst defaultAppState = getDefaultAppState();\n\nconst getDashArrayDashed = (strokeWidth: number) => [8, 8 + strokeWidth];\n\nconst getDashArrayDotted = (strokeWidth: number) => [1.5, 6 + strokeWidth];\n\nconst getCanvasPadding = (element: ExcalidrawElement) =>\n  element.type === \"freedraw\" ? element.strokeWidth * 12 : 20;\n\nexport interface ExcalidrawElementWithCanvas {\n  element: ExcalidrawElement | ExcalidrawTextElement;\n  canvas: HTMLCanvasElement;\n  canvasZoom: Zoom[\"value\"];\n  canvasOffsetX: number;\n  canvasOffsetY: number;\n}\n\nconst generateElementCanvas = (\n  element: NonDeletedExcalidrawElement,\n  zoom: Zoom,\n): ExcalidrawElementWithCanvas => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\")!;\n  const padding = getCanvasPadding(element);\n\n  let canvasOffsetX = 0;\n  let canvasOffsetY = 0;\n\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n\n    canvas.width =\n      distance(x1, x2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      distance(y1, y2) * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n\n    canvasOffsetX =\n      element.x > x1\n        ? Math.floor(distance(element.x, x1)) *\n          window.devicePixelRatio *\n          zoom.value\n        : 0;\n\n    canvasOffsetY =\n      element.y > y1\n        ? Math.floor(distance(element.y, y1)) *\n          window.devicePixelRatio *\n          zoom.value\n        : 0;\n\n    context.translate(canvasOffsetX, canvasOffsetY);\n  } else {\n    canvas.width =\n      element.width * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n    canvas.height =\n      element.height * window.devicePixelRatio * zoom.value +\n      padding * zoom.value * 2;\n  }\n\n  context.save();\n  context.translate(padding * zoom.value, padding * zoom.value);\n  context.scale(\n    window.devicePixelRatio * zoom.value,\n    window.devicePixelRatio * zoom.value,\n  );\n\n  const rc = rough.canvas(canvas);\n\n  drawElementOnCanvas(element, rc, context);\n  context.restore();\n  return {\n    element,\n    canvas,\n    canvasZoom: zoom.value,\n    canvasOffsetX,\n    canvasOffsetY,\n  };\n};\n\nconst drawElementOnCanvas = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n) => {\n  context.globalAlpha = element.opacity / 100;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n      rc.draw(getShapeForElement(element) as Drawable);\n      break;\n    }\n    case \"arrow\":\n    case \"line\": {\n      context.lineJoin = \"round\";\n      context.lineCap = \"round\";\n\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        rc.draw(shape);\n      });\n      break;\n    }\n    case \"freedraw\": {\n      // Draw directly to canvas\n      context.save();\n      context.fillStyle = element.strokeColor;\n\n      const path = getFreeDrawPath2D(element) as Path2D;\n\n      context.fillStyle = element.strokeColor;\n      context.fill(path);\n\n      context.restore();\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const rtl = isRTL(element.text);\n        const shouldTemporarilyAttach = rtl && !context.canvas.isConnected;\n        if (shouldTemporarilyAttach) {\n          // to correctly render RTL text mixed with LTR, we have to append it\n          // to the DOM\n          document.body.appendChild(context.canvas);\n        }\n        context.canvas.setAttribute(\"dir\", rtl ? \"rtl\" : \"ltr\");\n        context.save();\n        context.font = getFontString(element);\n        context.fillStyle = element.strokeColor;\n        context.textAlign = element.textAlign as CanvasTextAlign;\n\n        // Canvas does not support multiline text by default\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        for (let index = 0; index < lines.length; index++) {\n          context.fillText(\n            lines[index],\n            horizontalOffset,\n            (index + 1) * lineHeight - verticalOffset,\n          );\n        }\n        context.restore();\n        if (shouldTemporarilyAttach) {\n          context.canvas.remove();\n        }\n      } else {\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n  context.globalAlpha = 1;\n};\n\nconst elementWithCanvasCache = new WeakMap<\n  ExcalidrawElement,\n  ExcalidrawElementWithCanvas\n>();\n\nconst shapeCache = new WeakMap<\n  ExcalidrawElement,\n  Drawable | Drawable[] | null\n>();\n\nexport const getShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.get(element);\n\nexport const invalidateShapeForElement = (element: ExcalidrawElement) =>\n  shapeCache.delete(element);\n\nexport const generateRoughOptions = (\n  element: ExcalidrawElement,\n  continuousPath = false,\n): Options => {\n  const options: Options = {\n    seed: element.seed,\n    strokeLineDash:\n      element.strokeStyle === \"dashed\"\n        ? getDashArrayDashed(element.strokeWidth)\n        : element.strokeStyle === \"dotted\"\n        ? getDashArrayDotted(element.strokeWidth)\n        : undefined,\n    // for non-solid strokes, disable multiStroke because it tends to make\n    // dashes/dots overlay each other\n    disableMultiStroke: element.strokeStyle !== \"solid\",\n    // for non-solid strokes, increase the width a bit to make it visually\n    // similar to solid strokes, because we're also disabling multiStroke\n    strokeWidth:\n      element.strokeStyle !== \"solid\"\n        ? element.strokeWidth + 0.5\n        : element.strokeWidth,\n    // when increasing strokeWidth, we must explicitly set fillWeight and\n    // hachureGap because if not specified, roughjs uses strokeWidth to\n    // calculate them (and we don't want the fills to be modified)\n    fillWeight: element.strokeWidth / 2,\n    hachureGap: element.strokeWidth * 4,\n    roughness: element.roughness,\n    stroke: element.strokeColor,\n    preserveVertices: continuousPath,\n  };\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      options.fillStyle = element.fillStyle;\n      options.fill =\n        element.backgroundColor === \"transparent\"\n          ? undefined\n          : element.backgroundColor;\n      if (element.type === \"ellipse\") {\n        options.curveFitting = 1;\n      }\n      return options;\n    }\n    case \"line\": {\n      if (isPathALoop(element.points)) {\n        options.fillStyle = element.fillStyle;\n        options.fill =\n          element.backgroundColor === \"transparent\"\n            ? undefined\n            : element.backgroundColor;\n      }\n      return options;\n    }\n    case \"freedraw\":\n    case \"arrow\":\n      return options;\n    default: {\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\n/**\n * Generates the element's shape and puts it into the cache.\n * @param element\n * @param generator\n */\nconst generateElementShape = (\n  element: NonDeletedExcalidrawElement,\n  generator: RoughGenerator,\n) => {\n  let shape = shapeCache.get(element) || null;\n\n  if (!shape) {\n    elementWithCanvasCache.delete(element);\n\n    switch (element.type) {\n      case \"rectangle\":\n        if (element.strokeSharpness === \"round\") {\n          const w = element.width;\n          const h = element.height;\n          const r = Math.min(w, h) * 0.25;\n          shape = generator.path(\n            `M ${r} 0 L ${w - r} 0 Q ${w} 0, ${w} ${r} L ${w} ${\n              h - r\n            } Q ${w} ${h}, ${w - r} ${h} L ${r} ${h} Q 0 ${h}, 0 ${\n              h - r\n            } L 0 ${r} Q 0 0, ${r} 0`,\n            generateRoughOptions(element, true),\n          );\n        } else {\n          shape = generator.rectangle(\n            0,\n            0,\n            element.width,\n            element.height,\n            generateRoughOptions(element),\n          );\n        }\n        break;\n      case \"diamond\": {\n        const [\n          topX,\n          topY,\n          rightX,\n          rightY,\n          bottomX,\n          bottomY,\n          leftX,\n          leftY,\n        ] = getDiamondPoints(element);\n        shape = generator.polygon(\n          [\n            [topX, topY],\n            [rightX, rightY],\n            [bottomX, bottomY],\n            [leftX, leftY],\n          ],\n          generateRoughOptions(element),\n        );\n        break;\n      }\n      case \"ellipse\":\n        shape = generator.ellipse(\n          element.width / 2,\n          element.height / 2,\n          element.width,\n          element.height,\n          generateRoughOptions(element),\n        );\n        break;\n      case \"line\":\n      case \"arrow\": {\n        const options = generateRoughOptions(element);\n\n        // points array can be empty in the beginning, so it is important to add\n        // initial position to it\n        const points = element.points.length ? element.points : [[0, 0]];\n\n        // curve is always the first element\n        // this simplifies finding the curve for an element\n        if (element.strokeSharpness === \"sharp\") {\n          if (options.fill) {\n            shape = [generator.polygon(points as [number, number][], options)];\n          } else {\n            shape = [\n              generator.linearPath(points as [number, number][], options),\n            ];\n          }\n        } else {\n          shape = [generator.curve(points as [number, number][], options)];\n        }\n\n        // add lines only in arrow\n        if (element.type === \"arrow\") {\n          const { startArrowhead = null, endArrowhead = \"arrow\" } = element;\n\n          const getArrowheadShapes = (\n            element: ExcalidrawLinearElement,\n            shape: Drawable[],\n            position: \"start\" | \"end\",\n            arrowhead: Arrowhead,\n          ) => {\n            const arrowheadPoints = getArrowheadPoints(\n              element,\n              shape,\n              position,\n              arrowhead,\n            );\n\n            if (arrowheadPoints === null) {\n              return [];\n            }\n\n            // Other arrowheads here...\n            if (arrowhead === \"dot\") {\n              const [x, y, r] = arrowheadPoints;\n\n              return [\n                generator.circle(x, y, r, {\n                  ...options,\n                  fill: element.strokeColor,\n                  fillStyle: \"solid\",\n                  stroke: \"none\",\n                }),\n              ];\n            }\n\n            // Arrow arrowheads\n            const [x2, y2, x3, y3, x4, y4] = arrowheadPoints;\n\n            if (element.strokeStyle === \"dotted\") {\n              // for dotted arrows caps, reduce gap to make it more legible\n              const dash = getDashArrayDotted(element.strokeWidth - 1);\n              options.strokeLineDash = [dash[0], dash[1] - 1];\n            } else {\n              // for solid/dashed, keep solid arrow cap\n              delete options.strokeLineDash;\n            }\n            return [\n              generator.line(x3, y3, x2, y2, options),\n              generator.line(x4, y4, x2, y2, options),\n            ];\n          };\n\n          if (startArrowhead !== null) {\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"start\",\n              startArrowhead,\n            );\n            shape.push(...shapes);\n          }\n\n          if (endArrowhead !== null) {\n            if (endArrowhead === undefined) {\n              // Hey, we have an old arrow here!\n            }\n\n            const shapes = getArrowheadShapes(\n              element,\n              shape,\n              \"end\",\n              endArrowhead,\n            );\n            shape.push(...shapes);\n          }\n        }\n\n        break;\n      }\n      case \"freedraw\": {\n        generateFreeDrawShape(element);\n        shape = [];\n        break;\n      }\n      case \"text\": {\n        // just to ensure we don't regenerate element.canvas on rerenders\n        shape = [];\n        break;\n      }\n    }\n    shapeCache.set(element, shape);\n  }\n};\n\nconst generateElementWithCanvas = (\n  element: NonDeletedExcalidrawElement,\n  sceneState?: SceneState,\n) => {\n  const zoom: Zoom = sceneState ? sceneState.zoom : defaultAppState.zoom;\n  const prevElementWithCanvas = elementWithCanvasCache.get(element);\n  const shouldRegenerateBecauseZoom =\n    prevElementWithCanvas &&\n    prevElementWithCanvas.canvasZoom !== zoom.value &&\n    !sceneState?.shouldCacheIgnoreZoom;\n  if (!prevElementWithCanvas || shouldRegenerateBecauseZoom) {\n    const elementWithCanvas = generateElementCanvas(element, zoom);\n\n    elementWithCanvasCache.set(element, elementWithCanvas);\n\n    return elementWithCanvas;\n  }\n  return prevElementWithCanvas;\n};\n\nconst drawElementFromCanvas = (\n  elementWithCanvas: ExcalidrawElementWithCanvas,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n) => {\n  const element = elementWithCanvas.element;\n  const padding = getCanvasPadding(element);\n  let [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n  // Free draw elements will otherwise \"shuffle\" as the min x and y change\n  if (isFreeDrawElement(element)) {\n    x1 = Math.floor(x1);\n    x2 = Math.ceil(x2);\n    y1 = Math.floor(y1);\n    y2 = Math.ceil(y2);\n  }\n\n  const cx = ((x1 + x2) / 2 + sceneState.scrollX) * window.devicePixelRatio;\n  const cy = ((y1 + y2) / 2 + sceneState.scrollY) * window.devicePixelRatio;\n  context.save();\n  context.scale(1 / window.devicePixelRatio, 1 / window.devicePixelRatio);\n  context.translate(cx, cy);\n  context.rotate(element.angle);\n\n  context.drawImage(\n    elementWithCanvas.canvas!,\n    (-(x2 - x1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    (-(y2 - y1) / 2) * window.devicePixelRatio -\n      (padding * elementWithCanvas.canvasZoom) / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.width / elementWithCanvas.canvasZoom,\n    elementWithCanvas.canvas!.height / elementWithCanvas.canvasZoom,\n  );\n  context.restore();\n\n  // Clear the nested element we appended to the DOM\n};\n\nexport const renderElement = (\n  element: NonDeletedExcalidrawElement,\n  rc: RoughCanvas,\n  context: CanvasRenderingContext2D,\n  renderOptimizations: boolean,\n  sceneState: SceneState,\n) => {\n  const generator = rc.generator;\n  switch (element.type) {\n    case \"selection\": {\n      context.save();\n      context.translate(\n        element.x + sceneState.scrollX,\n        element.y + sceneState.scrollY,\n      );\n      context.fillStyle = \"rgba(0, 0, 255, 0.10)\";\n      context.fillRect(0, 0, element.width, element.height);\n      context.restore();\n      break;\n    }\n    case \"freedraw\": {\n      generateElementShape(element, generator);\n\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.save();\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.restore();\n      }\n\n      break;\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\":\n    case \"line\":\n    case \"arrow\":\n    case \"text\": {\n      generateElementShape(element, generator);\n      if (renderOptimizations) {\n        const elementWithCanvas = generateElementWithCanvas(\n          element,\n          sceneState,\n        );\n        drawElementFromCanvas(elementWithCanvas, rc, context, sceneState);\n      } else {\n        const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n        const cx = (x1 + x2) / 2 + sceneState.scrollX;\n        const cy = (y1 + y2) / 2 + sceneState.scrollY;\n        const shiftX = (x2 - x1) / 2 - (element.x - x1);\n        const shiftY = (y2 - y1) / 2 - (element.y - y1);\n        context.save();\n        context.translate(cx, cy);\n        context.rotate(element.angle);\n        context.translate(-shiftX, -shiftY);\n        drawElementOnCanvas(element, rc, context);\n        context.restore();\n      }\n      break;\n    }\n    default: {\n      // @ts-ignore\n      throw new Error(`Unimplemented type ${element.type}`);\n    }\n  }\n};\n\nconst roughSVGDrawWithPrecision = (\n  rsvg: RoughSVG,\n  drawable: Drawable,\n  precision?: number,\n) => {\n  if (typeof precision === \"undefined\") {\n    return rsvg.draw(drawable);\n  }\n  const pshape: Drawable = {\n    sets: drawable.sets,\n    shape: drawable.shape,\n    options: { ...drawable.options, fixedDecimalPlaceDigits: precision },\n  };\n  return rsvg.draw(pshape);\n};\n\nexport const renderElementToSvg = (\n  element: NonDeletedExcalidrawElement,\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  offsetX?: number,\n  offsetY?: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2 - (element.x - x1);\n  const cy = (y2 - y1) / 2 - (element.y - y1);\n  const degree = (180 * element.angle) / Math.PI;\n  const generator = rsvg.generator;\n  switch (element.type) {\n    case \"selection\": {\n      // Since this is used only during editing experience, which is canvas based,\n      // this should not happen\n      throw new Error(\"Selection rendering is not supported for SVG\");\n    }\n    case \"rectangle\":\n    case \"diamond\":\n    case \"ellipse\": {\n      generateElementShape(element, generator);\n      const node = roughSVGDrawWithPrecision(\n        rsvg,\n        getShapeForElement(element) as Drawable,\n        MAX_DECIMALS_FOR_SVG_EXPORT,\n      );\n      const opacity = element.opacity / 100;\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\"stroke-linecap\", \"round\");\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      svgRoot.appendChild(node);\n      break;\n    }\n    case \"line\":\n    case \"arrow\": {\n      generateElementShape(element, generator);\n      const group = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      const opacity = element.opacity / 100;\n      group.setAttribute(\"stroke-linecap\", \"round\");\n\n      (getShapeForElement(element) as Drawable[]).forEach((shape) => {\n        const node = roughSVGDrawWithPrecision(\n          rsvg,\n          shape,\n          MAX_DECIMALS_FOR_SVG_EXPORT,\n        );\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        if (\n          element.type === \"line\" &&\n          isPathALoop(element.points) &&\n          element.backgroundColor !== \"transparent\"\n        ) {\n          node.setAttribute(\"fill-rule\", \"evenodd\");\n        }\n        group.appendChild(node);\n      });\n      svgRoot.appendChild(group);\n      break;\n    }\n    case \"freedraw\": {\n      generateFreeDrawShape(element);\n      const opacity = element.opacity / 100;\n      const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n      if (opacity !== 1) {\n        node.setAttribute(\"stroke-opacity\", `${opacity}`);\n        node.setAttribute(\"fill-opacity\", `${opacity}`);\n      }\n      node.setAttribute(\n        \"transform\",\n        `translate(${offsetX || 0} ${\n          offsetY || 0\n        }) rotate(${degree} ${cx} ${cy})`,\n      );\n      const path = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"path\");\n      node.setAttribute(\"stroke\", \"none\");\n      node.setAttribute(\"fill\", element.strokeColor);\n      path.setAttribute(\"d\", getFreeDrawSvgPath(element));\n      node.appendChild(path);\n      svgRoot.appendChild(node);\n      break;\n    }\n    default: {\n      if (isTextElement(element)) {\n        const opacity = element.opacity / 100;\n        const node = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"g\");\n        if (opacity !== 1) {\n          node.setAttribute(\"stroke-opacity\", `${opacity}`);\n          node.setAttribute(\"fill-opacity\", `${opacity}`);\n        }\n        node.setAttribute(\n          \"transform\",\n          `translate(${offsetX || 0} ${\n            offsetY || 0\n          }) rotate(${degree} ${cx} ${cy})`,\n        );\n        const lines = element.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n        const lineHeight = element.height / lines.length;\n        const verticalOffset = element.height - element.baseline;\n        const horizontalOffset =\n          element.textAlign === \"center\"\n            ? element.width / 2\n            : element.textAlign === \"right\"\n            ? element.width\n            : 0;\n        const direction = isRTL(element.text) ? \"rtl\" : \"ltr\";\n        const textAnchor =\n          element.textAlign === \"center\"\n            ? \"middle\"\n            : element.textAlign === \"right\" || direction === \"rtl\"\n            ? \"end\"\n            : \"start\";\n        for (let i = 0; i < lines.length; i++) {\n          const text = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"text\");\n          text.textContent = lines[i];\n          text.setAttribute(\"x\", `${horizontalOffset}`);\n          text.setAttribute(\"y\", `${(i + 1) * lineHeight - verticalOffset}`);\n          text.setAttribute(\"font-family\", getFontFamilyString(element));\n          text.setAttribute(\"font-size\", `${element.fontSize}px`);\n          text.setAttribute(\"fill\", element.strokeColor);\n          text.setAttribute(\"text-anchor\", textAnchor);\n          text.setAttribute(\"style\", \"white-space: pre;\");\n          text.setAttribute(\"direction\", direction);\n          node.appendChild(text);\n        }\n        svgRoot.appendChild(node);\n      } else {\n        // @ts-ignore\n        throw new Error(`Unimplemented type ${element.type}`);\n      }\n    }\n  }\n};\n\nexport const pathsCache = new WeakMap<ExcalidrawFreeDrawElement, Path2D>([]);\n\nexport function generateFreeDrawShape(element: ExcalidrawFreeDrawElement) {\n  const svgPathData = getFreeDrawSvgPath(element);\n  const path = new Path2D(svgPathData);\n  pathsCache.set(element, path);\n  return path;\n}\n\nexport function getFreeDrawPath2D(element: ExcalidrawFreeDrawElement) {\n  return pathsCache.get(element);\n}\n\nexport function getFreeDrawSvgPath(element: ExcalidrawFreeDrawElement) {\n  const inputPoints = element.simulatePressure\n    ? element.points\n    : element.points.length\n    ? element.points.map(([x, y], i) => [x, y, element.pressures[i]])\n    : [[0, 0, 0]];\n\n  // Consider changing the options for simulated pressure vs real pressure\n  const options = {\n    simulatePressure: element.simulatePressure,\n    size: element.strokeWidth * 6,\n    thinning: 0.5,\n    smoothing: 0.5,\n    streamline: 0.5,\n    easing: (t: number) => t * (2 - t),\n    last: true,\n  };\n\n  const points = getFreeDrawShape(inputPoints as number[][], options);\n  const d: (string | number)[] = [];\n\n  let [p0, p1] = points;\n\n  d.push(\"M\", p0[0], p0[1], \"Q\");\n\n  for (let i = 0; i < points.length; i++) {\n    d.push(p0[0], p0[1], (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2);\n    p0 = p1;\n    p1 = points[i];\n  }\n\n  p1 = points[0];\n  d.push(p0[0], p0[1], (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2);\n\n  d.push(\"Z\");\n\n  return d.join(\" \");\n}\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"../element/types\";\nimport { getNonDeletedElements, isNonDeletedElement } from \"../element\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\ntype ElementIdKey = InstanceType<typeof LinearElementEditor>[\"elementId\"];\ntype ElementKey = ExcalidrawElement | ElementIdKey;\n\ntype SceneStateCallback = () => void;\ntype SceneStateCallbackRemover = () => void;\n\nconst isIdKey = (elementKey: ElementKey): elementKey is ElementIdKey => {\n  if (typeof elementKey === \"string\") {\n    return true;\n  }\n  return false;\n};\n\nclass Scene {\n  // ---------------------------------------------------------------------------\n  // static methods/props\n  // ---------------------------------------------------------------------------\n\n  private static sceneMapByElement = new WeakMap<ExcalidrawElement, Scene>();\n  private static sceneMapById = new Map<string, Scene>();\n\n  static mapElementToScene(elementKey: ElementKey, scene: Scene) {\n    if (isIdKey(elementKey)) {\n      this.sceneMapById.set(elementKey, scene);\n    } else {\n      this.sceneMapByElement.set(elementKey, scene);\n    }\n  }\n\n  static getScene(elementKey: ElementKey): Scene | null {\n    if (isIdKey(elementKey)) {\n      return this.sceneMapById.get(elementKey) || null;\n    }\n    return this.sceneMapByElement.get(elementKey) || null;\n  }\n\n  // ---------------------------------------------------------------------------\n  // instance methods/props\n  // ---------------------------------------------------------------------------\n\n  private callbacks: Set<SceneStateCallback> = new Set();\n\n  private nonDeletedElements: readonly NonDeletedExcalidrawElement[] = [];\n  private elements: readonly ExcalidrawElement[] = [];\n  private elementsMap = new Map<ExcalidrawElement[\"id\"], ExcalidrawElement>();\n\n  // TODO: getAllElementsIncludingDeleted\n  getElementsIncludingDeleted() {\n    return this.elements;\n  }\n\n  // TODO: getAllNonDeletedElements\n  getElements(): readonly NonDeletedExcalidrawElement[] {\n    return this.nonDeletedElements;\n  }\n\n  getElement(id: ExcalidrawElement[\"id\"]): ExcalidrawElement | null {\n    return this.elementsMap.get(id) || null;\n  }\n\n  getNonDeletedElement(\n    id: ExcalidrawElement[\"id\"],\n  ): NonDeleted<ExcalidrawElement> | null {\n    const element = this.getElement(id);\n    if (element && isNonDeletedElement(element)) {\n      return element;\n    }\n    return null;\n  }\n\n  // TODO: Rename methods here, this is confusing\n  getNonDeletedElements(\n    ids: readonly ExcalidrawElement[\"id\"][],\n  ): NonDeleted<ExcalidrawElement>[] {\n    const result: NonDeleted<ExcalidrawElement>[] = [];\n    ids.forEach((id) => {\n      const element = this.getNonDeletedElement(id);\n      if (element != null) {\n        result.push(element);\n      }\n    });\n    return result;\n  }\n\n  replaceAllElements(nextElements: readonly ExcalidrawElement[]) {\n    this.elements = nextElements;\n    this.elementsMap.clear();\n    nextElements.forEach((element) => {\n      this.elementsMap.set(element.id, element);\n      Scene.mapElementToScene(element, this);\n    });\n    this.nonDeletedElements = getNonDeletedElements(this.elements);\n    this.informMutation();\n  }\n\n  informMutation() {\n    for (const callback of Array.from(this.callbacks)) {\n      callback();\n    }\n  }\n\n  addCallback(cb: SceneStateCallback): SceneStateCallbackRemover {\n    if (this.callbacks.has(cb)) {\n      throw new Error();\n    }\n\n    this.callbacks.add(cb);\n\n    return () => {\n      if (!this.callbacks.has(cb)) {\n        throw new Error();\n      }\n      this.callbacks.delete(cb);\n    };\n  }\n\n  destroy() {\n    Scene.sceneMapById.forEach((scene, elementKey) => {\n      if (scene === this) {\n        Scene.sceneMapById.delete(elementKey);\n      }\n    });\n    // done not for memory leaks, but to guard against possible late fires\n    // (I guess?)\n    this.callbacks.clear();\n  }\n}\n\nexport default Scene;\n","import { Random } from \"roughjs/bin/math\";\nimport { nanoid } from \"nanoid\";\n\nlet random = new Random(Date.now());\nlet testIdBase = 0;\n\nexport const randomInteger = () => Math.floor(random.next() * 2 ** 31);\n\nexport const reseed = (seed: number) => {\n  random = new Random(seed);\n  testIdBase = 0;\n};\n\nexport const randomId = () =>\n  process.env.NODE_ENV === \"test\" ? `id${testIdBase++}` : nanoid();\n","import { ExcalidrawElement } from \"./types\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport Scene from \"../scene/Scene\";\nimport { getSizeFromPoints } from \"../points\";\nimport { randomInteger } from \"../random\";\nimport { Point } from \"../types\";\n\ntype ElementUpdate<TElement extends ExcalidrawElement> = Omit<\n  Partial<TElement>,\n  \"id\" | \"version\" | \"versionNonce\"\n>;\n\n// This function tracks updates of text elements for the purposes for collaboration.\n// The version is used to compare updates when more than one user is working in\n// the same drawing. Note: this will trigger the component to update. Make sure you\n// are calling it either from a React event handler or within unstable_batchedUpdates().\nexport const mutateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n) => {\n  let didChange = false;\n\n  // casting to any because can't use `in` operator\n  // (see https://github.com/microsoft/TypeScript/issues/21732)\n  const { points } = updates as any;\n\n  if (typeof points !== \"undefined\") {\n    updates = { ...getSizeFromPoints(points), ...updates };\n  }\n\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n\n      if (key === \"points\") {\n        const prevPoints = (element as any)[key];\n        const nextPoints = value;\n        if (prevPoints.length === nextPoints.length) {\n          let didChangePoints = false;\n          let index = prevPoints.length;\n          while (--index) {\n            const prevPoint: Point = prevPoints[index];\n            const nextPoint: Point = nextPoints[index];\n            if (\n              prevPoint[0] !== nextPoint[0] ||\n              prevPoint[1] !== nextPoint[1]\n            ) {\n              didChangePoints = true;\n              break;\n            }\n          }\n          if (!didChangePoints) {\n            continue;\n          }\n        }\n      }\n\n      (element as any)[key] = value;\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return;\n  }\n\n  if (\n    typeof updates.height !== \"undefined\" ||\n    typeof updates.width !== \"undefined\" ||\n    typeof points !== \"undefined\"\n  ) {\n    invalidateShapeForElement(element);\n  }\n\n  element.version++;\n  element.versionNonce = randomInteger();\n  Scene.getScene(element)?.informMutation();\n};\n\nexport const newElementWith = <TElement extends ExcalidrawElement>(\n  element: TElement,\n  updates: ElementUpdate<TElement>,\n): TElement => {\n  let didChange = false;\n  for (const key in updates) {\n    const value = (updates as any)[key];\n    if (typeof value !== \"undefined\") {\n      if (\n        (element as any)[key] === value &&\n        // if object, always update in case its deep prop was mutated\n        (typeof value !== \"object\" || value === null || key === \"groupIds\")\n      ) {\n        continue;\n      }\n      didChange = true;\n    }\n  }\n\n  if (!didChange) {\n    return element;\n  }\n\n  return {\n    ...element,\n    ...updates,\n    version: element.version + 1,\n    versionNonce: randomInteger(),\n  };\n};\n\n/**\n * Mutates element and updates `version` & `versionNonce`.\n *\n * NOTE: does not trigger re-render.\n */\nexport const bumpVersion = (\n  element: Mutable<ExcalidrawElement>,\n  version?: ExcalidrawElement[\"version\"],\n) => {\n  element.version = (version ?? element.version) + 1;\n  element.versionNonce = randomInteger();\n  return element;\n};\n","import { ExcalidrawElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\nimport { isFreeDrawElement, isLinearElement } from \"./typeChecks\";\nimport { SHIFT_LOCKING_ANGLE } from \"../constants\";\n\nexport const isInvisiblySmallElement = (\n  element: ExcalidrawElement,\n): boolean => {\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    return element.points.length < 2;\n  }\n  return element.width === 0 && element.height === 0;\n};\n\n/**\n * Makes a perfect shape or diagonal/horizontal/vertical line\n */\nexport const getPerfectElementSize = (\n  elementType: string,\n  width: number,\n  height: number,\n): { width: number; height: number } => {\n  const absWidth = Math.abs(width);\n  const absHeight = Math.abs(height);\n\n  if (\n    elementType === \"line\" ||\n    elementType === \"arrow\" ||\n    elementType === \"freedraw\"\n  ) {\n    const lockedAngle =\n      Math.round(Math.atan(absHeight / absWidth) / SHIFT_LOCKING_ANGLE) *\n      SHIFT_LOCKING_ANGLE;\n    if (lockedAngle === 0) {\n      height = 0;\n    } else if (lockedAngle === Math.PI / 2) {\n      width = 0;\n    } else {\n      height =\n        Math.round(absWidth * Math.tan(lockedAngle)) * Math.sign(height) ||\n        height;\n    }\n  } else if (elementType !== \"selection\") {\n    height = absWidth * Math.sign(height);\n  }\n  return { width, height };\n};\n\nexport const resizePerfectLineForNWHandler = (\n  element: ExcalidrawElement,\n  x: number,\n  y: number,\n) => {\n  const anchorX = element.x + element.width;\n  const anchorY = element.y + element.height;\n  const distanceToAnchorX = x - anchorX;\n  const distanceToAnchorY = y - anchorY;\n  if (Math.abs(distanceToAnchorX) < Math.abs(distanceToAnchorY) / 2) {\n    mutateElement(element, {\n      x: anchorX,\n      width: 0,\n      y,\n      height: -distanceToAnchorY,\n    });\n  } else if (Math.abs(distanceToAnchorY) < Math.abs(element.width) / 2) {\n    mutateElement(element, {\n      y: anchorY,\n      height: 0,\n    });\n  } else {\n    const nextHeight =\n      Math.sign(distanceToAnchorY) *\n      Math.sign(distanceToAnchorX) *\n      element.width;\n    mutateElement(element, {\n      x,\n      y: anchorY - nextHeight,\n      width: -distanceToAnchorX,\n      height: nextHeight,\n    });\n  }\n};\n\nexport const getNormalizedDimensions = (\n  element: Pick<ExcalidrawElement, \"width\" | \"height\" | \"x\" | \"y\">,\n): {\n  width: ExcalidrawElement[\"width\"];\n  height: ExcalidrawElement[\"height\"];\n  x: ExcalidrawElement[\"x\"];\n  y: ExcalidrawElement[\"y\"];\n} => {\n  const ret = {\n    width: element.width,\n    height: element.height,\n    x: element.x,\n    y: element.y,\n  };\n\n  if (element.width < 0) {\n    const nextWidth = Math.abs(element.width);\n    ret.width = nextWidth;\n    ret.x = element.x - nextWidth;\n  }\n\n  if (element.height < 0) {\n    const nextHeight = Math.abs(element.height);\n    ret.height = nextHeight;\n    ret.y = element.y - nextHeight;\n  }\n\n  return ret;\n};\n","import { GroupId, ExcalidrawElement, NonDeleted } from \"./element/types\";\nimport { AppState } from \"./types\";\nimport { getSelectedElements } from \"./scene\";\n\nexport const selectGroup = (\n  groupId: GroupId,\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState => {\n  const elementsInGroup = elements.filter((element) =>\n    element.groupIds.includes(groupId),\n  );\n\n  if (elementsInGroup.length < 2) {\n    if (\n      appState.selectedGroupIds[groupId] ||\n      appState.editingGroupId === groupId\n    ) {\n      return {\n        ...appState,\n        selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: false },\n        editingGroupId: null,\n      };\n    }\n    return appState;\n  }\n\n  return {\n    ...appState,\n    selectedGroupIds: { ...appState.selectedGroupIds, [groupId]: true },\n    selectedElementIds: {\n      ...appState.selectedElementIds,\n      ...Object.fromEntries(\n        elementsInGroup.map((element) => [element.id, true]),\n      ),\n    },\n  };\n};\n\n/**\n * If the element's group is selected, don't render an individual\n * selection border around it.\n */\nexport const isSelectedViaGroup = (\n  appState: AppState,\n  element: ExcalidrawElement,\n) => getSelectedGroupForElement(appState, element) != null;\n\nexport const getSelectedGroupForElement = (\n  appState: AppState,\n  element: ExcalidrawElement,\n) =>\n  element.groupIds\n    .filter((groupId) => groupId !== appState.editingGroupId)\n    .find((groupId) => appState.selectedGroupIds[groupId]);\n\nexport const getSelectedGroupIds = (appState: AppState): GroupId[] =>\n  Object.entries(appState.selectedGroupIds)\n    .filter(([groupId, isSelected]) => isSelected)\n    .map(([groupId, isSelected]) => groupId);\n\n/**\n * When you select an element, you often want to actually select the whole group it's in, unless\n * you're currently editing that group.\n */\nexport const selectGroupsForSelectedElements = (\n  appState: AppState,\n  elements: readonly NonDeleted<ExcalidrawElement>[],\n): AppState => {\n  let nextAppState: AppState = { ...appState, selectedGroupIds: {} };\n\n  const selectedElements = getSelectedElements(elements, appState);\n\n  if (!selectedElements.length) {\n    return { ...nextAppState, editingGroupId: null };\n  }\n\n  for (const selectedElement of selectedElements) {\n    let groupIds = selectedElement.groupIds;\n    if (appState.editingGroupId) {\n      // handle the case where a group is nested within a group\n      const indexOfEditingGroup = groupIds.indexOf(appState.editingGroupId);\n      if (indexOfEditingGroup > -1) {\n        groupIds = groupIds.slice(0, indexOfEditingGroup);\n      }\n    }\n    if (groupIds.length > 0) {\n      const groupId = groupIds[groupIds.length - 1];\n      nextAppState = selectGroup(groupId, nextAppState, elements);\n    }\n  }\n\n  return nextAppState;\n};\n\nexport const editGroupForSelectedElement = (\n  appState: AppState,\n  element: NonDeleted<ExcalidrawElement>,\n): AppState => {\n  return {\n    ...appState,\n    editingGroupId: element.groupIds.length ? element.groupIds[0] : null,\n    selectedGroupIds: {},\n    selectedElementIds: {\n      [element.id]: true,\n    },\n  };\n};\n\nexport const isElementInGroup = (element: ExcalidrawElement, groupId: string) =>\n  element.groupIds.includes(groupId);\n\nexport const getElementsInGroup = (\n  elements: readonly ExcalidrawElement[],\n  groupId: string,\n) => elements.filter((element) => isElementInGroup(element, groupId));\n\nexport const getSelectedGroupIdForElement = (\n  element: ExcalidrawElement,\n  selectedGroupIds: { [groupId: string]: boolean },\n) => element.groupIds.find((groupId) => selectedGroupIds[groupId]);\n\nexport const getNewGroupIdsForDuplication = (\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  editingGroupId: AppState[\"editingGroupId\"],\n  mapper: (groupId: GroupId) => GroupId,\n) => {\n  const copy = [...groupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const endIndex =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  for (let index = 0; index < endIndex; index++) {\n    copy[index] = mapper(copy[index]);\n  }\n\n  return copy;\n};\n\nexport const addToGroup = (\n  prevGroupIds: ExcalidrawElement[\"groupIds\"],\n  newGroupId: GroupId,\n  editingGroupId: AppState[\"editingGroupId\"],\n) => {\n  // insert before the editingGroupId, or push to the end.\n  const groupIds = [...prevGroupIds];\n  const positionOfEditingGroupId = editingGroupId\n    ? groupIds.indexOf(editingGroupId)\n    : -1;\n  const positionToInsert =\n    positionOfEditingGroupId > -1 ? positionOfEditingGroupId : groupIds.length;\n  groupIds.splice(positionToInsert, 0, newGroupId);\n  return groupIds;\n};\n\nexport const removeFromSelectedGroups = (\n  groupIds: ExcalidrawElement[\"groupIds\"],\n  selectedGroupIds: { [groupId: string]: boolean },\n) => groupIds.filter((groupId) => !selectedGroupIds[groupId]);\n","import {\n  ExcalidrawElement,\n  ExcalidrawTextElement,\n  ExcalidrawLinearElement,\n  ExcalidrawGenericElement,\n  NonDeleted,\n  TextAlign,\n  GroupId,\n  VerticalAlign,\n  Arrowhead,\n  ExcalidrawFreeDrawElement,\n  FontFamilyValues,\n} from \"../element/types\";\nimport { measureText, getFontString } from \"../utils\";\nimport { randomInteger, randomId } from \"../random\";\nimport { newElementWith } from \"./mutateElement\";\nimport { getNewGroupIdsForDuplication } from \"../groups\";\nimport { AppState } from \"../types\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { adjustXYWithRotation } from \"../math\";\nimport { getResizedElementAbsoluteCoords } from \"./bounds\";\n\ntype ElementConstructorOpts = MarkOptional<\n  Omit<ExcalidrawGenericElement, \"id\" | \"type\" | \"isDeleted\">,\n  | \"width\"\n  | \"height\"\n  | \"angle\"\n  | \"groupIds\"\n  | \"boundElementIds\"\n  | \"seed\"\n  | \"version\"\n  | \"versionNonce\"\n>;\n\nconst _newElementBase = <T extends ExcalidrawElement>(\n  type: T[\"type\"],\n  {\n    x,\n    y,\n    strokeColor,\n    backgroundColor,\n    fillStyle,\n    strokeWidth,\n    strokeStyle,\n    roughness,\n    opacity,\n    width = 0,\n    height = 0,\n    angle = 0,\n    groupIds = [],\n    strokeSharpness,\n    boundElementIds = null,\n    ...rest\n  }: ElementConstructorOpts & Omit<Partial<ExcalidrawGenericElement>, \"type\">,\n) => ({\n  id: rest.id || randomId(),\n  type,\n  x,\n  y,\n  width,\n  height,\n  angle,\n  strokeColor,\n  backgroundColor,\n  fillStyle,\n  strokeWidth,\n  strokeStyle,\n  roughness,\n  opacity,\n  groupIds,\n  strokeSharpness,\n  seed: rest.seed ?? randomInteger(),\n  version: rest.version || 1,\n  versionNonce: rest.versionNonce ?? 0,\n  isDeleted: false as false,\n  boundElementIds,\n});\n\nexport const newElement = (\n  opts: {\n    type: ExcalidrawGenericElement[\"type\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawGenericElement> =>\n  _newElementBase<ExcalidrawGenericElement>(opts.type, opts);\n\n/** computes element x/y offset based on textAlign/verticalAlign */\nconst getTextElementPositionOffsets = (\n  opts: {\n    textAlign: ExcalidrawTextElement[\"textAlign\"];\n    verticalAlign: ExcalidrawTextElement[\"verticalAlign\"];\n  },\n  metrics: {\n    width: number;\n    height: number;\n  },\n) => {\n  return {\n    x:\n      opts.textAlign === \"center\"\n        ? metrics.width / 2\n        : opts.textAlign === \"right\"\n        ? metrics.width\n        : 0,\n    y: opts.verticalAlign === \"middle\" ? metrics.height / 2 : 0,\n  };\n};\n\nexport const newTextElement = (\n  opts: {\n    text: string;\n    fontSize: number;\n    fontFamily: FontFamilyValues;\n    textAlign: TextAlign;\n    verticalAlign: VerticalAlign;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawTextElement> => {\n  const metrics = measureText(opts.text, getFontString(opts));\n  const offsets = getTextElementPositionOffsets(opts, metrics);\n  const textElement = newElementWith(\n    {\n      ..._newElementBase<ExcalidrawTextElement>(\"text\", opts),\n      text: opts.text,\n      fontSize: opts.fontSize,\n      fontFamily: opts.fontFamily,\n      textAlign: opts.textAlign,\n      verticalAlign: opts.verticalAlign,\n      x: opts.x - offsets.x,\n      y: opts.y - offsets.y,\n      width: metrics.width,\n      height: metrics.height,\n      baseline: metrics.baseline,\n    },\n    {},\n  );\n  return textElement;\n};\n\nconst getAdjustedDimensions = (\n  element: ExcalidrawTextElement,\n  nextText: string,\n): {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  baseline: number;\n} => {\n  const {\n    width: nextWidth,\n    height: nextHeight,\n    baseline: nextBaseline,\n  } = measureText(nextText, getFontString(element));\n  const { textAlign, verticalAlign } = element;\n\n  let x: number;\n  let y: number;\n\n  if (textAlign === \"center\" && verticalAlign === \"middle\") {\n    const prevMetrics = measureText(element.text, getFontString(element));\n    const offsets = getTextElementPositionOffsets(element, {\n      width: nextWidth - prevMetrics.width,\n      height: nextHeight - prevMetrics.height,\n    });\n\n    x = element.x - offsets.x;\n    y = element.y - offsets.y;\n  } else {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n\n    [x, y] = adjustXYWithRotation(\n      {\n        s: true,\n        e: textAlign === \"center\" || textAlign === \"left\",\n        w: textAlign === \"center\" || textAlign === \"right\",\n      },\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n  }\n\n  return {\n    width: nextWidth,\n    height: nextHeight,\n    x: Number.isFinite(x) ? x : element.x,\n    y: Number.isFinite(y) ? y : element.y,\n    baseline: nextBaseline,\n  };\n};\n\nexport const updateTextElement = (\n  element: ExcalidrawTextElement,\n  { text, isDeleted }: { text: string; isDeleted?: boolean },\n): ExcalidrawTextElement => {\n  return newElementWith(element, {\n    text,\n    isDeleted: isDeleted ?? element.isDeleted,\n    ...getAdjustedDimensions(element, text),\n  });\n};\n\nexport const newFreeDrawElement = (\n  opts: {\n    type: \"freedraw\";\n    points?: ExcalidrawFreeDrawElement[\"points\"];\n    simulatePressure: boolean;\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawFreeDrawElement> => {\n  return {\n    ..._newElementBase<ExcalidrawFreeDrawElement>(opts.type, opts),\n    points: opts.points || [],\n    pressures: [],\n    simulatePressure: opts.simulatePressure,\n    lastCommittedPoint: null,\n  };\n};\n\nexport const newLinearElement = (\n  opts: {\n    type: ExcalidrawLinearElement[\"type\"];\n    startArrowhead: Arrowhead | null;\n    endArrowhead: Arrowhead | null;\n    points?: ExcalidrawLinearElement[\"points\"];\n  } & ElementConstructorOpts,\n): NonDeleted<ExcalidrawLinearElement> => {\n  return {\n    ..._newElementBase<ExcalidrawLinearElement>(opts.type, opts),\n    points: opts.points || [],\n    lastCommittedPoint: null,\n    startBinding: null,\n    endBinding: null,\n    startArrowhead: opts.startArrowhead,\n    endArrowhead: opts.endArrowhead,\n  };\n};\n\n// Simplified deep clone for the purpose of cloning ExcalidrawElement only\n// (doesn't clone Date, RegExp, Map, Set, Typed arrays etc.)\n//\n// Adapted from https://github.com/lukeed/klona\nexport const deepCopyElement = (val: any, depth: number = 0) => {\n  if (val == null || typeof val !== \"object\") {\n    return val;\n  }\n\n  if (Object.prototype.toString.call(val) === \"[object Object]\") {\n    const tmp =\n      typeof val.constructor === \"function\"\n        ? Object.create(Object.getPrototypeOf(val))\n        : {};\n    for (const key in val) {\n      if (val.hasOwnProperty(key)) {\n        // don't copy top-level shape property, which we want to regenerate\n        if (depth === 0 && (key === \"shape\" || key === \"canvas\")) {\n          continue;\n        }\n        tmp[key] = deepCopyElement(val[key], depth + 1);\n      }\n    }\n    return tmp;\n  }\n\n  if (Array.isArray(val)) {\n    let k = val.length;\n    const arr = new Array(k);\n    while (k--) {\n      arr[k] = deepCopyElement(val[k], depth + 1);\n    }\n    return arr;\n  }\n\n  return val;\n};\n\n/**\n * Duplicate an element, often used in the alt-drag operation.\n * Note that this method has gotten a bit complicated since the\n * introduction of gruoping/ungrouping elements.\n * @param editingGroupId The current group being edited. The new\n *                       element will inherit this group and its\n *                       parents.\n * @param groupIdMapForOperation A Map that maps old group IDs to\n *                               duplicated ones. If you are duplicating\n *                               multiple elements at once, share this map\n *                               amongst all of them\n * @param element Element to duplicate\n * @param overrides Any element properties to override\n */\nexport const duplicateElement = <TElement extends Mutable<ExcalidrawElement>>(\n  editingGroupId: AppState[\"editingGroupId\"],\n  groupIdMapForOperation: Map<GroupId, GroupId>,\n  element: TElement,\n  overrides?: Partial<TElement>,\n): TElement => {\n  let copy: TElement = deepCopyElement(element);\n  if (process.env.NODE_ENV === \"test\") {\n    copy.id = `${copy.id}_copy`;\n    // `window.h` may not be defined in some unit tests\n    if (\n      window.h?.app\n        ?.getSceneElementsIncludingDeleted()\n        .find((el) => el.id === copy.id)\n    ) {\n      copy.id += \"_copy\";\n    }\n  } else {\n    copy.id = randomId();\n  }\n  copy.seed = randomInteger();\n  copy.groupIds = getNewGroupIdsForDuplication(\n    copy.groupIds,\n    editingGroupId,\n    (groupId) => {\n      if (!groupIdMapForOperation.has(groupId)) {\n        groupIdMapForOperation.set(groupId, randomId());\n      }\n      return groupIdMapForOperation.get(groupId)!;\n    },\n  );\n  if (overrides) {\n    copy = Object.assign(copy, overrides);\n  }\n  return copy;\n};\n","import { ExcalidrawElement, PointerType } from \"./types\";\n\nimport { getElementAbsoluteCoords, Bounds } from \"./bounds\";\nimport { rotate } from \"../math\";\nimport { Zoom } from \"../types\";\n\nexport type TransformHandleDirection =\n  | \"n\"\n  | \"s\"\n  | \"w\"\n  | \"e\"\n  | \"nw\"\n  | \"ne\"\n  | \"sw\"\n  | \"se\";\n\nexport type TransformHandleType = TransformHandleDirection | \"rotation\";\n\nexport type TransformHandle = [number, number, number, number];\nexport type TransformHandles = Partial<\n  { [T in TransformHandleType]: TransformHandle }\n>;\nexport type MaybeTransformHandleType = TransformHandleType | false;\n\nconst transformHandleSizes: { [k in PointerType]: number } = {\n  mouse: 8,\n  pen: 16,\n  touch: 28,\n};\n\nconst ROTATION_RESIZE_HANDLE_GAP = 16;\n\nexport const OMIT_SIDES_FOR_MULTIPLE_ELEMENTS = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_TEXT_ELEMENT = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_SLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  nw: true,\n  se: true,\n};\n\nconst OMIT_SIDES_FOR_LINE_BACKSLASH = {\n  e: true,\n  s: true,\n  n: true,\n  w: true,\n  ne: true,\n  sw: true,\n};\n\nconst generateTransformHandle = (\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n): TransformHandle => {\n  const [xx, yy] = rotate(x + width / 2, y + height / 2, cx, cy, angle);\n  return [xx - width / 2, yy - height / 2, width, height];\n};\n\nexport const getTransformHandlesFromCoords = (\n  [x1, y1, x2, y2]: Bounds,\n  angle: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n  omitSides: { [T in TransformHandleType]?: boolean } = {},\n): TransformHandles => {\n  const size = transformHandleSizes[pointerType];\n  const handleWidth = size / zoom.value;\n  const handleHeight = size / zoom.value;\n\n  const handleMarginX = size / zoom.value;\n  const handleMarginY = size / zoom.value;\n\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n\n  const dashedLineMargin = 4 / zoom.value;\n\n  const centeringOffset = (size - 8) / (2 * zoom.value);\n\n  const transformHandles: TransformHandles = {\n    nw: omitSides.nw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    ne: omitSides.ne\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y1 - dashedLineMargin - handleMarginY + centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    sw: omitSides.sw\n      ? undefined\n      : generateTransformHandle(\n          x1 - dashedLineMargin - handleMarginX + centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    se: omitSides.se\n      ? undefined\n      : generateTransformHandle(\n          x2 + dashedLineMargin - centeringOffset,\n          y2 + dashedLineMargin - centeringOffset,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n    rotation: omitSides.rotation\n      ? undefined\n      : generateTransformHandle(\n          x1 + width / 2 - handleWidth / 2,\n          y1 -\n            dashedLineMargin -\n            handleMarginY +\n            centeringOffset -\n            ROTATION_RESIZE_HANDLE_GAP / zoom.value,\n          handleWidth,\n          handleHeight,\n          cx,\n          cy,\n          angle,\n        ),\n  };\n\n  // We only want to show height handles (all cardinal directions)  above a certain size\n  // Note: we render using \"mouse\" size so we should also use \"mouse\" size for this check\n  const minimumSizeForEightHandles =\n    (5 * transformHandleSizes.mouse) / zoom.value;\n  if (Math.abs(width) > minimumSizeForEightHandles) {\n    if (!omitSides.n) {\n      transformHandles.n = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y1 - dashedLineMargin - handleMarginY + centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.s) {\n      transformHandles.s = generateTransformHandle(\n        x1 + width / 2 - handleWidth / 2,\n        y2 + dashedLineMargin - centeringOffset,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n  if (Math.abs(height) > minimumSizeForEightHandles) {\n    if (!omitSides.w) {\n      transformHandles.w = generateTransformHandle(\n        x1 - dashedLineMargin - handleMarginX + centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n    if (!omitSides.e) {\n      transformHandles.e = generateTransformHandle(\n        x2 + dashedLineMargin - centeringOffset,\n        y1 + height / 2 - handleHeight / 2,\n        handleWidth,\n        handleHeight,\n        cx,\n        cy,\n        angle,\n      );\n    }\n  }\n\n  return transformHandles;\n};\n\nexport const getTransformHandles = (\n  element: ExcalidrawElement,\n  zoom: Zoom,\n  pointerType: PointerType = \"mouse\",\n): TransformHandles => {\n  let omitSides: { [T in TransformHandleType]?: boolean } = {};\n  if (\n    element.type === \"arrow\" ||\n    element.type === \"line\" ||\n    element.type === \"freedraw\"\n  ) {\n    if (element.points.length === 2) {\n      // only check the last point because starting point is always (0,0)\n      const [, p1] = element.points;\n      if (p1[0] === 0 || p1[1] === 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] > 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] > 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      } else if (p1[0] < 0 && p1[1] > 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_SLASH;\n      } else if (p1[0] < 0 && p1[1] < 0) {\n        omitSides = OMIT_SIDES_FOR_LINE_BACKSLASH;\n      }\n    }\n  } else if (element.type === \"text\") {\n    omitSides = OMIT_SIDES_FOR_TEXT_ELEMENT;\n  }\n\n  return getTransformHandlesFromCoords(\n    getElementAbsoluteCoords(element),\n    element.angle,\n    zoom,\n    pointerType,\n    omitSides,\n  );\n};\n","/**\n * This is a 2D Projective Geometric Algebra implementation.\n *\n * For wider context on geometric algebra visit see https://bivector.net.\n *\n * For this specific algebra see cheatsheet https://bivector.net/2DPGA.pdf.\n *\n * Converted from generator written by enki, with a ton of added on top.\n *\n * This library uses 8-vectors to represent points, directions and lines\n * in 2D space.\n *\n * An array `[a, b, c, d, e, f, g, h]` represents a n(8)vector:\n *   a + b*e0 + c*e1 + d*e2 + e*e01 + f*e20 + g*e12 + h*e012\n *\n * See GAPoint, GALine, GADirection and GATransform modules for common\n * operations.\n */\n\nexport type Point = NVector;\nexport type Direction = NVector;\nexport type Line = NVector;\nexport type Transform = NVector;\n\nexport const point = (x: number, y: number): Point => [0, 0, 0, 0, y, x, 1, 0];\n\nexport const origin = (): Point => [0, 0, 0, 0, 0, 0, 1, 0];\n\nexport const direction = (x: number, y: number): Direction => {\n  const norm = Math.hypot(x, y); // same as `inorm(direction(x, y))`\n  return [0, 0, 0, 0, y / norm, x / norm, 0, 0];\n};\n\nexport const offset = (x: number, y: number): Direction => [\n  0,\n  0,\n  0,\n  0,\n  y,\n  x,\n  0,\n  0,\n];\n\n/// This is the \"implementation\" part of the library\n\ntype NVector = readonly [\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n  number,\n];\n\n// These are labels for what each number in an nvector represents\nconst NVECTOR_BASE = [\"1\", \"e0\", \"e1\", \"e2\", \"e01\", \"e20\", \"e12\", \"e012\"];\n\n// Used to represent points, lines and transformations\nexport const nvector = (value: number = 0, index: number = 0): NVector => {\n  const result = [0, 0, 0, 0, 0, 0, 0, 0];\n  if (index < 0 || index > 7) {\n    throw new Error(`Expected \\`index\\` betwen 0 and 7, got \\`${index}\\``);\n  }\n  if (value !== 0) {\n    result[index] = value;\n  }\n  return (result as unknown) as NVector;\n};\n\nconst STRING_EPSILON = 0.000001;\nexport const toString = (nvector: NVector): string => {\n  const result = nvector\n    .map((value, index) =>\n      Math.abs(value) > STRING_EPSILON\n        ? value.toFixed(7).replace(/(\\.|0+)$/, \"\") +\n          (index > 0 ? NVECTOR_BASE[index] : \"\")\n        : null,\n    )\n    .filter((representation) => representation != null)\n    .join(\" + \");\n  return result === \"\" ? \"0\" : result;\n};\n\n// Reverse the order of the basis blades.\nexport const reverse = (nvector: NVector): NVector => [\n  nvector[0],\n  nvector[1],\n  nvector[2],\n  nvector[3],\n  -nvector[4],\n  -nvector[5],\n  -nvector[6],\n  -nvector[7],\n];\n\n// Poincare duality operator.\nexport const dual = (nvector: NVector): NVector => [\n  nvector[7],\n  nvector[6],\n  nvector[5],\n  nvector[4],\n  nvector[3],\n  nvector[2],\n  nvector[1],\n  nvector[0],\n];\n\n// Clifford Conjugation\nexport const conjugate = (nvector: NVector): NVector => [\n  nvector[0],\n  -nvector[1],\n  -nvector[2],\n  -nvector[3],\n  -nvector[4],\n  -nvector[5],\n  -nvector[6],\n  nvector[7],\n];\n\n// Main involution\nexport const involute = (nvector: NVector): NVector => [\n  nvector[0],\n  -nvector[1],\n  -nvector[2],\n  -nvector[3],\n  nvector[4],\n  nvector[5],\n  nvector[6],\n  -nvector[7],\n];\n\n// Multivector addition\nexport const add = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [a[0] + b, a[1], a[2], a[3], a[4], a[5], a[6], a[7]];\n  }\n  return [\n    a[0] + b[0],\n    a[1] + b[1],\n    a[2] + b[2],\n    a[3] + b[3],\n    a[4] + b[4],\n    a[5] + b[5],\n    a[6] + b[6],\n    a[7] + b[7],\n  ];\n};\n\n// Multivector subtraction\nexport const sub = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [a[0] - b, a[1], a[2], a[3], a[4], a[5], a[6], a[7]];\n  }\n  return [\n    a[0] - b[0],\n    a[1] - b[1],\n    a[2] - b[2],\n    a[3] - b[3],\n    a[4] - b[4],\n    a[5] - b[5],\n    a[6] - b[6],\n    a[7] - b[7],\n  ];\n};\n\n// The geometric product.\nexport const mul = (a: NVector, b: NVector | number): NVector => {\n  if (isNumber(b)) {\n    return [\n      a[0] * b,\n      a[1] * b,\n      a[2] * b,\n      a[3] * b,\n      a[4] * b,\n      a[5] * b,\n      a[6] * b,\n      a[7] * b,\n    ];\n  }\n  return [\n    mulScalar(a, b),\n    b[1] * a[0] +\n      b[0] * a[1] -\n      b[4] * a[2] +\n      b[5] * a[3] +\n      b[2] * a[4] -\n      b[3] * a[5] -\n      b[7] * a[6] -\n      b[6] * a[7],\n    b[2] * a[0] + b[0] * a[2] - b[6] * a[3] + b[3] * a[6],\n    b[3] * a[0] + b[6] * a[2] + b[0] * a[3] - b[2] * a[6],\n    b[4] * a[0] +\n      b[2] * a[1] -\n      b[1] * a[2] +\n      b[7] * a[3] +\n      b[0] * a[4] +\n      b[6] * a[5] -\n      b[5] * a[6] +\n      b[3] * a[7],\n    b[5] * a[0] -\n      b[3] * a[1] +\n      b[7] * a[2] +\n      b[1] * a[3] -\n      b[6] * a[4] +\n      b[0] * a[5] +\n      b[4] * a[6] +\n      b[2] * a[7],\n    b[6] * a[0] + b[3] * a[2] - b[2] * a[3] + b[0] * a[6],\n    b[7] * a[0] +\n      b[6] * a[1] +\n      b[5] * a[2] +\n      b[4] * a[3] +\n      b[3] * a[4] +\n      b[2] * a[5] +\n      b[1] * a[6] +\n      b[0] * a[7],\n  ];\n};\n\nexport const mulScalar = (a: NVector, b: NVector): number =>\n  b[0] * a[0] + b[2] * a[2] + b[3] * a[3] - b[6] * a[6];\n\n// The outer/exterior/wedge product.\nexport const meet = (a: NVector, b: NVector): NVector => [\n  b[0] * a[0],\n  b[1] * a[0] + b[0] * a[1],\n  b[2] * a[0] + b[0] * a[2],\n  b[3] * a[0] + b[0] * a[3],\n  b[4] * a[0] + b[2] * a[1] - b[1] * a[2] + b[0] * a[4],\n  b[5] * a[0] - b[3] * a[1] + b[1] * a[3] + b[0] * a[5],\n  b[6] * a[0] + b[3] * a[2] - b[2] * a[3] + b[0] * a[6],\n  b[7] * a[0] +\n    b[6] * a[1] +\n    b[5] * a[2] +\n    b[4] * a[3] +\n    b[3] * a[4] +\n    b[2] * a[5] +\n    b[1] * a[6],\n];\n\n// The regressive product.\nexport const join = (a: NVector, b: NVector): NVector => [\n  joinScalar(a, b),\n  a[1] * b[7] + a[4] * b[5] - a[5] * b[4] + a[7] * b[1],\n  a[2] * b[7] - a[4] * b[6] + a[6] * b[4] + a[7] * b[2],\n  a[3] * b[7] + a[5] * b[6] - a[6] * b[5] + a[7] * b[3],\n  a[4] * b[7] + a[7] * b[4],\n  a[5] * b[7] + a[7] * b[5],\n  a[6] * b[7] + a[7] * b[6],\n  a[7] * b[7],\n];\n\nexport const joinScalar = (a: NVector, b: NVector): number =>\n  a[0] * b[7] +\n  a[1] * b[6] +\n  a[2] * b[5] +\n  a[3] * b[4] +\n  a[4] * b[3] +\n  a[5] * b[2] +\n  a[6] * b[1] +\n  a[7] * b[0];\n\n// The inner product.\nexport const dot = (a: NVector, b: NVector): NVector => [\n  b[0] * a[0] + b[2] * a[2] + b[3] * a[3] - b[6] * a[6],\n  b[1] * a[0] +\n    b[0] * a[1] -\n    b[4] * a[2] +\n    b[5] * a[3] +\n    b[2] * a[4] -\n    b[3] * a[5] -\n    b[7] * a[6] -\n    b[6] * a[7],\n  b[2] * a[0] + b[0] * a[2] - b[6] * a[3] + b[3] * a[6],\n  b[3] * a[0] + b[6] * a[2] + b[0] * a[3] - b[2] * a[6],\n  b[4] * a[0] + b[7] * a[3] + b[0] * a[4] + b[3] * a[7],\n  b[5] * a[0] + b[7] * a[2] + b[0] * a[5] + b[2] * a[7],\n  b[6] * a[0] + b[0] * a[6],\n  b[7] * a[0] + b[0] * a[7],\n];\n\nexport const norm = (a: NVector): number =>\n  Math.sqrt(Math.abs(a[0] * a[0] - a[2] * a[2] - a[3] * a[3] + a[6] * a[6]));\n\nexport const inorm = (a: NVector): number =>\n  Math.sqrt(Math.abs(a[7] * a[7] - a[5] * a[5] - a[4] * a[4] + a[1] * a[1]));\n\nexport const normalized = (a: NVector): NVector => {\n  const n = norm(a);\n  if (n === 0 || n === 1) {\n    return a;\n  }\n  const sign = a[6] < 0 ? -1 : 1;\n  return mul(a, sign / n);\n};\n\nexport const inormalized = (a: NVector): NVector => {\n  const n = inorm(a);\n  if (n === 0 || n === 1) {\n    return a;\n  }\n  return mul(a, 1 / n);\n};\n\nconst isNumber = (a: any): a is number => typeof a === \"number\";\n\nexport const E0: NVector = nvector(1, 1);\nexport const E1: NVector = nvector(1, 2);\nexport const E2: NVector = nvector(1, 3);\nexport const E01: NVector = nvector(1, 4);\nexport const E20: NVector = nvector(1, 5);\nexport const E12: NVector = nvector(1, 6);\nexport const E012: NVector = nvector(1, 7);\nexport const I = E012;\n","import * as GA from \"./ga\";\nimport { Line, Point } from \"./ga\";\n\n/**\n * A line is stored as an array `[0, c, a, b, 0, 0, 0, 0]` representing:\n *   c * e0 + a * e1 + b*e2\n *\n * This maps to a standard formula `a * x + b * y + c`.\n *\n * `(-b, a)` correponds to a 2D vector parallel to the line. The lines\n * have a natural orientation, corresponding to that vector.\n *\n * The magnitude (\"norm\") of the line is `sqrt(a ^ 2 + b ^ 2)`.\n * `c / norm(line)` is the oriented distance from line to origin.\n */\n\n// Returns line with direction (x, y) through origin\nexport const vector = (x: number, y: number): Line =>\n  GA.normalized([0, 0, -y, x, 0, 0, 0, 0]);\n\n// For equation ax + by + c = 0.\nexport const equation = (a: number, b: number, c: number): Line =>\n  GA.normalized([0, c, a, b, 0, 0, 0, 0]);\n\nexport const through = (from: Point, to: Point): Line =>\n  GA.normalized(GA.join(to, from));\n\nexport const orthogonal = (line: Line, point: Point): Line =>\n  GA.dot(line, point);\n\n// Returns a line perpendicular to the line through `against` and `intersection`\n// going through `intersection`.\nexport const orthogonalThrough = (against: Point, intersection: Point): Line =>\n  orthogonal(through(against, intersection), intersection);\n\nexport const parallel = (line: Line, distance: number): Line => {\n  const result = line.slice();\n  result[1] -= distance;\n  return (result as unknown) as Line;\n};\n\nexport const parallelThrough = (line: Line, point: Point): Line =>\n  orthogonal(orthogonal(point, line), point);\n\nexport const distance = (line1: Line, line2: Line): number =>\n  GA.inorm(GA.meet(line1, line2));\n\nexport const angle = (line1: Line, line2: Line): number =>\n  Math.acos(GA.dot(line1, line2)[0]);\n\n// The orientation of the line\nexport const sign = (line: Line): number => Math.sign(line[1]);\n","import * as GA from \"./ga\";\nimport * as GALine from \"./galines\";\nimport { Point, Line, join } from \"./ga\";\n\nexport const from = ([x, y]: readonly [number, number]): Point => [\n  0,\n  0,\n  0,\n  0,\n  y,\n  x,\n  1,\n  0,\n];\n\nexport const toTuple = (point: Point): [number, number] => [point[5], point[4]];\n\nexport const abs = (point: Point): Point => [\n  0,\n  0,\n  0,\n  0,\n  Math.abs(point[4]),\n  Math.abs(point[5]),\n  1,\n  0,\n];\n\nexport const intersect = (line1: Line, line2: Line): Point =>\n  GA.normalized(GA.meet(line1, line2));\n\n// Projects `point` onto the `line`.\n// The returned point is the closest point on the `line` to the `point`.\nexport const project = (point: Point, line: Line): Point =>\n  intersect(GALine.orthogonal(line, point), line);\n\nexport const distance = (point1: Point, point2: Point): number =>\n  GA.norm(join(point1, point2));\n\nexport const distanceToLine = (point: Point, line: Line): number =>\n  GA.joinScalar(point, line);\n","import * as GA from \"./ga\";\nimport { Line, Direction, Point } from \"./ga\";\n\n/**\n * A direction is stored as an array `[0, 0, 0, 0, y, x, 0, 0]` representing\n * vector `(x, y)`.\n */\n\nexport const from = (point: Point): Point => [\n  0,\n  0,\n  0,\n  0,\n  point[4],\n  point[5],\n  0,\n  0,\n];\n\nexport const fromTo = (from: Point, to: Point): Direction =>\n  GA.inormalized([0, 0, 0, 0, to[4] - from[4], to[5] - from[5], 0, 0]);\n\nexport const orthogonal = (direction: Direction): Direction =>\n  GA.inormalized([0, 0, 0, 0, -direction[5], direction[4], 0, 0]);\n\nexport const orthogonalToLine = (line: Line): Direction => GA.mul(line, GA.I);\n","import * as GA from \"./ga\";\nimport { Line, Direction, Point, Transform } from \"./ga\";\nimport * as GADirection from \"./gadirections\";\n\n/**\n * TODO: docs\n */\n\nexport const rotation = (pivot: Point, angle: number): Transform =>\n  GA.add(GA.mul(pivot, Math.sin(angle / 2)), Math.cos(angle / 2));\n\nexport const translation = (direction: Direction): Transform => [\n  1,\n  0,\n  0,\n  0,\n  -(0.5 * direction[5]),\n  0.5 * direction[4],\n  0,\n  0,\n];\n\nexport const translationOrthogonal = (\n  direction: Direction,\n  distance: number,\n): Transform => {\n  const scale = 0.5 * distance;\n  return [1, 0, 0, 0, scale * direction[4], scale * direction[5], 0, 0];\n};\n\nexport const translationAlong = (line: Line, distance: number): Transform =>\n  GA.add(GA.mul(GADirection.orthogonalToLine(line), 0.5 * distance), 1);\n\nexport const compose = (motor1: Transform, motor2: Transform): Transform =>\n  GA.mul(motor2, motor1);\n\nexport const apply = (\n  motor: Transform,\n  nvector: Point | Direction | Line,\n): Point | Direction | Line =>\n  GA.normalized(GA.mul(GA.mul(motor, nvector), GA.reverse(motor)));\n","import * as GA from \"../ga\";\nimport * as GAPoint from \"../gapoints\";\nimport * as GADirection from \"../gadirections\";\nimport * as GALine from \"../galines\";\nimport * as GATransform from \"../gatransforms\";\n\nimport {\n  distance2d,\n  rotatePoint,\n  isPathALoop,\n  isPointInPolygon,\n  rotate,\n} from \"../math\";\nimport { pointsOnBezierCurves } from \"points-on-curve\";\n\nimport {\n  NonDeletedExcalidrawElement,\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawRectangleElement,\n  ExcalidrawDiamondElement,\n  ExcalidrawTextElement,\n  ExcalidrawEllipseElement,\n  NonDeleted,\n  ExcalidrawFreeDrawElement,\n} from \"./types\";\n\nimport { getElementAbsoluteCoords, getCurvePathOps, Bounds } from \"./bounds\";\nimport { Point } from \"../types\";\nimport { Drawable } from \"roughjs/bin/core\";\nimport { AppState } from \"../types\";\nimport { getShapeForElement } from \"../renderer/renderElement\";\n\nconst isElementDraggableFromInside = (\n  element: NonDeletedExcalidrawElement,\n): boolean => {\n  if (element.type === \"arrow\") {\n    return false;\n  }\n\n  if (element.type === \"freedraw\") {\n    return true;\n  }\n\n  const isDraggableFromInside = element.backgroundColor !== \"transparent\";\n\n  if (element.type === \"line\") {\n    return isDraggableFromInside && isPathALoop(element.points);\n  }\n\n  return isDraggableFromInside;\n};\n\nexport const hitTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n): boolean => {\n  // How many pixels off the shape boundary we still consider a hit\n  const threshold = 10 / appState.zoom.value;\n  const point: Point = [x, y];\n\n  if (isElementSelected(appState, element)) {\n    return isPointHittingElementBoundingBox(element, point, threshold);\n  }\n\n  return isHittingElementNotConsideringBoundingBox(element, appState, point);\n};\n\nexport const isHittingElementBoundingBoxWithoutHittingElement = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n): boolean => {\n  const threshold = 10 / appState.zoom.value;\n\n  return (\n    !isHittingElementNotConsideringBoundingBox(element, appState, [x, y]) &&\n    isPointHittingElementBoundingBox(element, [x, y], threshold)\n  );\n};\n\nconst isHittingElementNotConsideringBoundingBox = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  point: Point,\n): boolean => {\n  const threshold = 10 / appState.zoom.value;\n\n  const check =\n    element.type === \"text\"\n      ? isStrictlyInside\n      : isElementDraggableFromInside(element)\n      ? isInsideCheck\n      : isNearCheck;\n\n  return hitTestPointAgainstElement({ element, point, threshold, check });\n};\n\nconst isElementSelected = (\n  appState: AppState,\n  element: NonDeleted<ExcalidrawElement>,\n) => appState.selectedElementIds[element.id];\n\nconst isPointHittingElementBoundingBox = (\n  element: NonDeleted<ExcalidrawElement>,\n  [x, y]: Point,\n  threshold: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const elementCenterX = (x1 + x2) / 2;\n  const elementCenterY = (y1 + y2) / 2;\n  // reverse rotate to take element's angle into account.\n  const [rotatedX, rotatedY] = rotate(\n    x,\n    y,\n    elementCenterX,\n    elementCenterY,\n    -element.angle,\n  );\n\n  return (\n    rotatedX > x1 - threshold &&\n    rotatedX < x2 + threshold &&\n    rotatedY > y1 - threshold &&\n    rotatedY < y2 + threshold\n  );\n};\n\nexport const bindingBorderTest = (\n  element: NonDeleted<ExcalidrawBindableElement>,\n  { x, y }: { x: number; y: number },\n): boolean => {\n  const threshold = maxBindingGap(element, element.width, element.height);\n  const check = isOutsideCheck;\n  const point: Point = [x, y];\n  return hitTestPointAgainstElement({ element, point, threshold, check });\n};\n\nexport const maxBindingGap = (\n  element: ExcalidrawElement,\n  elementWidth: number,\n  elementHeight: number,\n): number => {\n  // Aligns diamonds with rectangles\n  const shapeRatio = element.type === \"diamond\" ? 1 / Math.sqrt(2) : 1;\n  const smallerDimension = shapeRatio * Math.min(elementWidth, elementHeight);\n  // We make the bindable boundary bigger for bigger elements\n  return Math.max(16, Math.min(0.25 * smallerDimension, 32));\n};\n\ntype HitTestArgs = {\n  element: NonDeletedExcalidrawElement;\n  point: Point;\n  threshold: number;\n  check: (distance: number, threshold: number) => boolean;\n};\n\nconst hitTestPointAgainstElement = (args: HitTestArgs): boolean => {\n  switch (args.element.type) {\n    case \"rectangle\":\n    case \"text\":\n    case \"diamond\":\n    case \"ellipse\":\n      const distance = distanceToBindableElement(args.element, args.point);\n      return args.check(distance, args.threshold);\n    case \"freedraw\": {\n      if (\n        !args.check(\n          distanceToRectangle(args.element, args.point),\n          args.threshold,\n        )\n      ) {\n        return false;\n      }\n\n      return hitTestFreeDrawElement(args.element, args.point, args.threshold);\n    }\n    case \"arrow\":\n    case \"line\":\n      return hitTestLinear(args);\n    case \"selection\":\n      console.warn(\n        \"This should not happen, we need to investigate why it does.\",\n      );\n      return false;\n  }\n};\n\nexport const distanceToBindableElement = (\n  element: ExcalidrawBindableElement,\n  point: Point,\n): number => {\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n      return distanceToRectangle(element, point);\n    case \"diamond\":\n      return distanceToDiamond(element, point);\n    case \"ellipse\":\n      return distanceToEllipse(element, point);\n  }\n};\n\nconst isStrictlyInside = (distance: number, threshold: number): boolean => {\n  return distance < 0;\n};\n\nconst isInsideCheck = (distance: number, threshold: number): boolean => {\n  return distance < threshold;\n};\n\nconst isNearCheck = (distance: number, threshold: number): boolean => {\n  return Math.abs(distance) < threshold;\n};\n\nconst isOutsideCheck = (distance: number, threshold: number): boolean => {\n  return 0 <= distance && distance < threshold;\n};\n\nconst distanceToRectangle = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawTextElement\n    | ExcalidrawFreeDrawElement,\n  point: Point,\n): number => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  return Math.max(\n    GAPoint.distanceToLine(pointRel, GALine.equation(0, 1, -hheight)),\n    GAPoint.distanceToLine(pointRel, GALine.equation(1, 0, -hwidth)),\n  );\n};\n\nconst distanceToDiamond = (\n  element: ExcalidrawDiamondElement,\n  point: Point,\n): number => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  const side = GALine.equation(hheight, hwidth, -hheight * hwidth);\n  return GAPoint.distanceToLine(pointRel, side);\n};\n\nconst distanceToEllipse = (\n  element: ExcalidrawEllipseElement,\n  point: Point,\n): number => {\n  const [pointRel, tangent] = ellipseParamsForTest(element, point);\n  return -GALine.sign(tangent) * GAPoint.distanceToLine(pointRel, tangent);\n};\n\nconst ellipseParamsForTest = (\n  element: ExcalidrawEllipseElement,\n  point: Point,\n): [GA.Point, GA.Line] => {\n  const [, pointRel, hwidth, hheight] = pointRelativeToElement(element, point);\n  const [px, py] = GAPoint.toTuple(pointRel);\n\n  // We're working in positive quadrant, so start with `t = 45deg`, `tx=cos(t)`\n  let tx = 0.707;\n  let ty = 0.707;\n\n  const a = hwidth;\n  const b = hheight;\n\n  // This is a numerical method to find the params tx, ty at which\n  // the ellipse has the closest point to the given point\n  [0, 1, 2, 3].forEach((_) => {\n    const xx = a * tx;\n    const yy = b * ty;\n\n    const ex = ((a * a - b * b) * tx ** 3) / a;\n    const ey = ((b * b - a * a) * ty ** 3) / b;\n\n    const rx = xx - ex;\n    const ry = yy - ey;\n\n    const qx = px - ex;\n    const qy = py - ey;\n\n    const r = Math.hypot(ry, rx);\n    const q = Math.hypot(qy, qx);\n\n    tx = Math.min(1, Math.max(0, ((qx * r) / q + ex) / a));\n    ty = Math.min(1, Math.max(0, ((qy * r) / q + ey) / b));\n    const t = Math.hypot(ty, tx);\n    tx /= t;\n    ty /= t;\n  });\n\n  const closestPoint = GA.point(a * tx, b * ty);\n\n  const tangent = GALine.orthogonalThrough(pointRel, closestPoint);\n  return [pointRel, tangent];\n};\n\nconst hitTestFreeDrawElement = (\n  element: ExcalidrawFreeDrawElement,\n  point: Point,\n  threshold: number,\n): boolean => {\n  // Check point-distance-to-line-segment for every segment in the\n  // element's points (its input points, not its outline points).\n  // This is... okay? It's plenty fast, but the GA library may\n  // have a faster option.\n\n  let x: number;\n  let y: number;\n\n  if (element.angle === 0) {\n    x = point[0] - element.x;\n    y = point[1] - element.y;\n  } else {\n    // Counter-rotate the point around center before testing\n    const [minX, minY, maxX, maxY] = getElementAbsoluteCoords(element);\n    const rotatedPoint = rotatePoint(\n      point,\n      [minX + (maxX - minX) / 2, minY + (maxY - minY) / 2],\n      -element.angle,\n    );\n    x = rotatedPoint[0] - element.x;\n    y = rotatedPoint[1] - element.y;\n  }\n\n  let [A, B] = element.points;\n  let P: readonly [number, number];\n\n  // For freedraw dots\n  if (element.points.length === 2) {\n    return (\n      distance2d(A[0], A[1], x, y) < threshold ||\n      distance2d(B[0], B[1], x, y) < threshold\n    );\n  }\n\n  // For freedraw lines\n  for (let i = 1; i < element.points.length - 1; i++) {\n    const delta = [B[0] - A[0], B[1] - A[1]];\n    const length = Math.hypot(delta[1], delta[0]);\n\n    const U = [delta[0] / length, delta[1] / length];\n    const C = [x - A[0], y - A[1]];\n    const d = (C[0] * U[0] + C[1] * U[1]) / Math.hypot(U[1], U[0]);\n    P = [A[0] + U[0] * d, A[1] + U[1] * d];\n\n    const da = distance2d(P[0], P[1], A[0], A[1]);\n    const db = distance2d(P[0], P[1], B[0], B[1]);\n\n    P = db < da && da > length ? B : da < db && db > length ? A : P;\n\n    if (Math.hypot(y - P[1], x - P[0]) < threshold) {\n      return true;\n    }\n\n    A = B;\n    B = element.points[i + 1];\n  }\n\n  return false;\n};\n\nconst hitTestLinear = (args: HitTestArgs): boolean => {\n  const { element, threshold } = args;\n  if (!getShapeForElement(element)) {\n    return false;\n  }\n  const [point, pointAbs, hwidth, hheight] = pointRelativeToElement(\n    args.element,\n    args.point,\n  );\n  const side1 = GALine.equation(0, 1, -hheight);\n  const side2 = GALine.equation(1, 0, -hwidth);\n  if (\n    !isInsideCheck(GAPoint.distanceToLine(pointAbs, side1), threshold) ||\n    !isInsideCheck(GAPoint.distanceToLine(pointAbs, side2), threshold)\n  ) {\n    return false;\n  }\n  const [relX, relY] = GAPoint.toTuple(point);\n\n  const shape = getShapeForElement(element) as Drawable[];\n\n  if (args.check === isInsideCheck) {\n    const hit = shape.some((subshape) =>\n      hitTestCurveInside(subshape, relX, relY, element.strokeSharpness),\n    );\n    if (hit) {\n      return true;\n    }\n  }\n\n  // hit test all \"subshapes\" of the linear element\n  return shape.some((subshape) =>\n    hitTestRoughShape(subshape, relX, relY, threshold),\n  );\n};\n\n// Returns:\n//   1. the point relative to the elements (x, y) position\n//   2. the point relative to the element's center with positive (x, y)\n//   3. half element width\n//   4. half element height\n//\n// Note that for linear elements the (x, y) position is not at the\n// top right corner of their boundary.\n//\n// Rectangles, diamonds and ellipses are symmetrical over axes,\n// and other elements have a rectangular boundary,\n// so we only need to perform hit tests for the positive quadrant.\nconst pointRelativeToElement = (\n  element: ExcalidrawElement,\n  pointTuple: Point,\n): [GA.Point, GA.Point, number, number] => {\n  const point = GAPoint.from(pointTuple);\n  const elementCoords = getElementAbsoluteCoords(element);\n  const center = coordsCenter(elementCoords);\n  // GA has angle orientation opposite to `rotate`\n  const rotate = GATransform.rotation(center, element.angle);\n  const pointRotated = GATransform.apply(rotate, point);\n  const pointRelToCenter = GA.sub(pointRotated, GADirection.from(center));\n  const pointRelToCenterAbs = GAPoint.abs(pointRelToCenter);\n  const elementPos = GA.offset(element.x, element.y);\n  const pointRelToPos = GA.sub(pointRotated, elementPos);\n  const [ax, ay, bx, by] = elementCoords;\n  const halfWidth = (bx - ax) / 2;\n  const halfHeight = (by - ay) / 2;\n  return [pointRelToPos, pointRelToCenterAbs, halfWidth, halfHeight];\n};\n\n// Returns point in absolute coordinates\nexport const pointInAbsoluteCoords = (\n  element: ExcalidrawElement,\n  // Point relative to the element position\n  point: Point,\n): Point => {\n  const [x, y] = point;\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x2 - x1) / 2;\n  const cy = (y2 - y1) / 2;\n  const [rotatedX, rotatedY] = rotate(x, y, cx, cy, element.angle);\n  return [element.x + rotatedX, element.y + rotatedY];\n};\n\nconst relativizationToElementCenter = (\n  element: ExcalidrawElement,\n): GA.Transform => {\n  const elementCoords = getElementAbsoluteCoords(element);\n  const center = coordsCenter(elementCoords);\n  // GA has angle orientation opposite to `rotate`\n  const rotate = GATransform.rotation(center, element.angle);\n  const translate = GA.reverse(\n    GATransform.translation(GADirection.from(center)),\n  );\n  return GATransform.compose(rotate, translate);\n};\n\nconst coordsCenter = ([ax, ay, bx, by]: Bounds): GA.Point => {\n  return GA.point((ax + bx) / 2, (ay + by) / 2);\n};\n\n// The focus distance is the oriented ratio between the size of\n// the `element` and the \"focus image\" of the element on which\n// all focus points lie, so it's a number between -1 and 1.\n// The line going through `a` and `b` is a tangent to the \"focus image\"\n// of the element.\nexport const determineFocusDistance = (\n  element: ExcalidrawBindableElement,\n  // Point on the line, in absolute coordinates\n  a: Point,\n  // Another point on the line, in absolute coordinates (closer to element)\n  b: Point,\n): number => {\n  const relateToCenter = relativizationToElementCenter(element);\n  const aRel = GATransform.apply(relateToCenter, GAPoint.from(a));\n  const bRel = GATransform.apply(relateToCenter, GAPoint.from(b));\n  const line = GALine.through(aRel, bRel);\n  const q = element.height / element.width;\n  const hwidth = element.width / 2;\n  const hheight = element.height / 2;\n  const n = line[2];\n  const m = line[3];\n  const c = line[1];\n  const mabs = Math.abs(m);\n  const nabs = Math.abs(n);\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n      return c / (hwidth * (nabs + q * mabs));\n    case \"diamond\":\n      return mabs < nabs ? c / (nabs * hwidth) : c / (mabs * hheight);\n    case \"ellipse\":\n      return c / (hwidth * Math.sqrt(n ** 2 + q ** 2 * m ** 2));\n  }\n};\n\nexport const determineFocusPoint = (\n  element: ExcalidrawBindableElement,\n  // The oriented, relative distance from the center of `element` of the\n  // returned focusPoint\n  focus: number,\n  adjecentPoint: Point,\n): Point => {\n  if (focus === 0) {\n    const elementCoords = getElementAbsoluteCoords(element);\n    const center = coordsCenter(elementCoords);\n    return GAPoint.toTuple(center);\n  }\n  const relateToCenter = relativizationToElementCenter(element);\n  const adjecentPointRel = GATransform.apply(\n    relateToCenter,\n    GAPoint.from(adjecentPoint),\n  );\n  const reverseRelateToCenter = GA.reverse(relateToCenter);\n  let point;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n    case \"diamond\":\n      point = findFocusPointForRectangulars(element, focus, adjecentPointRel);\n      break;\n    case \"ellipse\":\n      point = findFocusPointForEllipse(element, focus, adjecentPointRel);\n      break;\n  }\n  return GAPoint.toTuple(GATransform.apply(reverseRelateToCenter, point));\n};\n\n// Returns 2 or 0 intersection points between line going through `a` and `b`\n// and the `element`, in ascending order of distance from `a`.\nexport const intersectElementWithLine = (\n  element: ExcalidrawBindableElement,\n  // Point on the line, in absolute coordinates\n  a: Point,\n  // Another point on the line, in absolute coordinates\n  b: Point,\n  // If given, the element is inflated by this value\n  gap: number = 0,\n): Point[] => {\n  const relateToCenter = relativizationToElementCenter(element);\n  const aRel = GATransform.apply(relateToCenter, GAPoint.from(a));\n  const bRel = GATransform.apply(relateToCenter, GAPoint.from(b));\n  const line = GALine.through(aRel, bRel);\n  const reverseRelateToCenter = GA.reverse(relateToCenter);\n  const intersections = getSortedElementLineIntersections(\n    element,\n    line,\n    aRel,\n    gap,\n  );\n  return intersections.map((point) =>\n    GAPoint.toTuple(GATransform.apply(reverseRelateToCenter, point)),\n  );\n};\n\nconst getSortedElementLineIntersections = (\n  element: ExcalidrawBindableElement,\n  // Relative to element center\n  line: GA.Line,\n  // Relative to element center\n  nearPoint: GA.Point,\n  gap: number = 0,\n): GA.Point[] => {\n  let intersections: GA.Point[];\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n    case \"diamond\":\n      const corners = getCorners(element);\n      intersections = corners\n        .flatMap((point, i) => {\n          const edge: [GA.Point, GA.Point] = [point, corners[(i + 1) % 4]];\n          return intersectSegment(line, offsetSegment(edge, gap));\n        })\n        .concat(\n          corners.flatMap((point) => getCircleIntersections(point, gap, line)),\n        );\n      break;\n    case \"ellipse\":\n      intersections = getEllipseIntersections(element, gap, line);\n      break;\n  }\n  if (intersections.length < 2) {\n    // Ignore the \"edge\" case of only intersecting with a single corner\n    return [];\n  }\n  const sortedIntersections = intersections.sort(\n    (i1, i2) =>\n      GAPoint.distance(i1, nearPoint) - GAPoint.distance(i2, nearPoint),\n  );\n  return [\n    sortedIntersections[0],\n    sortedIntersections[sortedIntersections.length - 1],\n  ];\n};\n\nconst getCorners = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawDiamondElement\n    | ExcalidrawTextElement,\n  scale: number = 1,\n): GA.Point[] => {\n  const hx = (scale * element.width) / 2;\n  const hy = (scale * element.height) / 2;\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n      return [\n        GA.point(hx, hy),\n        GA.point(hx, -hy),\n        GA.point(-hx, -hy),\n        GA.point(-hx, hy),\n      ];\n    case \"diamond\":\n      return [\n        GA.point(0, hy),\n        GA.point(hx, 0),\n        GA.point(0, -hy),\n        GA.point(-hx, 0),\n      ];\n  }\n};\n\n// Returns intersection of `line` with `segment`, with `segment` moved by\n// `gap` in its polar direction.\n// If intersection conincides with second segment point returns empty array.\nconst intersectSegment = (\n  line: GA.Line,\n  segment: [GA.Point, GA.Point],\n): GA.Point[] => {\n  const [a, b] = segment;\n  const aDist = GAPoint.distanceToLine(a, line);\n  const bDist = GAPoint.distanceToLine(b, line);\n  if (aDist * bDist >= 0) {\n    // The intersection is outside segment `(a, b)`\n    return [];\n  }\n  return [GAPoint.intersect(line, GALine.through(a, b))];\n};\n\nconst offsetSegment = (\n  segment: [GA.Point, GA.Point],\n  distance: number,\n): [GA.Point, GA.Point] => {\n  const [a, b] = segment;\n  const offset = GATransform.translationOrthogonal(\n    GADirection.fromTo(a, b),\n    distance,\n  );\n  return [GATransform.apply(offset, a), GATransform.apply(offset, b)];\n};\n\nconst getEllipseIntersections = (\n  element: ExcalidrawEllipseElement,\n  gap: number,\n  line: GA.Line,\n): GA.Point[] => {\n  const a = element.width / 2 + gap;\n  const b = element.height / 2 + gap;\n  const m = line[2];\n  const n = line[3];\n  const c = line[1];\n  const squares = a * a * m * m + b * b * n * n;\n  const discr = squares - c * c;\n  if (squares === 0 || discr <= 0) {\n    return [];\n  }\n  const discrRoot = Math.sqrt(discr);\n  const xn = -a * a * m * c;\n  const yn = -b * b * n * c;\n  return [\n    GA.point(\n      (xn + a * b * n * discrRoot) / squares,\n      (yn - a * b * m * discrRoot) / squares,\n    ),\n    GA.point(\n      (xn - a * b * n * discrRoot) / squares,\n      (yn + a * b * m * discrRoot) / squares,\n    ),\n  ];\n};\n\nexport const getCircleIntersections = (\n  center: GA.Point,\n  radius: number,\n  line: GA.Line,\n): GA.Point[] => {\n  if (radius === 0) {\n    return GAPoint.distanceToLine(line, center) === 0 ? [center] : [];\n  }\n  const m = line[2];\n  const n = line[3];\n  const c = line[1];\n  const [a, b] = GAPoint.toTuple(center);\n  const r = radius;\n  const squares = m * m + n * n;\n  const discr = r * r * squares - (m * a + n * b + c) ** 2;\n  if (squares === 0 || discr <= 0) {\n    return [];\n  }\n  const discrRoot = Math.sqrt(discr);\n  const xn = a * n * n - b * m * n - m * c;\n  const yn = b * m * m - a * m * n - n * c;\n\n  return [\n    GA.point((xn + n * discrRoot) / squares, (yn - m * discrRoot) / squares),\n    GA.point((xn - n * discrRoot) / squares, (yn + m * discrRoot) / squares),\n  ];\n};\n\n// The focus point is the tangent point of the \"focus image\" of the\n// `element`, where the tangent goes through `point`.\nexport const findFocusPointForEllipse = (\n  ellipse: ExcalidrawEllipseElement,\n  // Between -1 and 1 (not 0) the relative size of the \"focus image\" of\n  // the element on which the focus point lies\n  relativeDistance: number,\n  // The point for which we're trying to find the focus point, relative\n  // to the ellipse center.\n  point: GA.Point,\n): GA.Point => {\n  const relativeDistanceAbs = Math.abs(relativeDistance);\n  const a = (ellipse.width * relativeDistanceAbs) / 2;\n  const b = (ellipse.height * relativeDistanceAbs) / 2;\n\n  const orientation = Math.sign(relativeDistance);\n  const [px, pyo] = GAPoint.toTuple(point);\n\n  // The calculation below can't handle py = 0\n  const py = pyo === 0 ? 0.0001 : pyo;\n\n  const squares = px ** 2 * b ** 2 + py ** 2 * a ** 2;\n  // Tangent mx + ny + 1 = 0\n  const m =\n    (-px * b ** 2 +\n      orientation * py * Math.sqrt(Math.max(0, squares - a ** 2 * b ** 2))) /\n    squares;\n\n  const n = (-m * px - 1) / py;\n\n  const x = -(a ** 2 * m) / (n ** 2 * b ** 2 + m ** 2 * a ** 2);\n  return GA.point(x, (-m * x - 1) / n);\n};\n\nexport const findFocusPointForRectangulars = (\n  element:\n    | ExcalidrawRectangleElement\n    | ExcalidrawDiamondElement\n    | ExcalidrawTextElement,\n  // Between -1 and 1 for how far away should the focus point be relative\n  // to the size of the element. Sign determines orientation.\n  relativeDistance: number,\n  // The point for which we're trying to find the focus point, relative\n  // to the element center.\n  point: GA.Point,\n): GA.Point => {\n  const relativeDistanceAbs = Math.abs(relativeDistance);\n  const orientation = Math.sign(relativeDistance);\n  const corners = getCorners(element, relativeDistanceAbs);\n\n  let maxDistance = 0;\n  let tangentPoint: null | GA.Point = null;\n  corners.forEach((corner) => {\n    const distance = orientation * GALine.through(point, corner)[1];\n    if (distance > maxDistance) {\n      maxDistance = distance;\n      tangentPoint = corner;\n    }\n  });\n  return tangentPoint!;\n};\n\nconst pointInBezierEquation = (\n  p0: Point,\n  p1: Point,\n  p2: Point,\n  p3: Point,\n  [mx, my]: Point,\n  lineThreshold: number,\n) => {\n  // B(t) = p0 * (1-t)^3 + 3p1 * t * (1-t)^2 + 3p2 * t^2 * (1-t) + p3 * t^3\n  const equation = (t: number, idx: number) =>\n    Math.pow(1 - t, 3) * p3[idx] +\n    3 * t * Math.pow(1 - t, 2) * p2[idx] +\n    3 * Math.pow(t, 2) * (1 - t) * p1[idx] +\n    p0[idx] * Math.pow(t, 3);\n\n  // go through t in increments of 0.01\n  let t = 0;\n  while (t <= 1.0) {\n    const tx = equation(t, 0);\n    const ty = equation(t, 1);\n\n    const diff = Math.sqrt(Math.pow(tx - mx, 2) + Math.pow(ty - my, 2));\n\n    if (diff < lineThreshold) {\n      return true;\n    }\n\n    t += 0.01;\n  }\n\n  return false;\n};\n\nconst hitTestCurveInside = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  sharpness: ExcalidrawElement[\"strokeSharpness\"],\n) => {\n  const ops = getCurvePathOps(drawable);\n  const points: Point[] = [];\n  let odd = false; // select one line out of double lines\n  for (const operation of ops) {\n    if (operation.op === \"move\") {\n      odd = !odd;\n      if (odd) {\n        points.push([operation.data[0], operation.data[1]]);\n      }\n    } else if (operation.op === \"bcurveTo\") {\n      if (odd) {\n        points.push([operation.data[0], operation.data[1]]);\n        points.push([operation.data[2], operation.data[3]]);\n        points.push([operation.data[4], operation.data[5]]);\n      }\n    }\n  }\n  if (points.length >= 4) {\n    if (sharpness === \"sharp\") {\n      return isPointInPolygon(points, x, y);\n    }\n    const polygonPoints = pointsOnBezierCurves(points as any, 10, 5);\n    return isPointInPolygon(polygonPoints, x, y);\n  }\n  return false;\n};\n\nconst hitTestRoughShape = (\n  drawable: Drawable,\n  x: number,\n  y: number,\n  lineThreshold: number,\n) => {\n  // read operations from first opSet\n  const ops = getCurvePathOps(drawable);\n\n  // set start position as (0,0) just in case\n  // move operation does not exist (unlikely but it is worth safekeeping it)\n  let currentP: Point = [0, 0];\n\n  return ops.some(({ op, data }, idx) => {\n    // There are only four operation types:\n    // move, bcurveTo, lineTo, and curveTo\n    if (op === \"move\") {\n      // change starting point\n      currentP = (data as unknown) as Point;\n      // move operation does not draw anything; so, it always\n      // returns false\n    } else if (op === \"bcurveTo\") {\n      // create points from bezier curve\n      // bezier curve stores data as a flattened array of three positions\n      // [x1, y1, x2, y2, x3, y3]\n      const p1 = [data[0], data[1]] as Point;\n      const p2 = [data[2], data[3]] as Point;\n      const p3 = [data[4], data[5]] as Point;\n\n      const p0 = currentP;\n      currentP = p3;\n\n      // check if points are on the curve\n      // cubic bezier curves require four parameters\n      // the first parameter is the last stored position (p0)\n      const retVal = pointInBezierEquation(\n        p0,\n        p1,\n        p2,\n        p3,\n        [x, y],\n        lineThreshold,\n      );\n\n      // set end point of bezier curve as the new starting point for\n      // upcoming operations as each operation is based on the last drawn\n      // position of the previous operation\n      return retVal;\n    } else if (op === \"lineTo\") {\n      // TODO: Implement this\n    } else if (op === \"qcurveTo\") {\n      // TODO: Implement this\n    }\n\n    return false;\n  });\n};\n","import {\n  ExcalidrawElement,\n  PointerType,\n  NonDeletedExcalidrawElement,\n} from \"./types\";\n\nimport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n  TransformHandleType,\n  TransformHandle,\n  MaybeTransformHandleType,\n} from \"./transformHandles\";\nimport { AppState, Zoom } from \"../types\";\n\nconst isInsideTransformHandle = (\n  transformHandle: TransformHandle,\n  x: number,\n  y: number,\n) =>\n  x >= transformHandle[0] &&\n  x <= transformHandle[0] + transformHandle[2] &&\n  y >= transformHandle[1] &&\n  y <= transformHandle[1] + transformHandle[3];\n\nexport const resizeTest = (\n  element: NonDeletedExcalidrawElement,\n  appState: AppState,\n  x: number,\n  y: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n): MaybeTransformHandleType => {\n  if (!appState.selectedElementIds[element.id]) {\n    return false;\n  }\n\n  const {\n    rotation: rotationTransformHandle,\n    ...transformHandles\n  } = getTransformHandles(element, zoom, pointerType);\n\n  if (\n    rotationTransformHandle &&\n    isInsideTransformHandle(rotationTransformHandle, x, y)\n  ) {\n    return \"rotation\" as TransformHandleType;\n  }\n\n  const filter = Object.keys(transformHandles).filter((key) => {\n    const transformHandle = transformHandles[\n      key as Exclude<TransformHandleType, \"rotation\">\n    ]!;\n    if (!transformHandle) {\n      return false;\n    }\n    return isInsideTransformHandle(transformHandle, x, y);\n  });\n\n  if (filter.length > 0) {\n    return filter[0] as TransformHandleType;\n  }\n\n  return false;\n};\n\nexport const getElementWithTransformHandleType = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n) => {\n  return elements.reduce((result, element) => {\n    if (result) {\n      return result;\n    }\n    const transformHandleType = resizeTest(\n      element,\n      appState,\n      scenePointerX,\n      scenePointerY,\n      zoom,\n      pointerType,\n    );\n    return transformHandleType ? { element, transformHandleType } : null;\n  }, null as { element: NonDeletedExcalidrawElement; transformHandleType: MaybeTransformHandleType } | null);\n};\n\nexport const getTransformHandleTypeFromCoords = (\n  [x1, y1, x2, y2]: readonly [number, number, number, number],\n  scenePointerX: number,\n  scenePointerY: number,\n  zoom: Zoom,\n  pointerType: PointerType,\n): MaybeTransformHandleType => {\n  const transformHandles = getTransformHandlesFromCoords(\n    [x1, y1, x2, y2],\n    0,\n    zoom,\n    pointerType,\n    OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  );\n\n  const found = Object.keys(transformHandles).find((key) => {\n    const transformHandle = transformHandles[\n      key as Exclude<TransformHandleType, \"rotation\">\n    ]!;\n    return (\n      transformHandle &&\n      isInsideTransformHandle(transformHandle, scenePointerX, scenePointerY)\n    );\n  });\n  return (found || false) as MaybeTransformHandleType;\n};\n\nconst RESIZE_CURSORS = [\"ns\", \"nesw\", \"ew\", \"nwse\"];\nconst rotateResizeCursor = (cursor: string, angle: number) => {\n  const index = RESIZE_CURSORS.indexOf(cursor);\n  if (index >= 0) {\n    const a = Math.round(angle / (Math.PI / 4));\n    cursor = RESIZE_CURSORS[(index + a) % RESIZE_CURSORS.length];\n  }\n  return cursor;\n};\n\n/*\n * Returns bi-directional cursor for the element being resized\n */\nexport const getCursorForResizingElement = (resizingElement: {\n  element?: ExcalidrawElement;\n  transformHandleType: MaybeTransformHandleType;\n}): string => {\n  const { element, transformHandleType } = resizingElement;\n  const shouldSwapCursors =\n    element && Math.sign(element.height) * Math.sign(element.width) === -1;\n  let cursor = null;\n\n  switch (transformHandleType) {\n    case \"n\":\n    case \"s\":\n      cursor = \"ns\";\n      break;\n    case \"w\":\n    case \"e\":\n      cursor = \"ew\";\n      break;\n    case \"nw\":\n    case \"se\":\n      if (shouldSwapCursors) {\n        cursor = \"nesw\";\n      } else {\n        cursor = \"nwse\";\n      }\n      break;\n    case \"ne\":\n    case \"sw\":\n      if (shouldSwapCursors) {\n        cursor = \"nwse\";\n      } else {\n        cursor = \"nesw\";\n      }\n      break;\n    case \"rotation\":\n      return \"grab\";\n  }\n\n  if (cursor && element) {\n    cursor = rotateResizeCursor(cursor, element.angle);\n  }\n\n  return cursor ? `${cursor}-resize` : \"\";\n};\n","import {\n  NonDeleted,\n  ExcalidrawLinearElement,\n  ExcalidrawElement,\n  PointBinding,\n  ExcalidrawBindableElement,\n} from \"./types\";\nimport { distance2d, rotate, isPathALoop, getGridPoint } from \"../math\";\nimport { getElementAbsoluteCoords } from \".\";\nimport { getElementPointsCoords } from \"./bounds\";\nimport { Point, AppState } from \"../types\";\nimport { mutateElement } from \"./mutateElement\";\nimport History from \"../history\";\n\nimport Scene from \"../scene/Scene\";\nimport {\n  bindOrUnbindLinearElement,\n  getHoveredElementForBinding,\n  isBindingEnabled,\n} from \"./binding\";\nimport { tupleToCoors } from \"../utils\";\nimport { isBindingElement } from \"./typeChecks\";\n\nexport class LinearElementEditor {\n  public elementId: ExcalidrawElement[\"id\"] & {\n    _brand: \"excalidrawLinearElementId\";\n  };\n  public activePointIndex: number | null;\n  /** whether you're dragging a point */\n  public isDragging: boolean;\n  public lastUncommittedPoint: Point | null;\n  public pointerOffset: { x: number; y: number };\n  public startBindingElement: ExcalidrawBindableElement | null | \"keep\";\n  public endBindingElement: ExcalidrawBindableElement | null | \"keep\";\n\n  constructor(element: NonDeleted<ExcalidrawLinearElement>, scene: Scene) {\n    this.elementId = element.id as string & {\n      _brand: \"excalidrawLinearElementId\";\n    };\n    Scene.mapElementToScene(this.elementId, scene);\n    LinearElementEditor.normalizePoints(element);\n\n    this.activePointIndex = null;\n    this.lastUncommittedPoint = null;\n    this.isDragging = false;\n    this.pointerOffset = { x: 0, y: 0 };\n    this.startBindingElement = \"keep\";\n    this.endBindingElement = \"keep\";\n  }\n\n  // ---------------------------------------------------------------------------\n  // static methods\n  // ---------------------------------------------------------------------------\n\n  static POINT_HANDLE_SIZE = 20;\n\n  /**\n   * @param id the `elementId` from the instance of this class (so that we can\n   *  statically guarantee this method returns an ExcalidrawLinearElement)\n   */\n  static getElement(id: InstanceType<typeof LinearElementEditor>[\"elementId\"]) {\n    const element = Scene.getScene(id)?.getNonDeletedElement(id);\n    if (element) {\n      return element as NonDeleted<ExcalidrawLinearElement>;\n    }\n    return null;\n  }\n\n  /** @returns whether point was dragged */\n  static handlePointDragging(\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    scenePointerX: number,\n    scenePointerY: number,\n    maybeSuggestBinding: (\n      element: NonDeleted<ExcalidrawLinearElement>,\n      startOrEnd: \"start\" | \"end\",\n    ) => void,\n  ): boolean {\n    if (!appState.editingLinearElement) {\n      return false;\n    }\n    const { editingLinearElement } = appState;\n    const { activePointIndex, elementId, isDragging } = editingLinearElement;\n\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return false;\n    }\n\n    if (activePointIndex != null && activePointIndex > -1) {\n      if (isDragging === false) {\n        setState({\n          editingLinearElement: {\n            ...editingLinearElement,\n            isDragging: true,\n          },\n        });\n      }\n\n      const newPoint = LinearElementEditor.createPointAt(\n        element,\n        scenePointerX - editingLinearElement.pointerOffset.x,\n        scenePointerY - editingLinearElement.pointerOffset.y,\n        appState.gridSize,\n      );\n      LinearElementEditor.movePoint(element, activePointIndex, newPoint);\n      if (isBindingElement(element)) {\n        maybeSuggestBinding(element, activePointIndex === 0 ? \"start\" : \"end\");\n      }\n      return true;\n    }\n    return false;\n  }\n\n  static handlePointerUp(\n    event: PointerEvent,\n    editingLinearElement: LinearElementEditor,\n    appState: AppState,\n  ): LinearElementEditor {\n    const { elementId, activePointIndex, isDragging } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    let binding = {};\n    if (\n      isDragging &&\n      (activePointIndex === 0 || activePointIndex === element.points.length - 1)\n    ) {\n      if (isPathALoop(element.points, appState.zoom.value)) {\n        LinearElementEditor.movePoint(\n          element,\n          activePointIndex,\n          activePointIndex === 0\n            ? element.points[element.points.length - 1]\n            : element.points[0],\n        );\n      }\n      const bindingElement = isBindingEnabled(appState)\n        ? getHoveredElementForBinding(\n            tupleToCoors(\n              LinearElementEditor.getPointAtIndexGlobalCoordinates(\n                element,\n                activePointIndex!,\n              ),\n            ),\n            Scene.getScene(element)!,\n          )\n        : null;\n      binding = {\n        [activePointIndex === 0\n          ? \"startBindingElement\"\n          : \"endBindingElement\"]: bindingElement,\n      };\n    }\n    return {\n      ...editingLinearElement,\n      ...binding,\n      isDragging: false,\n      pointerOffset: { x: 0, y: 0 },\n    };\n  }\n\n  static handlePointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    appState: AppState,\n    setState: React.Component<any, AppState>[\"setState\"],\n    history: History,\n    scenePointer: { x: number; y: number },\n  ): {\n    didAddPoint: boolean;\n    hitElement: NonDeleted<ExcalidrawElement> | null;\n  } {\n    const ret: ReturnType<typeof LinearElementEditor[\"handlePointerDown\"]> = {\n      didAddPoint: false,\n      hitElement: null,\n    };\n\n    if (!appState.editingLinearElement) {\n      return ret;\n    }\n\n    const { elementId } = appState.editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n\n    if (!element) {\n      return ret;\n    }\n\n    if (event.altKey) {\n      if (appState.editingLinearElement.lastUncommittedPoint == null) {\n        mutateElement(element, {\n          points: [\n            ...element.points,\n            LinearElementEditor.createPointAt(\n              element,\n              scenePointer.x,\n              scenePointer.y,\n              appState.gridSize,\n            ),\n          ],\n        });\n      }\n      history.resumeRecording();\n      setState({\n        editingLinearElement: {\n          ...appState.editingLinearElement,\n          activePointIndex: element.points.length - 1,\n          lastUncommittedPoint: null,\n          endBindingElement: getHoveredElementForBinding(\n            scenePointer,\n            Scene.getScene(element)!,\n          ),\n        },\n      });\n      ret.didAddPoint = true;\n      return ret;\n    }\n\n    const clickedPointIndex = LinearElementEditor.getPointIndexUnderCursor(\n      element,\n      appState.zoom,\n      scenePointer.x,\n      scenePointer.y,\n    );\n\n    // if we clicked on a point, set the element as hitElement otherwise\n    // it would get deselected if the point is outside the hitbox area\n    if (clickedPointIndex > -1) {\n      ret.hitElement = element;\n    } else {\n      // You might be wandering why we are storing the binding elements on\n      // LinearElementEditor and passing them in, insted of calculating them\n      // from the end points of the `linearElement` - this is to allow disabling\n      // binding (which needs to happen at the point the user finishes moving\n      // the point).\n      const {\n        startBindingElement,\n        endBindingElement,\n      } = appState.editingLinearElement;\n      if (isBindingEnabled(appState) && isBindingElement(element)) {\n        bindOrUnbindLinearElement(\n          element,\n          startBindingElement,\n          endBindingElement,\n        );\n      }\n    }\n\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const targetPoint =\n      clickedPointIndex > -1 &&\n      rotate(\n        element.x + element.points[clickedPointIndex][0],\n        element.y + element.points[clickedPointIndex][1],\n        cx,\n        cy,\n        element.angle,\n      );\n\n    setState({\n      editingLinearElement: {\n        ...appState.editingLinearElement,\n        activePointIndex: clickedPointIndex > -1 ? clickedPointIndex : null,\n        pointerOffset: targetPoint\n          ? {\n              x: scenePointer.x - targetPoint[0],\n              y: scenePointer.y - targetPoint[1],\n            }\n          : { x: 0, y: 0 },\n      },\n    });\n    return ret;\n  }\n\n  static handlePointerMove(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    editingLinearElement: LinearElementEditor,\n    gridSize: number | null,\n  ): LinearElementEditor {\n    const { elementId, lastUncommittedPoint } = editingLinearElement;\n    const element = LinearElementEditor.getElement(elementId);\n    if (!element) {\n      return editingLinearElement;\n    }\n\n    const { points } = element;\n    const lastPoint = points[points.length - 1];\n\n    if (!event.altKey) {\n      if (lastPoint === lastUncommittedPoint) {\n        LinearElementEditor.movePoint(element, points.length - 1, \"delete\");\n      }\n      return { ...editingLinearElement, lastUncommittedPoint: null };\n    }\n\n    const newPoint = LinearElementEditor.createPointAt(\n      element,\n      scenePointerX - editingLinearElement.pointerOffset.x,\n      scenePointerY - editingLinearElement.pointerOffset.y,\n      gridSize,\n    );\n\n    if (lastPoint === lastUncommittedPoint) {\n      LinearElementEditor.movePoint(\n        element,\n        element.points.length - 1,\n        newPoint,\n      );\n    } else {\n      LinearElementEditor.movePoint(element, \"new\", newPoint);\n    }\n\n    return {\n      ...editingLinearElement,\n      lastUncommittedPoint: element.points[element.points.length - 1],\n    };\n  }\n\n  static getPointsGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n  ) {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return element.points.map((point) => {\n      let { x, y } = element;\n      [x, y] = rotate(x + point[0], y + point[1], cx, cy, element.angle);\n      return [x, y];\n    });\n  }\n\n  static getPointAtIndexGlobalCoordinates(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    indexMaybeFromEnd: number, // -1 for last element\n  ): Point {\n    const index =\n      indexMaybeFromEnd < 0\n        ? element.points.length + indexMaybeFromEnd\n        : indexMaybeFromEnd;\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n\n    const point = element.points[index];\n    const { x, y } = element;\n    return rotate(x + point[0], y + point[1], cx, cy, element.angle);\n  }\n\n  static pointFromAbsoluteCoords(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    absoluteCoords: Point,\n  ): Point {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [x, y] = rotate(\n      absoluteCoords[0],\n      absoluteCoords[1],\n      cx,\n      cy,\n      -element.angle,\n    );\n    return [x - element.x, y - element.y];\n  }\n\n  static getPointIndexUnderCursor(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    zoom: AppState[\"zoom\"],\n    x: number,\n    y: number,\n  ) {\n    const pointHandles = this.getPointsGlobalCoordinates(element);\n    let idx = pointHandles.length;\n    // loop from right to left because points on the right are rendered over\n    // points on the left, thus should take precedence when clicking, if they\n    // overlap\n    while (--idx > -1) {\n      const point = pointHandles[idx];\n      if (\n        distance2d(x, y, point[0], point[1]) * zoom.value <\n        // +1px to account for outline stroke\n        this.POINT_HANDLE_SIZE / 2 + 1\n      ) {\n        return idx;\n      }\n    }\n    return -1;\n  }\n\n  static createPointAt(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    scenePointerX: number,\n    scenePointerY: number,\n    gridSize: number | null,\n  ): Point {\n    const pointerOnGrid = getGridPoint(scenePointerX, scenePointerY, gridSize);\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const [rotatedX, rotatedY] = rotate(\n      pointerOnGrid[0],\n      pointerOnGrid[1],\n      cx,\n      cy,\n      -element.angle,\n    );\n\n    return [rotatedX - element.x, rotatedY - element.y];\n  }\n\n  /**\n   * Normalizes line points so that the start point is at [0,0]. This is\n   * expected in various parts of the codebase. Also returns new x/y to account\n   * for the potential normalization.\n   */\n  static getNormalizedPoints(element: ExcalidrawLinearElement) {\n    const { points } = element;\n\n    const offsetX = points[0][0];\n    const offsetY = points[0][1];\n\n    return {\n      points: points.map((point, _idx) => {\n        return [point[0] - offsetX, point[1] - offsetY] as const;\n      }),\n      x: element.x + offsetX,\n      y: element.y + offsetY,\n    };\n  }\n\n  // element-mutating methods\n  // ---------------------------------------------------------------------------\n\n  static normalizePoints(element: NonDeleted<ExcalidrawLinearElement>) {\n    mutateElement(element, LinearElementEditor.getNormalizedPoints(element));\n  }\n\n  static movePointByOffset(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number,\n    offset: { x: number; y: number },\n  ) {\n    const [x, y] = element.points[pointIndex];\n    LinearElementEditor.movePoint(element, pointIndex, [\n      x + offset.x,\n      y + offset.y,\n    ]);\n  }\n\n  static movePoint(\n    element: NonDeleted<ExcalidrawLinearElement>,\n    pointIndex: number | \"new\",\n    targetPosition: Point | \"delete\",\n    otherUpdates?: { startBinding?: PointBinding; endBinding?: PointBinding },\n  ) {\n    const { points } = element;\n\n    // in case we're moving start point, instead of modifying its position\n    // which would break the invariant of it being at [0,0], we move\n    // all the other points in the opposite direction by delta to\n    // offset it. We do the same with actual element.x/y position, so\n    // this hacks are completely transparent to the user.\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let nextPoints: (readonly [number, number])[];\n    if (targetPosition === \"delete\") {\n      // remove point\n      if (pointIndex === \"new\") {\n        throw new Error(\"invalid args in movePoint\");\n      }\n      nextPoints = points.slice();\n      nextPoints.splice(pointIndex, 1);\n      if (pointIndex === 0) {\n        // if deleting first point, make the next to be [0,0] and recalculate\n        // positions of the rest with respect to it\n        offsetX = nextPoints[0][0];\n        offsetY = nextPoints[0][1];\n        nextPoints = nextPoints.map((point, idx) => {\n          if (idx === 0) {\n            return [0, 0];\n          }\n          return [point[0] - offsetX, point[1] - offsetY];\n        });\n      }\n    } else if (pointIndex === \"new\") {\n      nextPoints = [...points, targetPosition];\n    } else {\n      const deltaX = targetPosition[0] - points[pointIndex][0];\n      const deltaY = targetPosition[1] - points[pointIndex][1];\n      nextPoints = points.map((point, idx) => {\n        if (idx === pointIndex) {\n          if (idx === 0) {\n            offsetX = deltaX;\n            offsetY = deltaY;\n            return point;\n          }\n          offsetX = 0;\n          offsetY = 0;\n\n          return [point[0] + deltaX, point[1] + deltaY] as const;\n        }\n        return offsetX || offsetY\n          ? ([point[0] - offsetX, point[1] - offsetY] as const)\n          : point;\n      });\n    }\n\n    const nextCoords = getElementPointsCoords(\n      element,\n      nextPoints,\n      element.strokeSharpness || \"round\",\n    );\n    const prevCoords = getElementPointsCoords(\n      element,\n      points,\n      element.strokeSharpness || \"round\",\n    );\n    const nextCenterX = (nextCoords[0] + nextCoords[2]) / 2;\n    const nextCenterY = (nextCoords[1] + nextCoords[3]) / 2;\n    const prevCenterX = (prevCoords[0] + prevCoords[2]) / 2;\n    const prevCenterY = (prevCoords[1] + prevCoords[3]) / 2;\n    const dX = prevCenterX - nextCenterX;\n    const dY = prevCenterY - nextCenterY;\n    const rotated = rotate(offsetX, offsetY, dX, dY, element.angle);\n\n    mutateElement(element, {\n      ...otherUpdates,\n      points: nextPoints,\n      x: element.x + rotated[0],\n      y: element.y + rotated[1],\n    });\n  }\n}\n","import {\n  ExcalidrawLinearElement,\n  ExcalidrawBindableElement,\n  NonDeleted,\n  NonDeletedExcalidrawElement,\n  PointBinding,\n  ExcalidrawElement,\n} from \"./types\";\nimport { getElementAtPosition } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { isBindableElement, isBindingElement } from \"./typeChecks\";\nimport {\n  bindingBorderTest,\n  distanceToBindableElement,\n  maxBindingGap,\n  determineFocusDistance,\n  intersectElementWithLine,\n  determineFocusPoint,\n} from \"./collision\";\nimport { mutateElement } from \"./mutateElement\";\nimport Scene from \"../scene/Scene\";\nimport { LinearElementEditor } from \"./linearElementEditor\";\nimport { tupleToCoors } from \"../utils\";\nimport { KEYS } from \"../keys\";\n\nexport type SuggestedBinding =\n  | NonDeleted<ExcalidrawBindableElement>\n  | SuggestedPointBinding;\n\nexport type SuggestedPointBinding = [\n  NonDeleted<ExcalidrawLinearElement>,\n  \"start\" | \"end\" | \"both\",\n  NonDeleted<ExcalidrawBindableElement>,\n];\n\nexport const shouldEnableBindingForPointerEvent = (\n  event: React.PointerEvent<HTMLCanvasElement>,\n) => {\n  return !event[KEYS.CTRL_OR_CMD];\n};\n\nexport const isBindingEnabled = (appState: AppState): boolean => {\n  return appState.isBindingEnabled;\n};\n\nexport const bindOrUnbindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startBindingElement: ExcalidrawBindableElement | null | \"keep\",\n  endBindingElement: ExcalidrawBindableElement | null | \"keep\",\n): void => {\n  const boundToElementIds: Set<ExcalidrawBindableElement[\"id\"]> = new Set();\n  const unboundFromElementIds: Set<ExcalidrawBindableElement[\"id\"]> = new Set();\n  bindOrUnbindLinearElementEdge(\n    linearElement,\n    startBindingElement,\n    endBindingElement,\n    \"start\",\n    boundToElementIds,\n    unboundFromElementIds,\n  );\n  bindOrUnbindLinearElementEdge(\n    linearElement,\n    endBindingElement,\n    startBindingElement,\n    \"end\",\n    boundToElementIds,\n    unboundFromElementIds,\n  );\n\n  const onlyUnbound = Array.from(unboundFromElementIds).filter(\n    (id) => !boundToElementIds.has(id),\n  );\n  Scene.getScene(linearElement)!\n    .getNonDeletedElements(onlyUnbound)\n    .forEach((element) => {\n      mutateElement(element, {\n        boundElementIds: element.boundElementIds?.filter(\n          (id) => id !== linearElement.id,\n        ),\n      });\n    });\n};\n\nconst bindOrUnbindLinearElementEdge = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  bindableElement: ExcalidrawBindableElement | null | \"keep\",\n  otherEdgeBindableElement: ExcalidrawBindableElement | null | \"keep\",\n  startOrEnd: \"start\" | \"end\",\n  // Is mutated\n  boundToElementIds: Set<ExcalidrawBindableElement[\"id\"]>,\n  // Is mutated\n  unboundFromElementIds: Set<ExcalidrawBindableElement[\"id\"]>,\n): void => {\n  if (bindableElement !== \"keep\") {\n    if (bindableElement != null) {\n      // Don't bind if we're trying to bind or are already bound to the same\n      // element on the other edge already (\"start\" edge takes precedence).\n      if (\n        otherEdgeBindableElement == null ||\n        (otherEdgeBindableElement === \"keep\"\n          ? !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n              linearElement,\n              bindableElement,\n              startOrEnd,\n            )\n          : startOrEnd === \"start\" ||\n            otherEdgeBindableElement.id !== bindableElement.id)\n      ) {\n        bindLinearElement(linearElement, bindableElement, startOrEnd);\n        boundToElementIds.add(bindableElement.id);\n      }\n    } else {\n      const unbound = unbindLinearElement(linearElement, startOrEnd);\n      if (unbound != null) {\n        unboundFromElementIds.add(unbound);\n      }\n    }\n  }\n};\n\nexport const bindOrUnbindSelectedElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): void => {\n  elements.forEach((element) => {\n    if (isBindingElement(element)) {\n      bindOrUnbindLinearElement(\n        element,\n        getElligibleElementForBindingElement(element, \"start\"),\n        getElligibleElementForBindingElement(element, \"end\"),\n      );\n    } else if (isBindableElement(element)) {\n      maybeBindBindableElement(element);\n    }\n  });\n};\n\nconst maybeBindBindableElement = (\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): void => {\n  getElligibleElementsForBindableElementAndWhere(\n    bindableElement,\n  ).forEach(([linearElement, where]) =>\n    bindOrUnbindLinearElement(\n      linearElement,\n      where === \"end\" ? \"keep\" : bindableElement,\n      where === \"start\" ? \"keep\" : bindableElement,\n    ),\n  );\n};\n\nexport const maybeBindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  appState: AppState,\n  scene: Scene,\n  pointerCoords: { x: number; y: number },\n): void => {\n  if (appState.startBoundElement != null) {\n    bindLinearElement(linearElement, appState.startBoundElement, \"start\");\n  }\n  const hoveredElement = getHoveredElementForBinding(pointerCoords, scene);\n  if (\n    hoveredElement != null &&\n    !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n      linearElement,\n      hoveredElement,\n      \"end\",\n    )\n  ) {\n    bindLinearElement(linearElement, hoveredElement, \"end\");\n  }\n};\n\nconst bindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  hoveredElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): void => {\n  mutateElement(linearElement, {\n    [startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"]: {\n      elementId: hoveredElement.id,\n      ...calculateFocusAndGap(linearElement, hoveredElement, startOrEnd),\n    } as PointBinding,\n  });\n  mutateElement(hoveredElement, {\n    boundElementIds: Array.from(\n      new Set([...(hoveredElement.boundElementIds ?? []), linearElement.id]),\n    ),\n  });\n};\n\n// Don't bind both ends of a simple segment\nconst isLinearElementSimpleAndAlreadyBoundOnOppositeEdge = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  bindableElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): boolean => {\n  const otherBinding =\n    linearElement[startOrEnd === \"start\" ? \"endBinding\" : \"startBinding\"];\n  return isLinearElementSimpleAndAlreadyBound(\n    linearElement,\n    otherBinding?.elementId,\n    bindableElement,\n  );\n};\n\nexport const isLinearElementSimpleAndAlreadyBound = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  alreadyBoundToId: ExcalidrawBindableElement[\"id\"] | undefined,\n  bindableElement: ExcalidrawBindableElement,\n): boolean => {\n  return (\n    alreadyBoundToId === bindableElement.id && linearElement.points.length < 3\n  );\n};\n\nexport const unbindLinearElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): void => {\n  elements.forEach((element) => {\n    if (isBindingElement(element)) {\n      bindOrUnbindLinearElement(element, null, null);\n    }\n  });\n};\n\nconst unbindLinearElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): ExcalidrawBindableElement[\"id\"] | null => {\n  const field = startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\";\n  const binding = linearElement[field];\n  if (binding == null) {\n    return null;\n  }\n  mutateElement(linearElement, { [field]: null });\n  return binding.elementId;\n};\n\nexport const getHoveredElementForBinding = (\n  pointerCoords: {\n    x: number;\n    y: number;\n  },\n  scene: Scene,\n): NonDeleted<ExcalidrawBindableElement> | null => {\n  const hoveredElement = getElementAtPosition(\n    scene.getElements(),\n    (element) =>\n      isBindableElement(element) && bindingBorderTest(element, pointerCoords),\n  );\n  return hoveredElement as NonDeleted<ExcalidrawBindableElement> | null;\n};\n\nconst calculateFocusAndGap = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  hoveredElement: ExcalidrawBindableElement,\n  startOrEnd: \"start\" | \"end\",\n): { focus: number; gap: number } => {\n  const direction = startOrEnd === \"start\" ? -1 : 1;\n  const edgePointIndex = direction === -1 ? 0 : linearElement.points.length - 1;\n  const adjacentPointIndex = edgePointIndex - direction;\n  const edgePoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    edgePointIndex,\n  );\n  const adjacentPoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    adjacentPointIndex,\n  );\n  return {\n    focus: determineFocusDistance(hoveredElement, adjacentPoint, edgePoint),\n    gap: Math.max(1, distanceToBindableElement(hoveredElement, edgePoint)),\n  };\n};\n\n// Supports translating, rotating and scaling `changedElement` with bound\n// linear elements.\n// Because scaling involves moving the focus points as well, it is\n// done before the `changedElement` is updated, and the `newSize` is passed\n// in explicitly.\nexport const updateBoundElements = (\n  changedElement: NonDeletedExcalidrawElement,\n  options?: {\n    simultaneouslyUpdated?: readonly ExcalidrawElement[];\n    newSize?: { width: number; height: number };\n  },\n) => {\n  const boundElementIds = changedElement.boundElementIds ?? [];\n  if (boundElementIds.length === 0) {\n    return;\n  }\n  const { newSize, simultaneouslyUpdated } = options ?? {};\n  const simultaneouslyUpdatedElementIds = getSimultaneouslyUpdatedElementIds(\n    simultaneouslyUpdated,\n  );\n  (Scene.getScene(changedElement)!.getNonDeletedElements(\n    boundElementIds,\n  ) as NonDeleted<ExcalidrawLinearElement>[]).forEach((linearElement) => {\n    const bindableElement = changedElement as ExcalidrawBindableElement;\n    // In case the boundElementIds are stale\n    if (!doesNeedUpdate(linearElement, bindableElement)) {\n      return;\n    }\n    const startBinding = maybeCalculateNewGapWhenScaling(\n      bindableElement,\n      linearElement.startBinding,\n      newSize,\n    );\n    const endBinding = maybeCalculateNewGapWhenScaling(\n      bindableElement,\n      linearElement.endBinding,\n      newSize,\n    );\n    // `linearElement` is being moved/scaled already, just update the binding\n    if (simultaneouslyUpdatedElementIds.has(linearElement.id)) {\n      mutateElement(linearElement, { startBinding, endBinding });\n      return;\n    }\n    updateBoundPoint(\n      linearElement,\n      \"start\",\n      startBinding,\n      changedElement as ExcalidrawBindableElement,\n    );\n    updateBoundPoint(\n      linearElement,\n      \"end\",\n      endBinding,\n      changedElement as ExcalidrawBindableElement,\n    );\n  });\n};\n\nconst doesNeedUpdate = (\n  boundElement: NonDeleted<ExcalidrawLinearElement>,\n  changedElement: ExcalidrawBindableElement,\n) => {\n  return (\n    boundElement.startBinding?.elementId === changedElement.id ||\n    boundElement.endBinding?.elementId === changedElement.id\n  );\n};\n\nconst getSimultaneouslyUpdatedElementIds = (\n  simultaneouslyUpdated: readonly ExcalidrawElement[] | undefined,\n): Set<ExcalidrawElement[\"id\"]> => {\n  return new Set((simultaneouslyUpdated || []).map((element) => element.id));\n};\n\nconst updateBoundPoint = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n  binding: PointBinding | null | undefined,\n  changedElement: ExcalidrawBindableElement,\n): void => {\n  if (\n    binding == null ||\n    // We only need to update the other end if this is a 2 point line element\n    (binding.elementId !== changedElement.id && linearElement.points.length > 2)\n  ) {\n    return;\n  }\n  const bindingElement = Scene.getScene(linearElement)!.getElement(\n    binding.elementId,\n  ) as ExcalidrawBindableElement | null;\n  if (bindingElement == null) {\n    // We're not cleaning up after deleted elements atm., so handle this case\n    return;\n  }\n  const direction = startOrEnd === \"start\" ? -1 : 1;\n  const edgePointIndex = direction === -1 ? 0 : linearElement.points.length - 1;\n  const adjacentPointIndex = edgePointIndex - direction;\n  const adjacentPoint = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n    linearElement,\n    adjacentPointIndex,\n  );\n  const focusPointAbsolute = determineFocusPoint(\n    bindingElement,\n    binding.focus,\n    adjacentPoint,\n  );\n  let newEdgePoint;\n  // The linear element was not originally pointing inside the bound shape,\n  // we can point directly at the focus point\n  if (binding.gap === 0) {\n    newEdgePoint = focusPointAbsolute;\n  } else {\n    const intersections = intersectElementWithLine(\n      bindingElement,\n      adjacentPoint,\n      focusPointAbsolute,\n      binding.gap,\n    );\n    if (intersections.length === 0) {\n      // This should never happen, since focusPoint should always be\n      // inside the element, but just in case, bail out\n      newEdgePoint = focusPointAbsolute;\n    } else {\n      // Guaranteed to intersect because focusPoint is always inside the shape\n      newEdgePoint = intersections[0];\n    }\n  }\n  LinearElementEditor.movePoint(\n    linearElement,\n    edgePointIndex,\n    LinearElementEditor.pointFromAbsoluteCoords(linearElement, newEdgePoint),\n    { [startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"]: binding },\n  );\n};\n\nconst maybeCalculateNewGapWhenScaling = (\n  changedElement: ExcalidrawBindableElement,\n  currentBinding: PointBinding | null | undefined,\n  newSize: { width: number; height: number } | undefined,\n): PointBinding | null | undefined => {\n  if (currentBinding == null || newSize == null) {\n    return currentBinding;\n  }\n  const { gap, focus, elementId } = currentBinding;\n  const { width: newWidth, height: newHeight } = newSize;\n  const { width, height } = changedElement;\n  const newGap = Math.max(\n    1,\n    Math.min(\n      maxBindingGap(changedElement, newWidth, newHeight),\n      gap * (newWidth < newHeight ? newWidth / width : newHeight / height),\n    ),\n  );\n  return { elementId, gap: newGap, focus };\n};\n\nexport const getEligibleElementsForBinding = (\n  elements: NonDeleted<ExcalidrawElement>[],\n): SuggestedBinding[] => {\n  const includedElementIds = new Set(elements.map(({ id }) => id));\n  return elements.flatMap((element) =>\n    isBindingElement(element)\n      ? (getElligibleElementsForBindingElement(\n          element as NonDeleted<ExcalidrawLinearElement>,\n        ).filter(\n          (element) => !includedElementIds.has(element.id),\n        ) as SuggestedBinding[])\n      : isBindableElement(element)\n      ? getElligibleElementsForBindableElementAndWhere(element).filter(\n          (binding) => !includedElementIds.has(binding[0].id),\n        )\n      : [],\n  );\n};\n\nconst getElligibleElementsForBindingElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n): NonDeleted<ExcalidrawBindableElement>[] => {\n  return [\n    getElligibleElementForBindingElement(linearElement, \"start\"),\n    getElligibleElementForBindingElement(linearElement, \"end\"),\n  ].filter(\n    (element): element is NonDeleted<ExcalidrawBindableElement> =>\n      element != null,\n  );\n};\n\nconst getElligibleElementForBindingElement = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): NonDeleted<ExcalidrawBindableElement> | null => {\n  return getHoveredElementForBinding(\n    getLinearElementEdgeCoors(linearElement, startOrEnd),\n    Scene.getScene(linearElement)!,\n  );\n};\n\nconst getLinearElementEdgeCoors = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n): { x: number; y: number } => {\n  const index = startOrEnd === \"start\" ? 0 : -1;\n  return tupleToCoors(\n    LinearElementEditor.getPointAtIndexGlobalCoordinates(linearElement, index),\n  );\n};\n\nconst getElligibleElementsForBindableElementAndWhere = (\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): SuggestedPointBinding[] => {\n  return Scene.getScene(bindableElement)!\n    .getElements()\n    .map((element) => {\n      if (!isBindingElement(element)) {\n        return null;\n      }\n      const canBindStart = isLinearElementEligibleForNewBindingByBindable(\n        element,\n        \"start\",\n        bindableElement,\n      );\n      const canBindEnd = isLinearElementEligibleForNewBindingByBindable(\n        element,\n        \"end\",\n        bindableElement,\n      );\n      if (!canBindStart && !canBindEnd) {\n        return null;\n      }\n      return [\n        element,\n        canBindStart && canBindEnd ? \"both\" : canBindStart ? \"start\" : \"end\",\n        bindableElement,\n      ];\n    })\n    .filter((maybeElement) => maybeElement != null) as SuggestedPointBinding[];\n};\n\nconst isLinearElementEligibleForNewBindingByBindable = (\n  linearElement: NonDeleted<ExcalidrawLinearElement>,\n  startOrEnd: \"start\" | \"end\",\n  bindableElement: NonDeleted<ExcalidrawBindableElement>,\n): boolean => {\n  const existingBinding =\n    linearElement[startOrEnd === \"start\" ? \"startBinding\" : \"endBinding\"];\n  return (\n    existingBinding == null &&\n    !isLinearElementSimpleAndAlreadyBoundOnOppositeEdge(\n      linearElement,\n      bindableElement,\n      startOrEnd,\n    ) &&\n    bindingBorderTest(\n      bindableElement,\n      getLinearElementEdgeCoors(linearElement, startOrEnd),\n    )\n  );\n};\n\n// We need to:\n// 1: Update elements not selected to point to duplicated elements\n// 2: Update duplicated elements to point to other duplicated elements\nexport const fixBindingsAfterDuplication = (\n  sceneElements: readonly ExcalidrawElement[],\n  oldElements: readonly ExcalidrawElement[],\n  oldIdToDuplicatedId: Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"id\"]>,\n  // There are three copying mechanisms: Copy-paste, duplication and alt-drag.\n  // Only when alt-dragging the new \"duplicates\" act as the \"old\", while\n  // the \"old\" elements act as the \"new copy\" - essentially working reverse\n  // to the other two.\n  duplicatesServeAsOld?: \"duplicatesServeAsOld\" | undefined,\n): void => {\n  // First collect all the binding/bindable elements, so we only update\n  // each once, regardless of whether they were duplicated or not.\n  const allBoundElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  const allBindableElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  const shouldReverseRoles = duplicatesServeAsOld === \"duplicatesServeAsOld\";\n  oldElements.forEach((oldElement) => {\n    const { boundElementIds } = oldElement;\n    if (boundElementIds != null && boundElementIds.length > 0) {\n      boundElementIds.forEach((boundElementId) => {\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(boundElementId)) {\n          allBoundElementIds.add(boundElementId);\n        }\n      });\n      allBindableElementIds.add(oldIdToDuplicatedId.get(oldElement.id)!);\n    }\n    if (isBindingElement(oldElement)) {\n      if (oldElement.startBinding != null) {\n        const { elementId } = oldElement.startBinding;\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(elementId)) {\n          allBindableElementIds.add(elementId);\n        }\n      }\n      if (oldElement.endBinding != null) {\n        const { elementId } = oldElement.endBinding;\n        if (shouldReverseRoles && !oldIdToDuplicatedId.has(elementId)) {\n          allBindableElementIds.add(elementId);\n        }\n      }\n      if (oldElement.startBinding != null || oldElement.endBinding != null) {\n        allBoundElementIds.add(oldIdToDuplicatedId.get(oldElement.id)!);\n      }\n    }\n  });\n\n  // Update the linear elements\n  (sceneElements.filter(({ id }) =>\n    allBoundElementIds.has(id),\n  ) as ExcalidrawLinearElement[]).forEach((element) => {\n    const { startBinding, endBinding } = element;\n    mutateElement(element, {\n      startBinding: newBindingAfterDuplication(\n        startBinding,\n        oldIdToDuplicatedId,\n      ),\n      endBinding: newBindingAfterDuplication(endBinding, oldIdToDuplicatedId),\n    });\n  });\n\n  // Update the bindable shapes\n  sceneElements\n    .filter(({ id }) => allBindableElementIds.has(id))\n    .forEach((bindableElement) => {\n      const { boundElementIds } = bindableElement;\n      if (boundElementIds != null && boundElementIds.length > 0) {\n        mutateElement(bindableElement, {\n          boundElementIds: boundElementIds.map(\n            (boundElementId) =>\n              oldIdToDuplicatedId.get(boundElementId) ?? boundElementId,\n          ),\n        });\n      }\n    });\n};\n\nconst newBindingAfterDuplication = (\n  binding: PointBinding | null,\n  oldIdToDuplicatedId: Map<ExcalidrawElement[\"id\"], ExcalidrawElement[\"id\"]>,\n): PointBinding | null => {\n  if (binding == null) {\n    return null;\n  }\n  const { elementId, focus, gap } = binding;\n  return {\n    focus,\n    gap,\n    elementId: oldIdToDuplicatedId.get(elementId) ?? elementId,\n  };\n};\n\nexport const fixBindingsAfterDeletion = (\n  sceneElements: readonly ExcalidrawElement[],\n  deletedElements: readonly ExcalidrawElement[],\n): void => {\n  const deletedElementIds = new Set(\n    deletedElements.map((element) => element.id),\n  );\n  // Non deleted and need an update\n  const boundElementIds: Set<ExcalidrawElement[\"id\"]> = new Set();\n  deletedElements.forEach((deletedElement) => {\n    if (isBindableElement(deletedElement)) {\n      deletedElement.boundElementIds?.forEach((id) => {\n        if (!deletedElementIds.has(id)) {\n          boundElementIds.add(id);\n        }\n      });\n    }\n  });\n  (sceneElements.filter(({ id }) =>\n    boundElementIds.has(id),\n  ) as ExcalidrawLinearElement[]).forEach(\n    (element: ExcalidrawLinearElement) => {\n      const { startBinding, endBinding } = element;\n      mutateElement(element, {\n        startBinding: newBindingAfterDeletion(startBinding, deletedElementIds),\n        endBinding: newBindingAfterDeletion(endBinding, deletedElementIds),\n      });\n    },\n  );\n};\n\nconst newBindingAfterDeletion = (\n  binding: PointBinding | null,\n  deletedElementIds: Set<ExcalidrawElement[\"id\"]>,\n): PointBinding | null => {\n  if (binding == null || deletedElementIds.has(binding.elementId)) {\n    return null;\n  }\n  return binding;\n};\n","import { SHIFT_LOCKING_ANGLE } from \"../constants\";\nimport { rescalePoints } from \"../points\";\n\nimport {\n  rotate,\n  adjustXYWithRotation,\n  centerPoint,\n  rotatePoint,\n} from \"../math\";\nimport {\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport {\n  getElementAbsoluteCoords,\n  getCommonBounds,\n  getResizedElementAbsoluteCoords,\n} from \"./bounds\";\nimport {\n  isFreeDrawElement,\n  isLinearElement,\n  isTextElement,\n} from \"./typeChecks\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport { measureText, getFontString } from \"../utils\";\nimport { updateBoundElements } from \"./binding\";\nimport {\n  TransformHandleType,\n  MaybeTransformHandleType,\n  TransformHandleDirection,\n} from \"./transformHandles\";\nimport { Point, PointerDownState } from \"../types\";\n\nexport const normalizeAngle = (angle: number): number => {\n  if (angle >= 2 * Math.PI) {\n    return angle - 2 * Math.PI;\n  }\n  return angle;\n};\n\n// Returns true when transform (resizing/rotation) happened\nexport const transformElements = (\n  pointerDownState: PointerDownState,\n  transformHandleType: MaybeTransformHandleType,\n  selectedElements: readonly NonDeletedExcalidrawElement[],\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  isResizeCenterPoint: boolean,\n  shouldKeepSidesRatio: boolean,\n  pointerX: number,\n  pointerY: number,\n  centerX: number,\n  centerY: number,\n) => {\n  if (selectedElements.length === 1) {\n    const [element] = selectedElements;\n    if (transformHandleType === \"rotation\") {\n      rotateSingleElement(\n        element,\n        pointerX,\n        pointerY,\n        isRotateWithDiscreteAngle,\n      );\n      updateBoundElements(element);\n    } else if (\n      isLinearElement(element) &&\n      element.points.length === 2 &&\n      (transformHandleType === \"nw\" ||\n        transformHandleType === \"ne\" ||\n        transformHandleType === \"sw\" ||\n        transformHandleType === \"se\")\n    ) {\n      reshapeSingleTwoPointElement(\n        element,\n        resizeArrowDirection,\n        isRotateWithDiscreteAngle,\n        pointerX,\n        pointerY,\n      );\n    } else if (\n      isTextElement(element) &&\n      (transformHandleType === \"nw\" ||\n        transformHandleType === \"ne\" ||\n        transformHandleType === \"sw\" ||\n        transformHandleType === \"se\")\n    ) {\n      resizeSingleTextElement(\n        element,\n        transformHandleType,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n      updateBoundElements(element);\n    } else if (transformHandleType) {\n      resizeSingleElement(\n        pointerDownState.originalElements.get(element.id) as typeof element,\n        shouldKeepSidesRatio,\n        element,\n        transformHandleType,\n        isResizeCenterPoint,\n        pointerX,\n        pointerY,\n      );\n    }\n\n    return true;\n  } else if (selectedElements.length > 1) {\n    if (transformHandleType === \"rotation\") {\n      rotateMultipleElements(\n        pointerDownState,\n        selectedElements,\n        pointerX,\n        pointerY,\n        isRotateWithDiscreteAngle,\n        centerX,\n        centerY,\n      );\n      return true;\n    } else if (\n      transformHandleType === \"nw\" ||\n      transformHandleType === \"ne\" ||\n      transformHandleType === \"sw\" ||\n      transformHandleType === \"se\"\n    ) {\n      resizeMultipleElements(\n        selectedElements,\n        transformHandleType,\n        pointerX,\n        pointerY,\n      );\n      return true;\n    }\n  }\n  return false;\n};\n\nconst rotateSingleElement = (\n  element: NonDeletedExcalidrawElement,\n  pointerX: number,\n  pointerY: number,\n  isRotateWithDiscreteAngle: boolean,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  let angle = (5 * Math.PI) / 2 + Math.atan2(pointerY - cy, pointerX - cx);\n  if (isRotateWithDiscreteAngle) {\n    angle += SHIFT_LOCKING_ANGLE / 2;\n    angle -= angle % SHIFT_LOCKING_ANGLE;\n  }\n  angle = normalizeAngle(angle);\n  mutateElement(element, { angle });\n};\n\n// used in DEV only\nconst validateTwoPointElementNormalized = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  if (\n    element.points.length !== 2 ||\n    element.points[0][0] !== 0 ||\n    element.points[0][1] !== 0 ||\n    Math.abs(element.points[1][0]) !== element.width ||\n    Math.abs(element.points[1][1]) !== element.height\n  ) {\n    throw new Error(\"Two-point element is not normalized\");\n  }\n};\n\nconst getPerfectElementSizeWithRotation = (\n  elementType: string,\n  width: number,\n  height: number,\n  angle: number,\n): [number, number] => {\n  const size = getPerfectElementSize(\n    elementType,\n    ...rotate(width, height, 0, 0, angle),\n  );\n  return rotate(size.width, size.height, 0, 0, -angle);\n};\n\nexport const reshapeSingleTwoPointElement = (\n  element: NonDeleted<ExcalidrawLinearElement>,\n  resizeArrowDirection: \"origin\" | \"end\",\n  isRotateWithDiscreteAngle: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    validateTwoPointElementNormalized(element);\n  }\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let [width, height] =\n    resizeArrowDirection === \"end\"\n      ? [rotatedX - element.x, rotatedY - element.y]\n      : [\n          element.x + element.points[1][0] - rotatedX,\n          element.y + element.points[1][1] - rotatedY,\n        ];\n  if (isRotateWithDiscreteAngle) {\n    [width, height] = getPerfectElementSizeWithRotation(\n      element.type,\n      width,\n      height,\n      element.angle,\n    );\n  }\n  const [nextElementX, nextElementY] = adjustXYWithRotation(\n    resizeArrowDirection === \"end\"\n      ? { s: true, e: true }\n      : { n: true, w: true },\n    element.x,\n    element.y,\n    element.angle,\n    0,\n    0,\n    (element.points[1][0] - width) / 2,\n    (element.points[1][1] - height) / 2,\n  );\n  mutateElement(element, {\n    x: nextElementX,\n    y: nextElementY,\n    points: [\n      [0, 0],\n      [width, height],\n    ],\n  });\n};\n\nconst rescalePointsInElement = (\n  element: NonDeletedExcalidrawElement,\n  width: number,\n  height: number,\n) =>\n  isLinearElement(element) || isFreeDrawElement(element)\n    ? {\n        points: rescalePoints(\n          0,\n          width,\n          rescalePoints(1, height, element.points),\n        ),\n      }\n    : {};\n\nconst MIN_FONT_SIZE = 1;\n\nconst measureFontSizeFromWH = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  nextWidth: number,\n  nextHeight: number,\n): { size: number; baseline: number } | null => {\n  // We only use width to scale font on resize\n  const nextFontSize = element.fontSize * (nextWidth / element.width);\n  if (nextFontSize < MIN_FONT_SIZE) {\n    return null;\n  }\n  const metrics = measureText(\n    element.text,\n    getFontString({ fontSize: nextFontSize, fontFamily: element.fontFamily }),\n  );\n  return {\n    size: nextFontSize,\n    baseline: metrics.baseline + (nextHeight - metrics.height),\n  };\n};\n\nconst getSidesForTransformHandle = (\n  transformHandleType: TransformHandleType,\n  isResizeFromCenter: boolean,\n) => {\n  return {\n    n:\n      /^(n|ne|nw)$/.test(transformHandleType) ||\n      (isResizeFromCenter && /^(s|se|sw)$/.test(transformHandleType)),\n    s:\n      /^(s|se|sw)$/.test(transformHandleType) ||\n      (isResizeFromCenter && /^(n|ne|nw)$/.test(transformHandleType)),\n    w:\n      /^(w|nw|sw)$/.test(transformHandleType) ||\n      (isResizeFromCenter && /^(e|ne|se)$/.test(transformHandleType)),\n    e:\n      /^(e|ne|se)$/.test(transformHandleType) ||\n      (isResizeFromCenter && /^(w|nw|sw)$/.test(transformHandleType)),\n  };\n};\n\nconst resizeSingleTextElement = (\n  element: NonDeleted<ExcalidrawTextElement>,\n  transformHandleType: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  // rotation pointer with reverse angle\n  const [rotatedX, rotatedY] = rotate(\n    pointerX,\n    pointerY,\n    cx,\n    cy,\n    -element.angle,\n  );\n  let scale: number;\n  switch (transformHandleType) {\n    case \"se\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (rotatedX - x1) / (x2 - x1),\n        (y2 - rotatedY) / (y2 - y1),\n      );\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - rotatedX) / (x2 - x1),\n        (rotatedY - y1) / (y2 - y1),\n      );\n      break;\n  }\n  if (scale > 0) {\n    const nextWidth = element.width * scale;\n    const nextHeight = element.height * scale;\n    const nextFont = measureFontSizeFromWH(element, nextWidth, nextHeight);\n    if (nextFont === null) {\n      return;\n    }\n    const [nextX1, nextY1, nextX2, nextY2] = getResizedElementAbsoluteCoords(\n      element,\n      nextWidth,\n      nextHeight,\n    );\n    const deltaX1 = (x1 - nextX1) / 2;\n    const deltaY1 = (y1 - nextY1) / 2;\n    const deltaX2 = (x2 - nextX2) / 2;\n    const deltaY2 = (y2 - nextY2) / 2;\n    const [nextElementX, nextElementY] = adjustXYWithRotation(\n      getSidesForTransformHandle(transformHandleType, isResizeFromCenter),\n      element.x,\n      element.y,\n      element.angle,\n      deltaX1,\n      deltaY1,\n      deltaX2,\n      deltaY2,\n    );\n    mutateElement(element, {\n      fontSize: nextFont.size,\n      width: nextWidth,\n      height: nextHeight,\n      baseline: nextFont.baseline,\n      x: nextElementX,\n      y: nextElementY,\n    });\n  }\n};\n\nexport const resizeSingleElement = (\n  stateAtResizeStart: NonDeletedExcalidrawElement,\n  shouldKeepSidesRatio: boolean,\n  element: NonDeletedExcalidrawElement,\n  transformHandleDirection: TransformHandleDirection,\n  isResizeFromCenter: boolean,\n  pointerX: number,\n  pointerY: number,\n) => {\n  // Gets bounds corners\n  const [x1, y1, x2, y2] = getResizedElementAbsoluteCoords(\n    stateAtResizeStart,\n    stateAtResizeStart.width,\n    stateAtResizeStart.height,\n  );\n  const startTopLeft: Point = [x1, y1];\n  const startBottomRight: Point = [x2, y2];\n  const startCenter: Point = centerPoint(startTopLeft, startBottomRight);\n\n  // Calculate new dimensions based on cursor position\n  const rotatedPointer = rotatePoint(\n    [pointerX, pointerY],\n    startCenter,\n    -stateAtResizeStart.angle,\n  );\n\n  // Get bounds corners rendered on screen\n  const [esx1, esy1, esx2, esy2] = getResizedElementAbsoluteCoords(\n    element,\n    element.width,\n    element.height,\n  );\n  const boundsCurrentWidth = esx2 - esx1;\n  const boundsCurrentHeight = esy2 - esy1;\n\n  // It's important we set the initial scale value based on the width and height at resize start,\n  // otherwise previous dimensions affected by modifiers will be taken into account.\n  const atStartBoundsWidth = startBottomRight[0] - startTopLeft[0];\n  const atStartBoundsHeight = startBottomRight[1] - startTopLeft[1];\n  let scaleX = atStartBoundsWidth / boundsCurrentWidth;\n  let scaleY = atStartBoundsHeight / boundsCurrentHeight;\n\n  if (transformHandleDirection.includes(\"e\")) {\n    scaleX = (rotatedPointer[0] - startTopLeft[0]) / boundsCurrentWidth;\n  }\n  if (transformHandleDirection.includes(\"s\")) {\n    scaleY = (rotatedPointer[1] - startTopLeft[1]) / boundsCurrentHeight;\n  }\n  if (transformHandleDirection.includes(\"w\")) {\n    scaleX = (startBottomRight[0] - rotatedPointer[0]) / boundsCurrentWidth;\n  }\n  if (transformHandleDirection.includes(\"n\")) {\n    scaleY = (startBottomRight[1] - rotatedPointer[1]) / boundsCurrentHeight;\n  }\n  // Linear elements dimensions differ from bounds dimensions\n  const eleInitialWidth = stateAtResizeStart.width;\n  const eleInitialHeight = stateAtResizeStart.height;\n  // We have to use dimensions of element on screen, otherwise the scaling of the\n  // dimensions won't match the cursor for linear elements.\n  let eleNewWidth = element.width * scaleX;\n  let eleNewHeight = element.height * scaleY;\n\n  // adjust dimensions for resizing from center\n  if (isResizeFromCenter) {\n    eleNewWidth = 2 * eleNewWidth - eleInitialWidth;\n    eleNewHeight = 2 * eleNewHeight - eleInitialHeight;\n  }\n\n  // adjust dimensions to keep sides ratio\n  if (shouldKeepSidesRatio) {\n    const widthRatio = Math.abs(eleNewWidth) / eleInitialWidth;\n    const heightRatio = Math.abs(eleNewHeight) / eleInitialHeight;\n    if (transformHandleDirection.length === 1) {\n      eleNewHeight *= widthRatio;\n      eleNewWidth *= heightRatio;\n    }\n    if (transformHandleDirection.length === 2) {\n      const ratio = Math.max(widthRatio, heightRatio);\n      eleNewWidth = eleInitialWidth * ratio * Math.sign(eleNewWidth);\n      eleNewHeight = eleInitialHeight * ratio * Math.sign(eleNewHeight);\n    }\n  }\n\n  const [\n    newBoundsX1,\n    newBoundsY1,\n    newBoundsX2,\n    newBoundsY2,\n  ] = getResizedElementAbsoluteCoords(\n    stateAtResizeStart,\n    eleNewWidth,\n    eleNewHeight,\n  );\n  const newBoundsWidth = newBoundsX2 - newBoundsX1;\n  const newBoundsHeight = newBoundsY2 - newBoundsY1;\n\n  // Calculate new topLeft based on fixed corner during resize\n  let newTopLeft = [...startTopLeft] as [number, number];\n  if ([\"n\", \"w\", \"nw\"].includes(transformHandleDirection)) {\n    newTopLeft = [\n      startBottomRight[0] - Math.abs(newBoundsWidth),\n      startBottomRight[1] - Math.abs(newBoundsHeight),\n    ];\n  }\n  if (transformHandleDirection === \"ne\") {\n    const bottomLeft = [startTopLeft[0], startBottomRight[1]];\n    newTopLeft = [bottomLeft[0], bottomLeft[1] - Math.abs(newBoundsHeight)];\n  }\n  if (transformHandleDirection === \"sw\") {\n    const topRight = [startBottomRight[0], startTopLeft[1]];\n    newTopLeft = [topRight[0] - Math.abs(newBoundsWidth), topRight[1]];\n  }\n\n  // Keeps opposite handle fixed during resize\n  if (shouldKeepSidesRatio) {\n    if ([\"s\", \"n\"].includes(transformHandleDirection)) {\n      newTopLeft[0] = startCenter[0] - newBoundsWidth / 2;\n    }\n    if ([\"e\", \"w\"].includes(transformHandleDirection)) {\n      newTopLeft[1] = startCenter[1] - newBoundsHeight / 2;\n    }\n  }\n\n  // Flip horizontally\n  if (eleNewWidth < 0) {\n    if (transformHandleDirection.includes(\"e\")) {\n      newTopLeft[0] -= Math.abs(newBoundsWidth);\n    }\n    if (transformHandleDirection.includes(\"w\")) {\n      newTopLeft[0] += Math.abs(newBoundsWidth);\n    }\n  }\n  // Flip vertically\n  if (eleNewHeight < 0) {\n    if (transformHandleDirection.includes(\"s\")) {\n      newTopLeft[1] -= Math.abs(newBoundsHeight);\n    }\n    if (transformHandleDirection.includes(\"n\")) {\n      newTopLeft[1] += Math.abs(newBoundsHeight);\n    }\n  }\n\n  if (isResizeFromCenter) {\n    newTopLeft[0] = startCenter[0] - Math.abs(newBoundsWidth) / 2;\n    newTopLeft[1] = startCenter[1] - Math.abs(newBoundsHeight) / 2;\n  }\n\n  // adjust topLeft to new rotation point\n  const angle = stateAtResizeStart.angle;\n  const rotatedTopLeft = rotatePoint(newTopLeft, startCenter, angle);\n  const newCenter: Point = [\n    newTopLeft[0] + Math.abs(newBoundsWidth) / 2,\n    newTopLeft[1] + Math.abs(newBoundsHeight) / 2,\n  ];\n  const rotatedNewCenter = rotatePoint(newCenter, startCenter, angle);\n  newTopLeft = rotatePoint(rotatedTopLeft, rotatedNewCenter, -angle);\n\n  // Readjust points for linear elements\n  const rescaledPoints = rescalePointsInElement(\n    stateAtResizeStart,\n    eleNewWidth,\n    eleNewHeight,\n  );\n  // For linear elements (x,y) are the coordinates of the first drawn point not the top-left corner\n  // So we need to readjust (x,y) to be where the first point should be\n  const newOrigin = [...newTopLeft];\n  newOrigin[0] += stateAtResizeStart.x - newBoundsX1;\n  newOrigin[1] += stateAtResizeStart.y - newBoundsY1;\n\n  const resizedElement = {\n    width: Math.abs(eleNewWidth),\n    height: Math.abs(eleNewHeight),\n    x: newOrigin[0],\n    y: newOrigin[1],\n    ...rescaledPoints,\n  };\n\n  if (\n    resizedElement.width !== 0 &&\n    resizedElement.height !== 0 &&\n    Number.isFinite(resizedElement.x) &&\n    Number.isFinite(resizedElement.y)\n  ) {\n    updateBoundElements(element, {\n      newSize: { width: resizedElement.width, height: resizedElement.height },\n    });\n    mutateElement(element, resizedElement);\n  }\n};\n\nconst resizeMultipleElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  transformHandleType: \"nw\" | \"ne\" | \"sw\" | \"se\",\n  pointerX: number,\n  pointerY: number,\n) => {\n  const [x1, y1, x2, y2] = getCommonBounds(elements);\n  let scale: number;\n  let getNextXY: (\n    element: NonDeletedExcalidrawElement,\n    origCoords: readonly [number, number, number, number],\n    finalCoords: readonly [number, number, number, number],\n  ) => { x: number; y: number };\n  switch (transformHandleType) {\n    case \"se\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, origY1], [finalX1, finalY1]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n    case \"nw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [, , origX2, origY2], [, , finalX2, finalY2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"ne\":\n      scale = Math.max(\n        (pointerX - x1) / (x2 - x1),\n        (y2 - pointerY) / (y2 - y1),\n      );\n      getNextXY = (element, [origX1, , , origY2], [finalX1, , , finalY2]) => {\n        const x = element.x + (origX1 - x1) * (scale - 1) + origX1 - finalX1;\n        const y = element.y - (y2 - origY2) * (scale - 1) + origY2 - finalY2;\n        return { x, y };\n      };\n      break;\n    case \"sw\":\n      scale = Math.max(\n        (x2 - pointerX) / (x2 - x1),\n        (pointerY - y1) / (y2 - y1),\n      );\n      getNextXY = (element, [, origY1, origX2], [, finalY1, finalX2]) => {\n        const x = element.x - (x2 - origX2) * (scale - 1) + origX2 - finalX2;\n        const y = element.y + (origY1 - y1) * (scale - 1) + origY1 - finalY1;\n        return { x, y };\n      };\n      break;\n  }\n  if (scale > 0) {\n    const updates = elements.reduce(\n      (prev, element) => {\n        if (!prev) {\n          return prev;\n        }\n        const width = element.width * scale;\n        const height = element.height * scale;\n        let font: { fontSize?: number; baseline?: number } = {};\n        if (element.type === \"text\") {\n          const nextFont = measureFontSizeFromWH(element, width, height);\n          if (nextFont === null) {\n            return null;\n          }\n          font = { fontSize: nextFont.size, baseline: nextFont.baseline };\n        }\n        const origCoords = getElementAbsoluteCoords(element);\n\n        const rescaledPoints = rescalePointsInElement(element, width, height);\n\n        updateBoundElements(element, {\n          newSize: { width, height },\n          simultaneouslyUpdated: elements,\n        });\n\n        const finalCoords = getResizedElementAbsoluteCoords(\n          {\n            ...element,\n            ...rescaledPoints,\n          },\n          width,\n          height,\n        );\n\n        const { x, y } = getNextXY(element, origCoords, finalCoords);\n        return [...prev, { width, height, x, y, ...rescaledPoints, ...font }];\n      },\n      [] as\n        | {\n            width: number;\n            height: number;\n            x: number;\n            y: number;\n            points?: (readonly [number, number])[];\n            fontSize?: number;\n            baseline?: number;\n          }[]\n        | null,\n    );\n    if (updates) {\n      elements.forEach((element, index) => {\n        mutateElement(element, updates[index]);\n      });\n    }\n  }\n};\n\nconst rotateMultipleElements = (\n  pointerDownState: PointerDownState,\n  elements: readonly NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n  isRotateWithDiscreteAngle: boolean,\n  centerX: number,\n  centerY: number,\n) => {\n  let centerAngle =\n    (5 * Math.PI) / 2 + Math.atan2(pointerY - centerY, pointerX - centerX);\n  if (isRotateWithDiscreteAngle) {\n    centerAngle += SHIFT_LOCKING_ANGLE / 2;\n    centerAngle -= centerAngle % SHIFT_LOCKING_ANGLE;\n  }\n  elements.forEach((element, index) => {\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    const origAngle =\n      pointerDownState.originalElements.get(element.id)?.angle ?? element.angle;\n    const [rotatedCX, rotatedCY] = rotate(\n      cx,\n      cy,\n      centerX,\n      centerY,\n      centerAngle + origAngle - element.angle,\n    );\n    mutateElement(element, {\n      x: element.x + (rotatedCX - cx),\n      y: element.y + (rotatedCY - cy),\n      angle: normalizeAngle(centerAngle + origAngle),\n    });\n  });\n};\n\nexport const getResizeOffsetXY = (\n  transformHandleType: MaybeTransformHandleType,\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1, x2, y2] =\n    selectedElements.length === 1\n      ? getElementAbsoluteCoords(selectedElements[0])\n      : getCommonBounds(selectedElements);\n  const cx = (x1 + x2) / 2;\n  const cy = (y1 + y2) / 2;\n  const angle = selectedElements.length === 1 ? selectedElements[0].angle : 0;\n  [x, y] = rotate(x, y, cx, cy, -angle);\n  switch (transformHandleType) {\n    case \"n\":\n      return rotate(x - (x1 + x2) / 2, y - y1, 0, 0, angle);\n    case \"s\":\n      return rotate(x - (x1 + x2) / 2, y - y2, 0, 0, angle);\n    case \"w\":\n      return rotate(x - x1, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"e\":\n      return rotate(x - x2, y - (y1 + y2) / 2, 0, 0, angle);\n    case \"nw\":\n      return rotate(x - x1, y - y1, 0, 0, angle);\n    case \"ne\":\n      return rotate(x - x2, y - y1, 0, 0, angle);\n    case \"sw\":\n      return rotate(x - x1, y - y2, 0, 0, angle);\n    case \"se\":\n      return rotate(x - x2, y - y2, 0, 0, angle);\n    default:\n      return [0, 0];\n  }\n};\n\nexport const getResizeArrowDirection = (\n  transformHandleType: MaybeTransformHandleType,\n  element: NonDeleted<ExcalidrawLinearElement>,\n): \"origin\" | \"end\" => {\n  const [, [px, py]] = element.points;\n  const isResizeEnd =\n    (transformHandleType === \"nw\" && (px < 0 || py < 0)) ||\n    (transformHandleType === \"ne\" && px >= 0) ||\n    (transformHandleType === \"sw\" && px <= 0) ||\n    (transformHandleType === \"se\" && (px > 0 || py > 0));\n  return isResizeEnd ? \"end\" : \"origin\";\n};\n","import { SHAPES } from \"../shapes\";\nimport { updateBoundElements } from \"./binding\";\nimport { getCommonBounds } from \"./bounds\";\nimport { mutateElement } from \"./mutateElement\";\nimport { getPerfectElementSize } from \"./sizeHelpers\";\nimport Scene from \"../scene/Scene\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { PointerDownState } from \"../types\";\n\nexport const dragSelectedElements = (\n  pointerDownState: PointerDownState,\n  selectedElements: NonDeletedExcalidrawElement[],\n  pointerX: number,\n  pointerY: number,\n  scene: Scene,\n  lockDirection: boolean = false,\n  distanceX: number = 0,\n  distanceY: number = 0,\n) => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  const offset = { x: pointerX - x1, y: pointerY - y1 };\n  selectedElements.forEach((element) => {\n    let x: number;\n    let y: number;\n    if (lockDirection) {\n      const lockX = lockDirection && distanceX < distanceY;\n      const lockY = lockDirection && distanceX > distanceY;\n      const original = pointerDownState.originalElements.get(element.id);\n      x = lockX && original ? original.x : element.x + offset.x;\n      y = lockY && original ? original.y : element.y + offset.y;\n    } else {\n      x = element.x + offset.x;\n      y = element.y + offset.y;\n    }\n\n    mutateElement(element, {\n      x,\n      y,\n    });\n\n    updateBoundElements(element, {\n      simultaneouslyUpdated: selectedElements,\n    });\n  });\n};\n\nexport const getDragOffsetXY = (\n  selectedElements: NonDeletedExcalidrawElement[],\n  x: number,\n  y: number,\n): [number, number] => {\n  const [x1, y1] = getCommonBounds(selectedElements);\n  return [x - x1, y - y1];\n};\n\nexport const dragNewElement = (\n  draggingElement: NonDeletedExcalidrawElement,\n  elementType: typeof SHAPES[number][\"value\"],\n  originX: number,\n  originY: number,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  isResizeWithSidesSameLength: boolean,\n  isResizeCenterPoint: boolean,\n) => {\n  if (isResizeWithSidesSameLength) {\n    ({ width, height } = getPerfectElementSize(\n      elementType,\n      width,\n      y < originY ? -height : height,\n    ));\n\n    if (height < 0) {\n      height = -height;\n    }\n  }\n\n  let newX = x < originX ? originX - width : originX;\n  let newY = y < originY ? originY - height : originY;\n\n  if (isResizeCenterPoint) {\n    width += width;\n    height += height;\n    newX = originX - width / 2;\n    newY = originY - height / 2;\n  }\n\n  if (width !== 0 && height !== 0) {\n    mutateElement(draggingElement, {\n      x: newX,\n      y: newY,\n      width,\n      height,\n    });\n  }\n};\n","import { CODES, KEYS } from \"../keys\";\nimport { isWritableElement, getFontString } from \"../utils\";\nimport Scene from \"../scene/Scene\";\nimport { isTextElement } from \"./typeChecks\";\nimport { CLASSES } from \"../constants\";\nimport { ExcalidrawElement } from \"./types\";\nimport { AppState } from \"../types\";\n\nconst normalizeText = (text: string) => {\n  return (\n    text\n      // replace tabs with spaces so they render and measure correctly\n      .replace(/\\t/g, \"        \")\n      // normalize newlines\n      .replace(/\\r?\\n|\\r/g, \"\\n\")\n  );\n};\n\nconst getTransform = (\n  width: number,\n  height: number,\n  angle: number,\n  appState: AppState,\n  maxWidth: number,\n) => {\n  const { zoom, offsetTop, offsetLeft } = appState;\n  const degree = (180 * angle) / Math.PI;\n  // offsets must be multiplied by 2 to account for the division by 2 of\n  // the whole expression afterwards\n  let translateX = ((width - offsetLeft * 2) * (zoom.value - 1)) / 2;\n  const translateY = ((height - offsetTop * 2) * (zoom.value - 1)) / 2;\n  if (width > maxWidth && zoom.value !== 1) {\n    translateX = (maxWidth / 2) * (zoom.value - 1);\n  }\n  return `translate(${translateX}px, ${translateY}px) scale(${zoom.value}) rotate(${degree}deg)`;\n};\n\nexport const textWysiwyg = ({\n  id,\n  appState,\n  onChange,\n  onSubmit,\n  getViewportCoords,\n  element,\n  canvas,\n  excalidrawContainer,\n}: {\n  id: ExcalidrawElement[\"id\"];\n  appState: AppState;\n  onChange?: (text: string) => void;\n  onSubmit: (data: { text: string; viaKeyboard: boolean }) => void;\n  getViewportCoords: (x: number, y: number) => [number, number];\n  element: ExcalidrawElement;\n  canvas: HTMLCanvasElement | null;\n  excalidrawContainer: HTMLDivElement | null;\n}) => {\n  const updateWysiwygStyle = () => {\n    const updatedElement = Scene.getScene(element)?.getElement(id);\n    if (updatedElement && isTextElement(updatedElement)) {\n      const [viewportX, viewportY] = getViewportCoords(\n        updatedElement.x,\n        updatedElement.y,\n      );\n      const { textAlign, angle } = updatedElement;\n\n      editable.value = updatedElement.text;\n\n      const lines = updatedElement.text.replace(/\\r\\n?/g, \"\\n\").split(\"\\n\");\n      const lineHeight = updatedElement.height / lines.length;\n      const maxWidth =\n        (appState.offsetLeft + appState.width - viewportX - 8) /\n          appState.zoom.value -\n        // margin-right of parent if any\n        Number(\n          getComputedStyle(\n            excalidrawContainer?.parentNode as Element,\n          ).marginRight.slice(0, -2),\n        );\n\n      Object.assign(editable.style, {\n        font: getFontString(updatedElement),\n        // must be defined *after* font ¯\\_(ツ)_/¯\n        lineHeight: `${lineHeight}px`,\n        width: `${updatedElement.width}px`,\n        height: `${updatedElement.height}px`,\n        left: `${viewportX}px`,\n        top: `${viewportY}px`,\n        transform: getTransform(\n          updatedElement.width,\n          updatedElement.height,\n          angle,\n          appState,\n          maxWidth,\n        ),\n        textAlign,\n        color: updatedElement.strokeColor,\n        opacity: updatedElement.opacity / 100,\n        filter: \"var(--theme-filter)\",\n        maxWidth: `${maxWidth}px`,\n      });\n    }\n  };\n\n  const editable = document.createElement(\"textarea\");\n\n  editable.dir = \"auto\";\n  editable.tabIndex = 0;\n  editable.dataset.type = \"wysiwyg\";\n  // prevent line wrapping on Safari\n  editable.wrap = \"off\";\n\n  Object.assign(editable.style, {\n    position: \"absolute\",\n    display: \"inline-block\",\n    minHeight: \"1em\",\n    backfaceVisibility: \"hidden\",\n    margin: 0,\n    padding: 0,\n    border: 0,\n    outline: 0,\n    resize: \"none\",\n    background: \"transparent\",\n    overflow: \"hidden\",\n    // prevent line wrapping (`whitespace: nowrap` doesn't work on FF)\n    whiteSpace: \"pre\",\n    // must be specified because in dark mode canvas creates a stacking context\n    zIndex: \"var(--zIndex-wysiwyg)\",\n  });\n\n  updateWysiwygStyle();\n\n  if (onChange) {\n    editable.oninput = () => {\n      onChange(normalizeText(editable.value));\n    };\n  }\n\n  editable.onkeydown = (event) => {\n    event.stopPropagation();\n    if (event.key === KEYS.ESCAPE) {\n      event.preventDefault();\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (event.key === KEYS.ENTER && event[KEYS.CTRL_OR_CMD]) {\n      event.preventDefault();\n      if (event.isComposing || event.keyCode === 229) {\n        return;\n      }\n      submittedViaKeyboard = true;\n      handleSubmit();\n    } else if (\n      event.key === KEYS.TAB ||\n      (event[KEYS.CTRL_OR_CMD] &&\n        (event.code === CODES.BRACKET_LEFT ||\n          event.code === CODES.BRACKET_RIGHT))\n    ) {\n      event.preventDefault();\n      if (event.shiftKey || event.code === CODES.BRACKET_LEFT) {\n        outdent();\n      } else {\n        indent();\n      }\n      // We must send an input event to resize the element\n      editable.dispatchEvent(new Event(\"input\"));\n    }\n  };\n\n  const TAB_SIZE = 4;\n  const TAB = \" \".repeat(TAB_SIZE);\n  const RE_LEADING_TAB = new RegExp(`^ {1,${TAB_SIZE}}`);\n  const indent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex) => {\n      const startValue = value.slice(0, startIndex);\n      const endValue = value.slice(startIndex);\n\n      value = `${startValue}${TAB}${endValue}`;\n    });\n\n    editable.value = value;\n\n    editable.selectionStart = selectionStart + TAB_SIZE;\n    editable.selectionEnd = selectionEnd + TAB_SIZE * linesStartIndices.length;\n  };\n\n  const outdent = () => {\n    const { selectionStart, selectionEnd } = editable;\n    const linesStartIndices = getSelectedLinesStartIndices();\n    const removedTabs: number[] = [];\n\n    let value = editable.value;\n    linesStartIndices.forEach((startIndex) => {\n      const tabMatch = value\n        .slice(startIndex, startIndex + TAB_SIZE)\n        .match(RE_LEADING_TAB);\n\n      if (tabMatch) {\n        const startValue = value.slice(0, startIndex);\n        const endValue = value.slice(startIndex + tabMatch[0].length);\n\n        // Delete a tab from the line\n        value = `${startValue}${endValue}`;\n        removedTabs.push(startIndex);\n      }\n    });\n\n    editable.value = value;\n\n    if (removedTabs.length) {\n      if (selectionStart > removedTabs[removedTabs.length - 1]) {\n        editable.selectionStart = Math.max(\n          selectionStart - TAB_SIZE,\n          removedTabs[removedTabs.length - 1],\n        );\n      } else {\n        // If the cursor is before the first tab removed, ex:\n        // Line| #1\n        //     Line #2\n        // Lin|e #3\n        // we should reset the selectionStart to his initial value.\n        editable.selectionStart = selectionStart;\n      }\n      editable.selectionEnd = Math.max(\n        editable.selectionStart,\n        selectionEnd - TAB_SIZE * removedTabs.length,\n      );\n    }\n  };\n\n  /**\n   * @returns indeces of start positions of selected lines, in reverse order\n   */\n  const getSelectedLinesStartIndices = () => {\n    let { selectionStart, selectionEnd, value } = editable;\n\n    // chars before selectionStart on the same line\n    const startOffset = value.slice(0, selectionStart).match(/[^\\n]*$/)![0]\n      .length;\n    // put caret at the start of the line\n    selectionStart = selectionStart - startOffset;\n\n    const selected = value.slice(selectionStart, selectionEnd);\n\n    return selected\n      .split(\"\\n\")\n      .reduce(\n        (startIndices, line, idx, lines) =>\n          startIndices.concat(\n            idx\n              ? // curr line index is prev line's start + prev line's length + \\n\n                startIndices[idx - 1] + lines[idx - 1].length + 1\n              : // first selected line\n                selectionStart,\n          ),\n        [] as number[],\n      )\n      .reverse();\n  };\n\n  const stopEvent = (event: Event) => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n\n  // using a state variable instead of passing it to the handleSubmit callback\n  // so that we don't need to create separate a callback for event handlers\n  let submittedViaKeyboard = false;\n  const handleSubmit = () => {\n    // cleanup must be run before onSubmit otherwise when app blurs the wysiwyg\n    // it'd get stuck in an infinite loop of blur→onSubmit after we re-focus the\n    // wysiwyg on update\n    cleanup();\n    onSubmit({\n      text: normalizeText(editable.value),\n      viaKeyboard: submittedViaKeyboard,\n    });\n  };\n\n  const cleanup = () => {\n    if (isDestroyed) {\n      return;\n    }\n    isDestroyed = true;\n    // remove events to ensure they don't late-fire\n    editable.onblur = null;\n    editable.oninput = null;\n    editable.onkeydown = null;\n\n    if (observer) {\n      observer.disconnect();\n    }\n\n    window.removeEventListener(\"resize\", updateWysiwygStyle);\n    window.removeEventListener(\"wheel\", stopEvent, true);\n    window.removeEventListener(\"pointerdown\", onPointerDown);\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    window.removeEventListener(\"blur\", handleSubmit);\n\n    unbindUpdate();\n\n    editable.remove();\n  };\n\n  const bindBlurEvent = () => {\n    window.removeEventListener(\"pointerup\", bindBlurEvent);\n    // Deferred so that the pointerdown that initiates the wysiwyg doesn't\n    // trigger the blur on ensuing pointerup.\n    // Also to handle cases such as picking a color which would trigger a blur\n    // in that same tick.\n    setTimeout(() => {\n      editable.onblur = handleSubmit;\n      // case: clicking on the same property → no change → no update → no focus\n      editable.focus();\n    });\n  };\n\n  // prevent blur when changing properties from the menu\n  const onPointerDown = (event: MouseEvent) => {\n    if (\n      (event.target instanceof HTMLElement ||\n        event.target instanceof SVGElement) &&\n      event.target.closest(`.${CLASSES.SHAPE_ACTIONS_MENU}`) &&\n      !isWritableElement(event.target)\n    ) {\n      editable.onblur = null;\n      window.addEventListener(\"pointerup\", bindBlurEvent);\n      // handle edge-case where pointerup doesn't fire e.g. due to user\n      // alt-tabbing away\n      window.addEventListener(\"blur\", handleSubmit);\n    }\n  };\n\n  // handle updates of textElement properties of editing element\n  const unbindUpdate = Scene.getScene(element)!.addCallback(() => {\n    updateWysiwygStyle();\n    editable.focus();\n  });\n\n  // ---------------------------------------------------------------------------\n\n  let isDestroyed = false;\n\n  // select on init (focusing is done separately inside the bindBlurEvent()\n  // because we need it to happen *after* the blur event from `pointerdown`)\n  editable.select();\n  bindBlurEvent();\n\n  // reposition wysiwyg in case of canvas is resized. Using ResizeObserver\n  // is preferred so we catch changes from host, where window may not resize.\n  let observer: ResizeObserver | null = null;\n  if (canvas && \"ResizeObserver\" in window) {\n    observer = new window.ResizeObserver(() => {\n      updateWysiwygStyle();\n    });\n    observer.observe(canvas);\n  } else {\n    window.addEventListener(\"resize\", updateWysiwygStyle);\n  }\n\n  window.addEventListener(\"pointerdown\", onPointerDown);\n  window.addEventListener(\"wheel\", stopEvent, {\n    passive: false,\n    capture: true,\n  });\n  excalidrawContainer\n    ?.querySelector(\".excalidraw-textEditorContainer\")!\n    .appendChild(editable);\n};\n","import { measureText, getFontString } from \"../utils\";\nimport { ExcalidrawTextElement } from \"./types\";\nimport { mutateElement } from \"./mutateElement\";\n\nexport const redrawTextBoundingBox = (element: ExcalidrawTextElement) => {\n  const metrics = measureText(element.text, getFontString(element));\n  mutateElement(element, {\n    width: metrics.width,\n    height: metrics.height,\n    baseline: metrics.baseline,\n  });\n};\n","import { AppState } from \"../types\";\nimport { NonDeletedExcalidrawElement } from \"./types\";\nimport { getSelectedElements } from \"../scene\";\n\nexport const showSelectedShapeActions = (\n  appState: AppState,\n  elements: readonly NonDeletedExcalidrawElement[],\n) =>\n  Boolean(\n    !appState.viewModeEnabled &&\n      (appState.editingElement ||\n        getSelectedElements(elements, appState).length ||\n        appState.elementType !== \"selection\"),\n  );\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n} from \"./types\";\nimport { isInvisiblySmallElement } from \"./sizeHelpers\";\nimport { isLinearElementType } from \"./typeChecks\";\n\nexport {\n  newElement,\n  newTextElement,\n  updateTextElement,\n  newLinearElement,\n  duplicateElement,\n} from \"./newElement\";\nexport {\n  getElementAbsoluteCoords,\n  getElementBounds,\n  getCommonBounds,\n  getDiamondPoints,\n  getArrowheadPoints,\n  getClosestElementBounds,\n} from \"./bounds\";\n\nexport {\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n} from \"./transformHandles\";\nexport {\n  hitTest,\n  isHittingElementBoundingBoxWithoutHittingElement,\n} from \"./collision\";\nexport {\n  resizeTest,\n  getCursorForResizingElement,\n  getElementWithTransformHandleType,\n  getTransformHandleTypeFromCoords,\n} from \"./resizeTest\";\nexport {\n  transformElements,\n  getResizeOffsetXY,\n  getResizeArrowDirection,\n} from \"./resizeElements\";\nexport {\n  dragSelectedElements,\n  getDragOffsetXY,\n  dragNewElement,\n} from \"./dragElements\";\nexport { isTextElement, isExcalidrawElement } from \"./typeChecks\";\nexport { textWysiwyg } from \"./textWysiwyg\";\nexport { redrawTextBoundingBox } from \"./textElement\";\nexport {\n  getPerfectElementSize,\n  isInvisiblySmallElement,\n  resizePerfectLineForNWHandler,\n  getNormalizedDimensions,\n} from \"./sizeHelpers\";\nexport { showSelectedShapeActions } from \"./showSelectedShapeActions\";\n\nexport const getElementMap = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce(\n    (acc: { [key: string]: ExcalidrawElement }, element: ExcalidrawElement) => {\n      acc[element.id] = element;\n      return acc;\n    },\n    {},\n  );\n\nexport const getSceneVersion = (elements: readonly ExcalidrawElement[]) =>\n  elements.reduce((acc, el) => acc + el.version, 0);\n\nexport const getVisibleElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (el) => !el.isDeleted && !isInvisiblySmallElement(el),\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const getNonDeletedElements = (elements: readonly ExcalidrawElement[]) =>\n  elements.filter(\n    (element) => !element.isDeleted,\n  ) as readonly NonDeletedExcalidrawElement[];\n\nexport const isNonDeletedElement = <T extends ExcalidrawElement>(\n  element: T,\n): element is NonDeleted<T> => !element.isDeleted;\n\nconst _clearElements = (\n  elements: readonly ExcalidrawElement[],\n): ExcalidrawElement[] =>\n  getNonDeletedElements(elements).map((element) =>\n    isLinearElementType(element.type)\n      ? { ...element, lastCommittedPoint: null }\n      : element,\n  );\n\nexport const clearElementsForExport = (\n  elements: readonly ExcalidrawElement[],\n) => _clearElements(elements);\n\nexport const clearElementsForLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n) => _clearElements(elements);\n","import { ExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element\";\nimport { Zoom } from \"../types\";\nimport { ScrollBars } from \"./types\";\nimport { getGlobalCSSVariable } from \"../utils\";\nimport { getLanguage } from \"../i18n\";\n\nexport const SCROLLBAR_MARGIN = 4;\nexport const SCROLLBAR_WIDTH = 6;\nexport const SCROLLBAR_COLOR = \"rgba(0,0,0,0.3)\";\n\nexport const getScrollBars = (\n  elements: readonly ExcalidrawElement[],\n  viewportWidth: number,\n  viewportHeight: number,\n  {\n    scrollX,\n    scrollY,\n    zoom,\n  }: {\n    scrollX: number;\n    scrollY: number;\n    zoom: Zoom;\n  },\n): ScrollBars => {\n  if (elements.length === 0) {\n    return {\n      horizontal: null,\n      vertical: null,\n    };\n  }\n  // This is the bounding box of all the elements\n  const [\n    elementsMinX,\n    elementsMinY,\n    elementsMaxX,\n    elementsMaxY,\n  ] = getCommonBounds(elements);\n\n  // Apply zoom\n  const viewportWidthWithZoom = viewportWidth / zoom.value;\n  const viewportHeightWithZoom = viewportHeight / zoom.value;\n\n  const viewportWidthDiff = viewportWidth - viewportWidthWithZoom;\n  const viewportHeightDiff = viewportHeight - viewportHeightWithZoom;\n\n  const safeArea = {\n    top: parseInt(getGlobalCSSVariable(\"sat\")),\n    bottom: parseInt(getGlobalCSSVariable(\"sab\")),\n    left: parseInt(getGlobalCSSVariable(\"sal\")),\n    right: parseInt(getGlobalCSSVariable(\"sar\")),\n  };\n\n  const isRTL = getLanguage().rtl;\n\n  // The viewport is the rectangle currently visible for the user\n  const viewportMinX = -scrollX + viewportWidthDiff / 2 + safeArea.left;\n  const viewportMinY = -scrollY + viewportHeightDiff / 2 + safeArea.top;\n  const viewportMaxX = viewportMinX + viewportWidthWithZoom - safeArea.right;\n  const viewportMaxY = viewportMinY + viewportHeightWithZoom - safeArea.bottom;\n\n  // The scene is the bounding box of both the elements and viewport\n  const sceneMinX = Math.min(elementsMinX, viewportMinX);\n  const sceneMinY = Math.min(elementsMinY, viewportMinY);\n  const sceneMaxX = Math.max(elementsMaxX, viewportMaxX);\n  const sceneMaxY = Math.max(elementsMaxY, viewportMaxY);\n\n  // The scrollbar represents where the viewport is in relationship to the scene\n\n  return {\n    horizontal:\n      viewportMinX === sceneMinX && viewportMaxX === sceneMaxX\n        ? null\n        : {\n            x:\n              Math.max(safeArea.left, SCROLLBAR_MARGIN) +\n              ((viewportMinX - sceneMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth,\n            y:\n              viewportHeight -\n              SCROLLBAR_WIDTH -\n              Math.max(SCROLLBAR_MARGIN, safeArea.bottom),\n            width:\n              ((viewportMaxX - viewportMinX) / (sceneMaxX - sceneMinX)) *\n                viewportWidth -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.left + safeArea.right),\n            height: SCROLLBAR_WIDTH,\n          },\n    vertical:\n      viewportMinY === sceneMinY && viewportMaxY === sceneMaxY\n        ? null\n        : {\n            x: isRTL\n              ? Math.max(safeArea.left, SCROLLBAR_MARGIN)\n              : viewportWidth -\n                SCROLLBAR_WIDTH -\n                Math.max(safeArea.right, SCROLLBAR_MARGIN),\n            y:\n              ((viewportMinY - sceneMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight +\n              Math.max(safeArea.top, SCROLLBAR_MARGIN),\n            width: SCROLLBAR_WIDTH,\n            height:\n              ((viewportMaxY - viewportMinY) / (sceneMaxY - sceneMinY)) *\n                viewportHeight -\n              Math.max(SCROLLBAR_MARGIN * 2, safeArea.top + safeArea.bottom),\n          },\n  };\n};\n\nexport const isOverScrollBars = (\n  scrollBars: ScrollBars,\n  x: number,\n  y: number,\n): {\n  isOverEither: boolean;\n  isOverHorizontal: boolean;\n  isOverVertical: boolean;\n} => {\n  const [isOverHorizontal, isOverVertical] = [\n    scrollBars.horizontal,\n    scrollBars.vertical,\n  ].map((scrollBar) => {\n    return (\n      scrollBar != null &&\n      scrollBar.x <= x &&\n      x <= scrollBar.x + scrollBar.width &&\n      scrollBar.y <= y &&\n      y <= scrollBar.y + scrollBar.height\n    );\n  });\n  const isOverEither = isOverHorizontal || isOverVertical;\n  return { isOverEither, isOverHorizontal, isOverVertical };\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { getElementAbsoluteCoords, getElementBounds } from \"../element\";\nimport { AppState } from \"../types\";\n\nexport const getElementsWithinSelection = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  selection: NonDeletedExcalidrawElement,\n) => {\n  const [\n    selectionX1,\n    selectionY1,\n    selectionX2,\n    selectionY2,\n  ] = getElementAbsoluteCoords(selection);\n  return elements.filter((element) => {\n    const [elementX1, elementY1, elementX2, elementY2] = getElementBounds(\n      element,\n    );\n\n    return (\n      element.type !== \"selection\" &&\n      selectionX1 <= elementX1 &&\n      selectionY1 <= elementY1 &&\n      selectionX2 >= elementX2 &&\n      selectionY2 >= elementY2\n    );\n  });\n};\n\nexport const isSomeElementSelected = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n): boolean =>\n  elements.some((element) => appState.selectedElementIds[element.id]);\n\n/**\n * Returns common attribute (picked by `getAttribute` callback) of selected\n *  elements. If elements don't share the same value, returns `null`.\n */\nexport const getCommonAttributeOfSelectedElements = <T>(\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n): T | null => {\n  const attributes = Array.from(\n    new Set(\n      getSelectedElements(elements, appState).map((element) =>\n        getAttribute(element),\n      ),\n    ),\n  );\n  return attributes.length === 1 ? attributes[0] : null;\n};\n\nexport const getSelectedElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => elements.filter((element) => appState.selectedElementIds[element.id]);\n\nexport const getTargetElements = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) =>\n  appState.editingElement\n    ? [appState.editingElement]\n    : getSelectedElements(elements, appState);\n","import { AppState, PointerCoords, Zoom } from \"../types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport {\n  getCommonBounds,\n  getClosestElementBounds,\n  getVisibleElements,\n} from \"../element\";\n\nimport {\n  sceneCoordsToViewportCoords,\n  viewportCoordsToSceneCoords,\n} from \"../utils\";\n\nconst isOutsideViewPort = (\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n  cords: Array<number>,\n) => {\n  const [x1, y1, x2, y2] = cords;\n  const { x: viewportX1, y: viewportY1 } = sceneCoordsToViewportCoords(\n    { sceneX: x1, sceneY: y1 },\n    appState,\n  );\n  const { x: viewportX2, y: viewportY2 } = sceneCoordsToViewportCoords(\n    { sceneX: x2, sceneY: y2 },\n    appState,\n  );\n  return (\n    viewportX2 - viewportX1 > appState.width ||\n    viewportY2 - viewportY1 > appState.height\n  );\n};\n\nexport const centerScrollOn = ({\n  scenePoint,\n  viewportDimensions,\n  zoom,\n}: {\n  scenePoint: PointerCoords;\n  viewportDimensions: { height: number; width: number };\n  zoom: Zoom;\n}) => {\n  return {\n    scrollX:\n      (viewportDimensions.width / 2) * (1 / zoom.value) -\n      scenePoint.x -\n      zoom.translation.x * (1 / zoom.value),\n    scrollY:\n      (viewportDimensions.height / 2) * (1 / zoom.value) -\n      scenePoint.y -\n      zoom.translation.y * (1 / zoom.value),\n  };\n};\n\nexport const calculateScrollCenter = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  canvas: HTMLCanvasElement | null,\n): { scrollX: number; scrollY: number } => {\n  elements = getVisibleElements(elements);\n\n  if (!elements.length) {\n    return {\n      scrollX: 0,\n      scrollY: 0,\n    };\n  }\n  let [x1, y1, x2, y2] = getCommonBounds(elements);\n\n  if (isOutsideViewPort(appState, canvas, [x1, y1, x2, y2])) {\n    [x1, y1, x2, y2] = getClosestElementBounds(\n      elements,\n      viewportCoordsToSceneCoords(\n        { clientX: appState.scrollX, clientY: appState.scrollY },\n        appState,\n      ),\n    );\n  }\n\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n\n  return centerScrollOn({\n    scenePoint: { x: centerX, y: centerY },\n    viewportDimensions: { width: appState.width, height: appState.height },\n    zoom: appState.zoom,\n  });\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\n\nimport { getElementAbsoluteCoords } from \"../element\";\n\nexport const hasBackground = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"line\";\n\nexport const hasStrokeWidth = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"freedraw\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const hasStrokeStyle = (type: string) =>\n  type === \"rectangle\" ||\n  type === \"ellipse\" ||\n  type === \"diamond\" ||\n  type === \"arrow\" ||\n  type === \"line\";\n\nexport const canChangeSharpness = (type: string) =>\n  type === \"rectangle\" || type === \"arrow\" || type === \"line\";\n\nexport const hasText = (type: string) => type === \"text\";\n\nexport const canHaveArrowheads = (type: string) => type === \"arrow\";\n\nexport const getElementAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  // because array is ordered from lower z-index to highest and we want element z-index\n  // with higher z-index\n  for (let index = elements.length - 1; index >= 0; --index) {\n    const element = elements[index];\n    if (element.isDeleted) {\n      continue;\n    }\n    if (isAtPositionFn(element)) {\n      hitElement = element;\n      break;\n    }\n  }\n\n  return hitElement;\n};\n\nexport const getElementsAtPosition = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  isAtPositionFn: (element: NonDeletedExcalidrawElement) => boolean,\n) => {\n  // The parameter elements comes ordered from lower z-index to higher.\n  // We want to preserve that order on the returned array.\n  return elements.filter(\n    (element) => !element.isDeleted && isAtPositionFn(element),\n  );\n};\n\nexport const getElementContainingPosition = (\n  elements: readonly ExcalidrawElement[],\n  x: number,\n  y: number,\n) => {\n  let hitElement = null;\n  // We need to to hit testing from front (end of the array) to back (beginning of the array)\n  for (let index = elements.length - 1; index >= 0; --index) {\n    if (elements[index].isDeleted) {\n      continue;\n    }\n    const [x1, y1, x2, y2] = getElementAbsoluteCoords(elements[index]);\n    if (x1 < x && x < x2 && y1 < y && y < y2) {\n      hitElement = elements[index];\n      break;\n    }\n  }\n  return hitElement;\n};\n","import { NormalizedZoomValue, PointerCoords, Zoom } from \"../types\";\n\nexport const getNewZoom = (\n  newZoomValue: NormalizedZoomValue,\n  prevZoom: Zoom,\n  canvasOffset: { left: number; top: number },\n  zoomOnViewportPoint: PointerCoords = { x: 0, y: 0 },\n): Zoom => {\n  return {\n    value: newZoomValue,\n    translation: {\n      x:\n        zoomOnViewportPoint.x -\n        canvasOffset.left -\n        (zoomOnViewportPoint.x - canvasOffset.left - prevZoom.translation.x) *\n          (newZoomValue / prevZoom.value),\n      y:\n        zoomOnViewportPoint.y -\n        canvasOffset.top -\n        (zoomOnViewportPoint.y - canvasOffset.top - prevZoom.translation.y) *\n          (newZoomValue / prevZoom.value),\n    },\n  };\n};\n\nexport const getNormalizedZoom = (zoom: number): NormalizedZoomValue => {\n  const normalizedZoom = parseFloat(zoom.toFixed(2));\n  const clampedZoom = Math.max(0.1, Math.min(normalizedZoom, 10));\n  return clampedZoom as NormalizedZoomValue;\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport type ToolButtonSize = \"small\" | \"medium\";\n\ntype ToolButtonBaseProps = {\n  icon?: React.ReactNode;\n  \"aria-label\": string;\n  \"aria-keyshortcuts\"?: string;\n  \"data-testid\"?: string;\n  label?: string;\n  title?: string;\n  name?: string;\n  id?: string;\n  size?: ToolButtonSize;\n  keyBindingLabel?: string;\n  showAriaLabel?: boolean;\n  hidden?: boolean;\n  visible?: boolean;\n  selected?: boolean;\n  className?: string;\n};\n\ntype ToolButtonProps =\n  | (ToolButtonBaseProps & {\n      type: \"button\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"icon\";\n      children?: React.ReactNode;\n      onClick?(): void;\n    })\n  | (ToolButtonBaseProps & {\n      type: \"radio\";\n      checked: boolean;\n      onChange?(): void;\n    });\n\nexport const ToolButton = React.forwardRef((props: ToolButtonProps, ref) => {\n  const { id: excalId } = useExcalidrawContainer();\n  const innerRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => innerRef.current);\n  const sizeCn = `ToolIcon_size_${props.size}`;\n\n  if (props.type === \"button\" || props.type === \"icon\") {\n    return (\n      <button\n        className={clsx(\n          \"ToolIcon_type_button\",\n          sizeCn,\n          props.className,\n          props.visible && !props.hidden\n            ? \"ToolIcon_type_button--show\"\n            : \"ToolIcon_type_button--hide\",\n          {\n            ToolIcon: !props.hidden,\n            \"ToolIcon--selected\": props.selected,\n            \"ToolIcon--plain\": props.type === \"icon\",\n          },\n        )}\n        data-testid={props[\"data-testid\"]}\n        hidden={props.hidden}\n        title={props.title}\n        aria-label={props[\"aria-label\"]}\n        type=\"button\"\n        onClick={props.onClick}\n        ref={innerRef}\n      >\n        {(props.icon || props.label) && (\n          <div className=\"ToolIcon__icon\" aria-hidden=\"true\">\n            {props.icon || props.label}\n            {props.keyBindingLabel && (\n              <span className=\"ToolIcon__keybinding\">\n                {props.keyBindingLabel}\n              </span>\n            )}\n          </div>\n        )}\n        {props.showAriaLabel && (\n          <div className=\"ToolIcon__label\">{props[\"aria-label\"]}</div>\n        )}\n        {props.children}\n      </button>\n    );\n  }\n\n  return (\n    <label className={clsx(\"ToolIcon\", props.className)} title={props.title}>\n      <input\n        className={`ToolIcon_type_radio ${sizeCn}`}\n        type=\"radio\"\n        name={props.name}\n        aria-label={props[\"aria-label\"]}\n        aria-keyshortcuts={props[\"aria-keyshortcuts\"]}\n        data-testid={props[\"data-testid\"]}\n        id={`${excalId}-${props.id}`}\n        onChange={props.onChange}\n        checked={props.checked}\n        ref={innerRef}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.icon}\n        {props.keyBindingLabel && (\n          <span className=\"ToolIcon__keybinding\">{props.keyBindingLabel}</span>\n        )}\n      </div>\n    </label>\n  );\n});\n\nToolButton.defaultProps = {\n  visible: true,\n  className: \"\",\n  size: \"medium\",\n};\n","//\n// All icons are imported from https://fontawesome.com/icons?d=gallery\n// Icons are under the license https://fontawesome.com/license\n//\n\n// Note: when adding new icons, review https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/RTL_Guidelines\n// to determine whether or not the icons should be mirrored in right-to-left languages.\n\nimport React from \"react\";\n\nimport oc from \"open-color\";\nimport clsx from \"clsx\";\n\nconst activeElementColor = (theme: \"light\" | \"dark\") =>\n  theme === \"light\" ? oc.orange[4] : oc.orange[9];\nconst iconFillColor = (theme: \"light\" | \"dark\") =>\n  theme === \"light\" ? oc.black : oc.gray[4];\nconst handlerColor = (theme: \"light\" | \"dark\") =>\n  theme === \"light\" ? oc.white : \"#1e1e1e\";\n\ntype Opts = {\n  width?: number;\n  height?: number;\n  mirror?: true;\n} & React.SVGProps<SVGSVGElement>;\n\nexport const createIcon = (\n  d: string | React.ReactNode,\n  opts: number | Opts = 512,\n) => {\n  const { width = 512, height = width, mirror, style } =\n    typeof opts === \"number\" ? ({ width: opts } as Opts) : opts;\n  return (\n    <svg\n      aria-hidden=\"true\"\n      focusable=\"false\"\n      role=\"img\"\n      viewBox={`0 0 ${width} ${height}`}\n      className={clsx({ \"rtl-mirror\": mirror })}\n      style={style}\n    >\n      {typeof d === \"string\" ? <path fill=\"currentColor\" d={d} /> : d}\n    </svg>\n  );\n};\n\nexport const checkIcon = createIcon(\n  <polyline fill=\"none\" stroke=\"currentColor\" points=\"20 6 9 17 4 12\" />,\n  {\n    width: 24,\n    height: 24,\n  },\n);\n\nexport const link = createIcon(\n  \"M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z\",\n  { mirror: true },\n);\n\nexport const save = createIcon(\n  \"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z\",\n  { width: 448, height: 512 },\n);\n\nexport const saveAs = createIcon(\n  \"M252 54L203 8a28 27 0 00-20-8H28C12 0 0 12 0 27v195c0 15 12 26 28 26h204c15 0 28-11 28-26V73a28 27 0 00-8-19zM130 213c-21 0-37-16-37-36 0-19 16-35 37-35 20 0 37 16 37 35 0 20-17 36-37 36zm56-169v56c0 4-4 6-7 6H44c-4 0-7-2-7-6V42c0-4 3-7 7-7h133l4 2 3 2a7 7 0 012 5z M296 201l87 95-188 205-78 9c-10 1-19-8-18-20l9-84zm141-14l-41-44a31 31 0 00-46 0l-38 41 87 95 38-42c13-14 13-36 0-50z\",\n  { width: 448, height: 512 },\n);\n\nexport const load = createIcon(\n  \"M572.694 292.093L500.27 416.248A63.997 63.997 0 0 1 444.989 448H45.025c-18.523 0-30.064-20.093-20.731-36.093l72.424-124.155A64 64 0 0 1 152 256h399.964c18.523 0 30.064 20.093 20.73 36.093zM152 224h328v-48c0-26.51-21.49-48-48-48H272l-64-64H48C21.49 64 0 85.49 0 112v278.046l69.077-118.418C86.214 242.25 117.989 224 152 224z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const clipboard = createIcon(\n  \"M384 112v352c0 26.51-21.49 48-48 48H48c-26.51 0-48-21.49-48-48V112c0-26.51 21.49-48 48-48h80c0-35.29 28.71-64 64-64s64 28.71 64 64h80c26.51 0 48 21.49 48 48zM192 40c-13.255 0-24 10.745-24 24s10.745 24 24 24 24-10.745 24-24-10.745-24-24-24m96 114v-20a6 6 0 0 0-6-6H102a6 6 0 0 0-6 6v20a6 6 0 0 0 6 6h180a6 6 0 0 0 6-6z\",\n  { width: 384, height: 512 },\n);\n\nexport const trash = createIcon(\n  \"M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\",\n  { width: 448, height: 512 },\n);\n\nexport const palette = createIcon(\n  \"M204.3 5C104.9 24.4 24.8 104.3 5.2 203.4c-37 187 131.7 326.4 258.8 306.7 41.2-6.4 61.4-54.6 42.5-91.7-23.1-45.4 9.9-98.4 60.9-98.4h79.7c35.8 0 64.8-29.6 64.9-65.3C511.5 97.1 368.1-26.9 204.3 5zM96 320c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm32-128c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128-64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm128 64c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z\",\n);\n\nexport const exportFile = createIcon(\n  \"M384 121.9c0-6.3-2.5-12.4-7-16.9L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128zM571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-379 28v-32c0-8.8 7.2-16 16-16h176V160H248c-13.2 0-24-10.8-24-24V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V352H208c-8.8 0-16-7.2-16-16z\",\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const exportImage = createIcon(\n  <>\n    <path d=\"M571 308l-95.7-96.4c-10.1-10.1-27.4-3-27.4 11.3V288h-64v64h64v65.2c0 14.3 17.3 21.4 27.4 11.3L571 332c6.6-6.6 6.6-17.4 0-24zm-187 44v-64 64z\" />\n    <path d=\"M384 121.941V128H256V0h6.059c6.362 0 12.471 2.53 16.97 7.029l97.941 97.941a24.01 24.01 0 017.03 16.971zM248 160c-13.2 0-24-10.8-24-24V0H24C10.745 0 0 10.745 0 24v464c0 13.255 10.745 24 24 24h336c13.255 0 24-10.745 24-24V160H248zm-135.455 16c26.51 0 48 21.49 48 48s-21.49 48-48 48-48-21.49-48-48 21.491-48 48-48zm208 240h-256l.485-48.485L104.545 328c4.686-4.686 11.799-4.201 16.485.485L160.545 368 264.06 264.485c4.686-4.686 12.284-4.686 16.971 0L320.545 304v112z\" />\n  </>,\n  { width: 576, height: 512, mirror: true },\n);\n\nexport const exportToFileIcon = createIcon(\n  \"M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z\",\n  { width: 512, height: 512 },\n);\n\nexport const zoomIn = createIcon(\n  \"M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const zoomOut = createIcon(\n  \"M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z\",\n  { width: 448, height: 512 },\n);\n\nexport const done = createIcon(\n  \"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\",\n);\n\nexport const menu = createIcon(\n  \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n);\n\nexport const undo = createIcon(\n  \"M255.545 8c-66.269.119-126.438 26.233-170.86 68.685L48.971 40.971C33.851 25.851 8 36.559 8 57.941V192c0 13.255 10.745 24 24 24h134.059c21.382 0 32.09-25.851 16.971-40.971l-41.75-41.75c30.864-28.899 70.801-44.907 113.23-45.273 92.398-.798 170.283 73.977 169.484 169.442C423.236 348.009 349.816 424 256 424c-41.127 0-79.997-14.678-110.63-41.556-4.743-4.161-11.906-3.908-16.368.553L89.34 422.659c-4.872 4.872-4.631 12.815.482 17.433C133.798 479.813 192.074 504 256 504c136.966 0 247.999-111.033 248-247.998C504.001 119.193 392.354 7.755 255.545 8z\",\n  { mirror: true },\n);\n\nexport const redo = createIcon(\n  \"M256.455 8c66.269.119 126.437 26.233 170.859 68.685l35.715-35.715C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.75c-30.864-28.899-70.801-44.907-113.23-45.273-92.398-.798-170.283 73.977-169.484 169.442C88.764 348.009 162.184 424 256 424c41.127 0 79.997-14.678 110.629-41.556 4.743-4.161 11.906-3.908 16.368.553l39.662 39.662c4.872 4.872 4.631 12.815-.482 17.433C378.202 479.813 319.926 504 256 504 119.034 504 8.001 392.967 8 256.002 7.999 119.193 119.646 7.755 256.455 8z\",\n  { mirror: true },\n);\n\nexport const questionCircle = createIcon(\n  \"M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z\",\n  { mirror: true },\n);\n\nexport const share = createIcon(\n  \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92 1.61 0 2.92-1.31 2.92-2.92s-1.31-2.92-2.92-2.92z\",\n  { width: 24, height: 24 },\n);\n\nexport const shareIOS = createIcon(\n  \"M16 5l-1.42 1.42-1.59-1.59V16h-1.98V4.83L9.42 6.42 8 5l4-4 4 4zm4 5v11c0 1.1-.9 2-2 2H6c-1.11 0-2-.9-2-2V10c0-1.11.89-2 2-2h3v2H6v11h12V10h-3V8h3c1.1 0 2 .89 2 2z\",\n  { width: 24, height: 24 },\n);\n\nexport const shareWindows = createIcon(\n  <>\n    <path\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      d=\"M40 5.6v6.1l-4.1.7c-8.9 1.4-16.5 6.9-20.6 15C13 32 10.9 43 12.4 43c.4 0 2.4-1.3 4.4-3 5-3.9 12.1-7 18.2-7.7l5-.6v12.8l11.2-11.3L62.5 22 51.2 10.8 40-.5v6.1zm10.2 22.6L44 34.5v-6.8l-6.9.6c-3.9.3-9.8 1.7-13.2 3.1-3.5 1.4-6.5 2.4-6.7 2.2-.9-1 3-7.5 6.4-10.8C28 18.6 34.4 16 40.1 16c3.7 0 3.9-.1 3.9-3.2V9.5l6.2 6.3 6.3 6.2-6.3 6.2z\"\n    />\n    <path\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      d=\"M0 36v20h48v-6.2c0-6 0-6.1-2-4.3-1.1 1-2 2.9-2 4.2V52H4V34c0-17.3-.1-18-2-18s-2 .7-2 20z\"\n    />\n  </>,\n  { width: 64, height: 64 },\n);\n\n// Icon imported form Storybook\n// Storybook is licensed under MIT https://github.com/storybookjs/storybook/blob/next/LICENSE\nexport const resetZoom = createIcon(\n  <path\n    stroke=\"currentColor\"\n    strokeWidth=\"40\"\n    fill=\"currentColor\"\n    d=\"M148 560a318 318 0 0 0 522 110 316 316 0 0 0 0-450 316 316 0 0 0-450 0c-11 11-21 22-30 34v4h47c25 0 46 21 46 46s-21 45-46 45H90c-13 0-25-6-33-14-9-9-14-20-14-33V156c0-25 20-45 45-45s45 20 45 45v32l1 1a401 401 0 0 1 623 509l212 212a42 42 0 0 1-59 59L698 757A401 401 0 0 1 65 570a42 42 0 0 1 83-10z\"\n  />,\n  { width: 1024 },\n);\n\nexport const BringForwardIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M22 9.556C22 8.696 21.303 8 20.444 8H16v8H8v4.444C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const SendBackwardIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M16 3.556C16 2.696 15.303 2 14.444 2H3.556C2.696 2 2 2.697 2 3.556v10.888C2 15.304 2.697 16 3.556 16h10.888c.86 0 1.556-.697 1.556-1.556V3.556z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M22 9.556C22 8.696 21.303 8 20.444 8H9.556C8.696 8 8 8.697 8 9.556v10.888C8 21.304 8.697 22 9.556 22h10.888c.86 0 1.556-.697 1.556-1.556V9.556z\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const BringToFrontIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M13 21a1 1 0 001 1h7a1 1 0 001-1v-7a1 1 0 00-1-1h-3v5h-5v3zM11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h3V6h5V3z\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const SendToBackIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M18 7.333C18 6.597 17.403 6 16.667 6H7.333C6.597 6 6 6.597 6 7.333v9.334C6 17.403 6.597 18 7.333 18h9.334c.736 0 1.333-.597 1.333-1.333V7.333z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M11 3a1 1 0 00-1-1H3a1 1 0 00-1 1v7a1 1 0 001 1h8V3zM22 14a1 1 0 00-1-1h-7a1 1 0 00-1 1v7a1 1 0 001 1h8v-8z\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\n//\n// Align action icons created from scratch to match those of z-index actions\n// Note: vertical align icons are flipped so the larger item is always the\n// first one the user sees. Horizontal align icons should not be flipped since\n// that would make them lie about their function.\n//\nexport const AlignTopIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 2,5 H 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M 6,7 C 5.446,7 5,7.446 5,8 v 9.999992 c 0,0.554 0.446,1 1,1 h 3.0000001 c 0.554,0 0.9999999,-0.446 0.9999999,-1 V 8 C 10,7.446 9.5540001,7 9.0000001,7 Z m 9,0 c -0.554,0 -1,0.446 -1,1 v 5.999992 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 V 8 C 19,7.446 18.554,7 18,7 Z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const AlignBottomIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 2,19 H 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"m 6,16.999992 c -0.554,0 -1,-0.446 -1,-1 V 6 C 5,5.446 5.446,5 6,5 H 9.0000001 C 9.5540001,5 10,5.446 10,6 v 9.999992 c 0,0.554 -0.4459999,1 -0.9999999,1 z m 9,0 c -0.554,0 -1,-0.446 -1,-1 V 10 c 0,-0.554 0.446,-1 1,-1 h 3 c 0.554,0 1,0.446 1,1 v 5.999992 c 0,0.554 -0.446,1 -1,1 z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const AlignLeftIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 5,2 V 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"m 7.000004,5.999996 c 0,-0.554 0.446,-1 1,-1 h 9.999992 c 0.554,0 1,0.446 1,1 v 3.0000001 c 0,0.554 -0.446,0.9999999 -1,0.9999999 H 8.000004 c -0.554,0 -1,-0.4459999 -1,-0.9999999 z m 0,9 c 0,-0.554 0.446,-1 1,-1 h 5.999992 c 0.554,0 1,0.446 1,1 v 3 c 0,0.554 -0.446,1 -1,1 H 8.000004 c -0.554,0 -1,-0.446 -1,-1 z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const AlignRightIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 19,2 V 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"m 16.999996,5.999996 c 0,-0.554 -0.446,-1 -1,-1 H 6.000004 c -0.554,0 -1,0.446 -1,1 v 3.0000001 c 0,0.554 0.446,0.9999999 1,0.9999999 h 9.999992 c 0.554,0 1,-0.4459999 1,-0.9999999 z m 0,9 c 0,-0.554 -0.446,-1 -1,-1 h -5.999992 c -0.554,0 -1,0.446 -1,1 v 3 c 0,0.554 0.446,1 1,1 h 5.999992 c 0.554,0 1,-0.446 1,-1 z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const DistributeHorizontallyIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M19 5V19M5 5V19\"\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M15 9C15.554 9 16 9.446 16 10V14C16 14.554 15.554 15 15 15H9C8.446 15 8 14.554 8 14V10C8 9.446 8.446 9 9 9H15Z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const DistributeVerticallyIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M5 5L19 5M5 19H19\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <path\n          d=\"M15 9C15.554 9 16 9.446 16 10V14C16 14.554 15.554 15 15 15H9C8.446 15 8 14.554 8 14V10C8 9.446 8.446 9 9 9H15Z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const CenterVerticallyIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"m 5.000004,16.999996 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 v -10 c 0,-0.554 -0.446,-1 -1,-1 h -3 c -0.554,0 -1,0.446 -1,1 z m 9,-2 c 0,0.554 0.446,1 1,1 h 3 c 0.554,0 1,-0.446 1,-1 v -6 c 0,-0.554 -0.446,-1 -1,-1 h -3 c -0.554,0 -1,0.446 -1,1 z\"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M 2,12 H 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeDasharray=\"1, 2.8\"\n          strokeLinecap=\"round\"\n        />\n      </>,\n      { width: 24, mirror: true },\n    ),\n);\n\nexport const CenterHorizontallyIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          d=\"M 7 5 C 6.446 5 6 5.446 6 6 L 6 9 C 6 9.554 6.446 10 7 10 L 17 10 C 17.554 10 18 9.554 18 9 L 18 6 C 18 5.446 17.554 5 17 5 L 7 5 z M 9 14 C 8.446 14 8 14.446 8 15 L 8 18 C 8 18.554 8.446 19 9 19 L 15 19 C 15.554 19 16 18.554 16 18 L 16 15 C 16 14.446 15.554 14 15 14 L 9 14 z \"\n          fill={activeElementColor(theme)}\n          stroke={activeElementColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path\n          d=\"M 12,2 V 22\"\n          fill={iconFillColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n          strokeDasharray=\"1, 2.8\"\n          strokeLinecap=\"round\"\n        />\n      </>,\n      { width: 24 },\n    ),\n);\n\nexport const users = createIcon(\n  \"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\",\n  { width: 640, height: 512, mirror: true },\n);\n\n// not mirrored because it's inspired by a playback control, which is always RTL\nexport const start = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm115.7 272l-176 101c-15.8 8.8-35.7-2.5-35.7-21V152c0-18.4 19.8-29.8 35.7-21l176 107c16.4 9.2 16.4 32.9 0 42z\",\n);\n\nexport const stop = createIcon(\n  \"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm96 328c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V176c0-8.8 7.2-16 16-16h160c8.8 0 16 7.2 16 16v160z\",\n);\n\nexport const close = createIcon(\n  \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\",\n  { width: 352, height: 512 },\n);\n\nexport const back = createIcon(\n  \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\",\n  { width: 320, height: 512, style: { marginLeft: \"-0.2rem\" }, mirror: true },\n);\n\nexport const clone = createIcon(\n  \"M464 0c26.51 0 48 21.49 48 48v288c0 26.51-21.49 48-48 48H176c-26.51 0-48-21.49-48-48V48c0-26.51 21.49-48 48-48h288M176 416c-44.112 0-80-35.888-80-80V128H48c-26.51 0-48 21.49-48 48v288c0 26.51 21.49 48 48 48h288c26.51 0 48-21.49 48-48v-48H176z\",\n  { mirror: true },\n);\n\n// modified https://feathericons.com/?query=shield\nexport const shield = createIcon(\n  \"M11.553 22.894a.998.998 0 00.894 0s3.037-1.516 5.465-4.097C19.616 16.987 21 14.663 21 12V5a1 1 0 00-.649-.936l-8-3a.998.998 0 00-.702 0l-8 3A1 1 0 003 5v7c0 2.663 1.384 4.987 3.088 6.797 2.428 2.581 5.465 4.097 5.465 4.097zm-1.303-8.481l6.644-6.644a.856.856 0 111.212 1.212l-7.25 7.25a.856.856 0 01-1.212 0l-3.75-3.75a.856.856 0 111.212-1.212l3.144 3.144z\",\n  { width: 24 },\n);\n\nexport const file = createIcon(\n  \"M369.9 97.9L286 14C277 5 264.8-.1 252.1-.1H48C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48V131.9c0-12.7-5.1-25-14.1-34zM332.1 128H256V51.9l76.1 76.1zM48 464V48h160v104c0 13.3 10.7 24 24 24h104v288H48zm32-48h224V288l-23.5-23.5c-4.7-4.7-12.3-4.7-17 0L176 352l-39.5-39.5c-4.7-4.7-12.3-4.7-17 0L80 352v64zm48-240c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\",\n  { width: 384, height: 512 },\n);\n\nexport const GroupIcon = React.memo(({ theme }: { theme: \"light\" | \"dark\" }) =>\n  createIcon(\n    <>\n      <path d=\"M25 26H111V111H25\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M25 111C25 80.2068 25 49.4135 25 26M25 26C48.6174 26 72.2348 26 111 26H25ZM25 26C53.3671 26 81.7343 26 111 26H25ZM111 26C111 52.303 111 78.606 111 111V26ZM111 26C111 51.2947 111 76.5893 111 111V26ZM111 111C87.0792 111 63.1585 111 25 111H111ZM111 111C87.4646 111 63.9293 111 25 111H111ZM25 111C25 81.1514 25 51.3028 25 26V111Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <path d=\"M100 100H160V160H100\" fill={iconFillColor(theme)} />\n      <path\n        d=\"M100 160C100 144.106 100 128.211 100 100M100 100C117.706 100 135.412 100 160 100H100ZM100 100C114.214 100 128.428 100 160 100H100ZM160 100C160 120.184 160 140.369 160 160V100ZM160 100C160 113.219 160 126.437 160 160V100ZM160 160C145.534 160 131.068 160 100 160H160ZM160 160C143.467 160 126.934 160 100 160H160ZM100 160C100 143.661 100 127.321 100 100V160Z\"\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"2\"\n      />\n      <g\n        fill={handlerColor(theme)}\n        stroke={iconFillColor(theme)}\n        strokeWidth=\"6\"\n      >\n        <rect x=\"2.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n        <rect x=\"2.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n        <rect x=\"147.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n      </g>\n    </>,\n    { width: 182, height: 182, mirror: true },\n  ),\n);\n\nexport const UngroupIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path d=\"M25 26H111V111H25\" fill={iconFillColor(theme)} />\n        <path\n          d=\"M25 111C25 80.2068 25 49.4135 25 26M25 26C48.6174 26 72.2348 26 111 26H25ZM25 26C53.3671 26 81.7343 26 111 26H25ZM111 26C111 52.303 111 78.606 111 111V26ZM111 26C111 51.2947 111 76.5893 111 111V26ZM111 111C87.0792 111 63.1585 111 25 111H111ZM111 111C87.4646 111 63.9293 111 25 111H111ZM25 111C25 81.1514 25 51.3028 25 26V111Z\"\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <path d=\"M100 100H160V160H100\" fill={iconFillColor(theme)} />\n        <path\n          d=\"M100 160C100 144.106 100 128.211 100 100M100 100C117.706 100 135.412 100 160 100H100ZM100 100C114.214 100 128.428 100 160 100H100ZM160 100C160 120.184 160 140.369 160 160V100ZM160 100C160 113.219 160 126.437 160 160V100ZM160 160C145.534 160 131.068 160 100 160H160ZM160 160C143.467 160 126.934 160 100 160H160ZM100 160C100 143.661 100 127.321 100 100V160Z\"\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"2\"\n        />\n        <g\n          fill={handlerColor(theme)}\n          stroke={iconFillColor(theme)}\n          strokeWidth=\"6\"\n        >\n          <rect x=\"2.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n          <rect x=\"78.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n          <rect x=\"147.5\" y=\"149.5\" width=\"30\" height=\"30\" />\n          <rect x=\"147.5\" y=\"78.5\" width=\"30\" height=\"30\" />\n          <rect x=\"105.5\" y=\"2.5\" width=\"30\" height=\"30\" />\n          <rect x=\"2.5\" y=\"102.5\" width=\"30\" height=\"30\" />\n        </g>\n      </>,\n      { width: 182, height: 182, mirror: true },\n    ),\n);\n\nexport const FillHachureIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M20.101 16H28.0934L36 8.95989V4H33.5779L20.101 16ZM30.5704 4L17.0935 16H9.10101L22.5779 4H30.5704ZM19.5704 4L6.09349 16H4V10.7475L11.5779 4H19.5704ZM8.57036 4H4V8.06952L8.57036 4ZM36 11.6378L31.101 16H36V11.6378ZM2 2V18H38V2H2Z\"\n        fill={iconFillColor(theme)}\n      />,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const FillCrossHatchIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <g fill={iconFillColor(theme)} fillRule=\"evenodd\" clipRule=\"evenodd\">\n        <path d=\"M20.101 16H28.0934L36 8.95989V4H33.5779L20.101 16ZM30.5704 4L17.0935 16H9.10101L22.5779 4H30.5704ZM19.5704 4L6.09349 16H4V10.7475L11.5779 4H19.5704ZM8.57036 4H4V8.06952L8.57036 4ZM36 11.6378L31.101 16H36V11.6378ZM2 2V18H38V2H2Z\" />\n        <path d=\"M14.0001 18L3.00006 4.00002L4.5727 2.76438L15.5727 16.7644L14.0001 18ZM25.0001 18L14.0001 4.00002L15.5727 2.76438L26.5727 16.7644L25.0001 18ZM36.0001 18L25.0001 4.00002L26.5727 2.76438L37.5727 16.7644L36.0001 18Z\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const FillSolidIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(<path d=\"M2 2H38V18H2V2Z\" fill={iconFillColor(theme)} />, {\n      width: 40,\n      height: 20,\n    }),\n);\n\nexport const StrokeWidthIcon = React.memo(\n  ({ theme, strokeWidth }: { theme: \"light\" | \"dark\"; strokeWidth: number }) =>\n    createIcon(\n      <path\n        d=\"M6 10H32\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const StrokeStyleSolidIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M6 10H34\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        fill=\"none\"\n        strokeLinecap=\"round\"\n      />,\n      {\n        width: 40,\n        height: 20,\n      },\n    ),\n);\n\nexport const StrokeStyleDashedIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M6 10H34\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2.5}\n        strokeDasharray={\"10, 8\"}\n        fill=\"none\"\n        strokeLinecap=\"round\"\n      />,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const StrokeStyleDottedIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M6 10H36\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2.5}\n        strokeDasharray={\"2, 4.5\"}\n        fill=\"none\"\n        strokeLinecap=\"round\"\n      />,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const SloppinessArchitectIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M3.00098 16.1691C6.28774 13.9744 19.6399 2.8905 22.7215 3.00082C25.8041 3.11113 19.1158 15.5488 21.4962 16.8309C23.8757 18.1131 34.4155 11.7148 37.0001 10.6919\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const SloppinessArtistIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M3 17C6.68158 14.8752 16.1296 9.09849 22.0648 6.54922C28 3.99995 22.2896 13.3209 25 14C27.7104 14.6791 36.3757 9.6471 36.3757 9.6471M6.40706 15C13 11.1918 20.0468 1.51045 23.0234 3.0052C26 4.49995 20.457 12.8659 22.7285 16.4329C25 20 36.3757 13 36.3757 13\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const SloppinessCartoonistIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M3 15.6468C6.93692 13.5378 22.5544 2.81528 26.6206 3.00242C30.6877 3.18956 25.6708 15.3346 27.4009 16.7705C29.1309 18.2055 35.4001 12.4762 37 11.6177M3.97143 10.4917C6.61158 9.24563 16.3706 2.61886 19.8104 3.01724C23.2522 3.41472 22.0773 12.2013 24.6181 12.8783C27.1598 13.5536 33.3179 8.04068 35.0571 7.07244\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const EdgeSharpIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M10 17L10 5L35 5\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const EdgeRoundIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M10 17V15C10 8 13 5 21 5L33.5 5\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        strokeLinecap=\"round\"\n        fill=\"none\"\n      />,\n      { width: 40, height: 20, mirror: true },\n    ),\n);\n\nexport const ArrowheadNoneIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M6 10H34\"\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        fill=\"none\"\n      />,\n      {\n        width: 40,\n        height: 20,\n      },\n    ),\n);\n\nexport const ArrowheadArrowIcon = React.memo(\n  ({ theme, flip = false }: { theme: \"light\" | \"dark\"; flip?: boolean }) =>\n    createIcon(\n      <g\n        transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}\n        stroke={iconFillColor(theme)}\n        strokeWidth={2}\n        fill=\"none\"\n      >\n        <path d=\"M34 10H6M34 10L27 5M34 10L27 15\" />\n        <path d=\"M27.5 5L34.5 10L27.5 15\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const ArrowheadDotIcon = React.memo(\n  ({ theme, flip = false }: { theme: \"light\" | \"dark\"; flip?: boolean }) =>\n    createIcon(\n      <g\n        stroke={iconFillColor(theme)}\n        fill={iconFillColor(theme)}\n        transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}\n      >\n        <path d=\"M32 10L6 10\" strokeWidth={2} />\n        <circle r=\"4\" transform=\"matrix(-1 0 0 1 30 10)\" />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const ArrowheadBarIcon = React.memo(\n  ({ theme, flip = false }: { theme: \"light\" | \"dark\"; flip?: boolean }) =>\n    createIcon(\n      <g transform={flip ? \"translate(40, 0) scale(-1, 1)\" : \"\"}>\n        <path\n          d=\"M34 10H5.99996M34 10L34 5M34 10L34 15\"\n          stroke={iconFillColor(theme)}\n          strokeWidth={2}\n          fill=\"none\"\n        />\n      </g>,\n      { width: 40, height: 20 },\n    ),\n);\n\nexport const FontSizeSmallIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 0 69.092 L 0 55.03 A 124.24 124.24 0 0 0 4.706 57.02 Q 6.826 57.863 8.708 58.5 A 53.466 53.466 0 0 0 12.231 59.571 Q 17.236 60.889 21.387 60.889 A 20.909 20.909 0 0 0 24.265 60.704 Q 25.719 60.502 26.903 60.077 A 8.649 8.649 0 0 0 29.028 58.985 Q 31.689 57.08 31.689 53.321 Q 31.689 51.221 30.518 49.585 A 10.126 10.126 0 0 0 29.282 48.177 Q 28.352 47.287 27.075 46.436 A 23.719 23.719 0 0 0 25.752 45.627 Q 23.774 44.492 20.176 42.735 A 254.44 254.44 0 0 0 17.822 41.602 Q 11.503 38.631 8.236 35.888 A 19.742 19.742 0 0 1 8.008 35.694 A 22.18 22.18 0 0 1 2.783 29.102 Q 0.83 25.342 0.83 20.313 A 22.471 22.471 0 0 1 1.733 13.778 A 17.283 17.283 0 0 1 7.251 5.42 A 21.486 21.486 0 0 1 15.177 1.272 Q 18.361 0.338 22.166 0.09 A 43.573 43.573 0 0 1 25 0 A 42.399 42.399 0 0 1 34.349 1.01 A 39.075 39.075 0 0 1 35.62 1.319 A 67.407 67.407 0 0 1 42.108 3.382 A 83.357 83.357 0 0 1 46.191 5.03 L 41.309 16.797 Q 35.596 14.453 31.86 13.526 A 30.762 30.762 0 0 0 25.417 12.612 A 28.337 28.337 0 0 0 24.512 12.598 A 14.846 14.846 0 0 0 22.022 12.793 Q 19.498 13.224 17.92 14.6 Q 15.625 16.602 15.625 19.824 Q 15.625 21.826 16.553 23.316 Q 17.48 24.805 19.507 26.197 A 18.343 18.343 0 0 0 20.659 26.912 Q 22.596 28.035 26.516 29.953 A 299.99 299.99 0 0 0 29.102 31.201 Q 37.91 35.412 41.841 39.642 A 16.553 16.553 0 0 1 42.822 40.796 A 17.675 17.675 0 0 1 46.301 49.233 A 23.517 23.517 0 0 1 46.533 52.588 A 21.581 21.581 0 0 1 45.471 59.515 A 17.733 17.733 0 0 1 39.575 67.823 Q 33.745 72.486 24.094 73.243 A 49.683 49.683 0 0 1 20.215 73.389 A 51.712 51.712 0 0 1 9.448 72.315 A 40.672 40.672 0 0 1 0 69.092 Z\"\n      />,\n      { width: 47, height: 77 },\n    ),\n);\n\nexport const FontSizeMediumIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 44.092 71.387 L 30.225 71.387 L 13.037 15.381 L 12.598 15.381 A 1505.093 1505.093 0 0 1 12.959 22.313 Q 13.426 31.715 13.508 36.4 A 102.991 102.991 0 0 1 13.525 38.184 L 13.525 71.387 L 0 71.387 L 0 0 L 20.605 0 L 37.5 54.59 L 37.793 54.59 L 55.713 0 L 76.318 0 L 76.318 71.387 L 62.207 71.387 L 62.207 37.598 Q 62.207 35.205 62.28 32.08 A 160.703 160.703 0 0 1 62.326 30.544 Q 62.452 26.754 62.866 17.168 A 5390.536 5390.536 0 0 1 62.939 15.479 L 62.5 15.479 L 44.092 71.387 Z\"\n      />,\n      { width: 77, height: 75 },\n    ),\n);\n\nexport const FontSizeLargeIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 44.092 71.387 L 0 71.387 L 0 0 L 15.137 0 L 15.137 58.887 L 44.092 58.887 L 44.092 71.387 Z\"\n      />,\n      { width: 45, height: 75 },\n    ),\n);\n\nexport const FontSizeExtraLargeIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M 42.578 35.4 L 66.699 71.387 L 49.414 71.387 L 32.813 44.385 L 16.211 71.387 L 0 71.387 L 23.682 34.57 L 1.514 0 L 18.213 0 L 33.594 25.684 L 48.682 0 L 64.99 0 L 42.578 35.4 Z M 119.775 71.387 L 75.684 71.387 L 75.684 0 L 90.82 0 L 90.82 58.887 L 119.775 58.887 L 119.775 71.387 Z\"\n      />,\n      { width: 120, height: 75 },\n    ),\n);\n\nexport const FontFamilyHandDrawnIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        fill={iconFillColor(theme)}\n        d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n      />,\n      { width: 448, height: 512 },\n    ),\n);\n\nexport const FontFamilyNormalIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          fill={iconFillColor(theme)}\n          d=\"M 63.818 71.68 L 54.492 71.68 L 45.898 49.561 L 17.578 49.561 L 9.082 71.68 L 0 71.68 L 27.881 0 L 35.986 0 L 63.818 71.68 Z M 20.605 41.602 L 43.213 41.602 L 35.205 19.971 L 31.787 9.277 Q 30.322 15.137 28.711 19.971 L 20.605 41.602 Z\"\n        />\n        <path\n          fill={iconFillColor(theme)}\n          d=\"M 68.994 71.68 L 52.686 71.68 L 47.51 54.688 L 21.484 54.688 L 16.309 71.68 L 0 71.68 L 25.195 0 L 43.701 0 L 68.994 71.68 Z M 25.293 41.992 L 43.896 41.992 A 27590.463 27590.463 0 0 1 42.2 36.532 Q 36.965 19.676 35.937 16.273 A 120.932 120.932 0 0 1 35.815 15.869 A 131.65 131.65 0 0 1 35.396 14.435 Q 34.951 12.879 34.675 11.741 A 34.866 34.866 0 0 1 34.521 11.084 A 141.762 141.762 0 0 1 33.706 14.075 Q 31.482 21.957 25.293 41.992 Z\"\n        />\n      </>,\n      { width: 70, height: 78 },\n    ),\n);\n\nexport const FontFamilyCodeIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <>\n        <path\n          fill={iconFillColor(theme)}\n          d=\"M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z\"\n        />\n      </>,\n      { width: 640, height: 512 },\n    ),\n);\n\nexport const TextAlignLeftIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M12.83 352h262.34A12.82 12.82 0 00288 339.17v-38.34A12.82 12.82 0 00275.17 288H12.83A12.82 12.82 0 000 300.83v38.34A12.82 12.82 0 0012.83 352zm0-256h262.34A12.82 12.82 0 00288 83.17V44.83A12.82 12.82 0 00275.17 32H12.83A12.82 12.82 0 000 44.83v38.34A12.82 12.82 0 0012.83 96zM432 160H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm0 256H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16z\"\n        fill={iconFillColor(theme)}\n        strokeLinecap=\"round\"\n      />,\n      { width: 448, height: 512 },\n    ),\n);\n\nexport const TextAlignCenterIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M432 160H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm0 256H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zM108.1 96h231.81A12.09 12.09 0 00352 83.9V44.09A12.09 12.09 0 00339.91 32H108.1A12.09 12.09 0 0096 44.09V83.9A12.1 12.1 0 00108.1 96zm231.81 256A12.09 12.09 0 00352 339.9v-39.81A12.09 12.09 0 00339.91 288H108.1A12.09 12.09 0 0096 300.09v39.81a12.1 12.1 0 0012.1 12.1z\"\n        fill={iconFillColor(theme)}\n      />,\n      { width: 448, height: 512 },\n    ),\n);\n\nexport const TextAlignRightIcon = React.memo(\n  ({ theme }: { theme: \"light\" | \"dark\" }) =>\n    createIcon(\n      <path\n        d=\"M16 224h416a16 16 0 0016-16v-32a16 16 0 00-16-16H16a16 16 0 00-16 16v32a16 16 0 0016 16zm416 192H16a16 16 0 00-16 16v32a16 16 0 0016 16h416a16 16 0 0016-16v-32a16 16 0 00-16-16zm3.17-384H172.83A12.82 12.82 0 00160 44.83v38.34A12.82 12.82 0 00172.83 96h262.34A12.82 12.82 0 00448 83.17V44.83A12.82 12.82 0 00435.17 32zm0 256H172.83A12.82 12.82 0 00160 300.83v38.34A12.82 12.82 0 00172.83 352h262.34A12.82 12.82 0 00448 339.17v-38.34A12.82 12.82 0 00435.17 288z\"\n        fill={iconFillColor(theme)}\n        strokeLinecap=\"round\"\n      />,\n      { width: 448, height: 512 },\n    ),\n);\n","import { Action } from \"./types\";\n\nexport let actions: readonly Action[] = [];\n\nexport const register = (action: Action): Action => {\n  actions = actions.concat(action);\n  return action;\n};\n","import { isSomeElementSelected } from \"../scene\";\nimport { KEYS } from \"../keys\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport React from \"react\";\nimport { trash } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getElementsInGroup } from \"../groups\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { fixBindingsAfterDeletion } from \"../element/binding\";\n\nconst deleteSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return {\n    elements: elements.map((el) => {\n      if (appState.selectedElementIds[el.id]) {\n        return newElementWith(el, { isDeleted: true });\n      }\n      return el;\n    }),\n    appState: {\n      ...appState,\n      selectedElementIds: {},\n    },\n  };\n};\n\nconst handleGroupEditingState = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n): AppState => {\n  if (appState.editingGroupId) {\n    const siblingElements = getElementsInGroup(\n      getNonDeletedElements(elements),\n      appState.editingGroupId!,\n    );\n    if (siblingElements.length) {\n      return {\n        ...appState,\n        selectedElementIds: { [siblingElements[0].id]: true },\n      };\n    }\n  }\n  return appState;\n};\n\nexport const actionDeleteSelected = register({\n  name: \"deleteSelectedElements\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      const {\n        elementId,\n        activePointIndex,\n        startBindingElement,\n        endBindingElement,\n      } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (!element) {\n        return false;\n      }\n      if (\n        // case: no point selected → delete whole element\n        activePointIndex == null ||\n        activePointIndex === -1 ||\n        // case: deleting last remaining point\n        element.points.length < 2\n      ) {\n        const nextElements = elements.filter((el) => el.id !== element.id);\n        const nextAppState = handleGroupEditingState(appState, nextElements);\n\n        return {\n          elements: nextElements,\n          appState: {\n            ...nextAppState,\n            editingLinearElement: null,\n          },\n          commitToHistory: false,\n        };\n      }\n\n      // We cannot do this inside `movePoint` because it is also called\n      // when deleting the uncommitted point (which hasn't caused any binding)\n      const binding = {\n        startBindingElement:\n          activePointIndex === 0 ? null : startBindingElement,\n        endBindingElement:\n          activePointIndex === element.points.length - 1\n            ? null\n            : endBindingElement,\n      };\n\n      LinearElementEditor.movePoint(element, activePointIndex, \"delete\");\n\n      return {\n        elements,\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            ...binding,\n            activePointIndex: activePointIndex > 0 ? activePointIndex - 1 : 0,\n          },\n        },\n        commitToHistory: true,\n      };\n    }\n\n    let {\n      elements: nextElements,\n      appState: nextAppState,\n    } = deleteSelectedElements(elements, appState);\n    fixBindingsAfterDeletion(\n      nextElements,\n      elements.filter(({ id }) => appState.selectedElementIds[id]),\n    );\n\n    nextAppState = handleGroupEditingState(nextAppState, nextElements);\n\n    return {\n      elements: nextElements,\n      appState: {\n        ...nextAppState,\n        elementType: \"selection\",\n        multiElement: null,\n      },\n      commitToHistory: isSomeElementSelected(\n        getNonDeletedElements(elements),\n        appState,\n      ),\n    };\n  },\n  contextItemLabel: \"labels.delete\",\n  keyTest: (event) => event.key === KEYS.BACKSPACE || event.key === KEYS.DELETE,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"labels.delete\")}\n      aria-label={t(\"labels.delete\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import { bumpVersion } from \"./element/mutateElement\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { getElementsInGroup } from \"./groups\";\nimport { AppState } from \"./types\";\nimport { findIndex, findLastIndex } from \"./utils\";\n\n/**\n * Returns indices of elements to move based on selected elements.\n * Includes contiguous deleted elements that are between two selected elements,\n *  e.g.: [0 (selected), 1 (deleted), 2 (deleted), 3 (selected)]\n */\nconst getIndicesToMove = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  let selectedIndices: number[] = [];\n  let deletedIndices: number[] = [];\n  let includeDeletedIndex = null;\n  let index = -1;\n  while (++index < elements.length) {\n    if (appState.selectedElementIds[elements[index].id]) {\n      if (deletedIndices.length) {\n        selectedIndices = selectedIndices.concat(deletedIndices);\n        deletedIndices = [];\n      }\n      selectedIndices.push(index);\n      includeDeletedIndex = index + 1;\n    } else if (elements[index].isDeleted && includeDeletedIndex === index) {\n      includeDeletedIndex = index + 1;\n      deletedIndices.push(index);\n    } else {\n      deletedIndices = [];\n    }\n  }\n  return selectedIndices;\n};\n\nconst toContiguousGroups = (array: number[]) => {\n  let cursor = 0;\n  return array.reduce((acc, value, index) => {\n    if (index > 0 && array[index - 1] !== value - 1) {\n      cursor = ++cursor;\n    }\n    (acc[cursor] || (acc[cursor] = [])).push(value);\n    return acc;\n  }, [] as number[][]);\n};\n\n/**\n * Returns next candidate index that's available to be moved to. Currently that\n *  is a non-deleted element, and not inside a group (unless we're editing it).\n */\nconst getTargetIndex = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n  boundaryIndex: number,\n  direction: \"left\" | \"right\",\n) => {\n  const sourceElement = elements[boundaryIndex];\n\n  const indexFilter = (element: ExcalidrawElement) => {\n    if (element.isDeleted) {\n      return false;\n    }\n    // if we're editing group, find closest sibling irrespective of whether\n    // there's a different-group element between them (for legacy reasons)\n    if (appState.editingGroupId) {\n      return element.groupIds.includes(appState.editingGroupId);\n    }\n    return true;\n  };\n\n  const candidateIndex =\n    direction === \"left\"\n      ? findLastIndex(elements, indexFilter, Math.max(0, boundaryIndex - 1))\n      : findIndex(elements, indexFilter, boundaryIndex + 1);\n\n  const nextElement = elements[candidateIndex];\n\n  if (!nextElement) {\n    return -1;\n  }\n\n  if (appState.editingGroupId) {\n    if (\n      // candidate element is a sibling in current editing group → return\n      sourceElement?.groupIds.join(\"\") === nextElement?.groupIds.join(\"\")\n    ) {\n      return candidateIndex;\n    } else if (!nextElement?.groupIds.includes(appState.editingGroupId)) {\n      // candidate element is outside current editing group → prevent\n      return -1;\n    }\n  }\n\n  if (!nextElement.groupIds.length) {\n    return candidateIndex;\n  }\n\n  const siblingGroupId = appState.editingGroupId\n    ? nextElement.groupIds[\n        nextElement.groupIds.indexOf(appState.editingGroupId) - 1\n      ]\n    : nextElement.groupIds[nextElement.groupIds.length - 1];\n\n  const elementsInSiblingGroup = getElementsInGroup(elements, siblingGroupId);\n\n  if (elementsInSiblingGroup.length) {\n    // assumes getElementsInGroup() returned elements are sorted\n    // by zIndex (ascending)\n    return direction === \"left\"\n      ? elements.indexOf(elementsInSiblingGroup[0])\n      : elements.indexOf(\n          elementsInSiblingGroup[elementsInSiblingGroup.length - 1],\n        );\n  }\n\n  return candidateIndex;\n};\n\nconst getTargetElementsMap = (\n  elements: readonly ExcalidrawElement[],\n  indices: number[],\n) => {\n  return indices.reduce((acc, index) => {\n    const element = elements[index];\n    acc[element.id] = element;\n    return acc;\n  }, {} as Record<string, ExcalidrawElement>);\n};\n\nconst shiftElements = (\n  appState: AppState,\n  elements: readonly ExcalidrawElement[],\n  direction: \"left\" | \"right\",\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n  let groupedIndices = toContiguousGroups(indicesToMove);\n\n  if (direction === \"right\") {\n    groupedIndices = groupedIndices.reverse();\n  }\n\n  groupedIndices.forEach((indices, i) => {\n    const leadingIndex = indices[0];\n    const trailingIndex = indices[indices.length - 1];\n    const boundaryIndex = direction === \"left\" ? leadingIndex : trailingIndex;\n\n    const targetIndex = getTargetIndex(\n      appState,\n      elements,\n      boundaryIndex,\n      direction,\n    );\n\n    if (targetIndex === -1 || boundaryIndex === targetIndex) {\n      return;\n    }\n\n    const leadingElements =\n      direction === \"left\"\n        ? elements.slice(0, targetIndex)\n        : elements.slice(0, leadingIndex);\n    const targetElements = elements.slice(leadingIndex, trailingIndex + 1);\n    const displacedElements =\n      direction === \"left\"\n        ? elements.slice(targetIndex, leadingIndex)\n        : elements.slice(trailingIndex + 1, targetIndex + 1);\n    const trailingElements =\n      direction === \"left\"\n        ? elements.slice(trailingIndex + 1)\n        : elements.slice(targetIndex + 1);\n\n    elements =\n      direction === \"left\"\n        ? [\n            ...leadingElements,\n            ...targetElements,\n            ...displacedElements,\n            ...trailingElements,\n          ]\n        : [\n            ...leadingElements,\n            ...displacedElements,\n            ...targetElements,\n            ...trailingElements,\n          ];\n  });\n\n  return elements.map((element) => {\n    if (targetElementsMap[element.id]) {\n      return bumpVersion(element);\n    }\n    return element;\n  });\n};\n\nconst shiftElementsToEnd = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  direction: \"left\" | \"right\",\n) => {\n  const indicesToMove = getIndicesToMove(elements, appState);\n  const targetElementsMap = getTargetElementsMap(elements, indicesToMove);\n  const displacedElements: ExcalidrawElement[] = [];\n\n  let leadingIndex: number;\n  let trailingIndex: number;\n  if (direction === \"left\") {\n    if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      leadingIndex = elements.indexOf(groupElements[0]);\n    } else {\n      leadingIndex = 0;\n    }\n\n    trailingIndex = indicesToMove[indicesToMove.length - 1];\n  } else {\n    if (appState.editingGroupId) {\n      const groupElements = getElementsInGroup(\n        elements,\n        appState.editingGroupId,\n      );\n      if (!groupElements.length) {\n        return elements;\n      }\n      trailingIndex = elements.indexOf(groupElements[groupElements.length - 1]);\n    } else {\n      trailingIndex = elements.length - 1;\n    }\n\n    leadingIndex = indicesToMove[0];\n  }\n\n  for (let index = leadingIndex; index < trailingIndex + 1; index++) {\n    if (!indicesToMove.includes(index)) {\n      displacedElements.push(elements[index]);\n    }\n  }\n\n  const targetElements = Object.values(targetElementsMap).map((element) => {\n    return bumpVersion(element);\n  });\n\n  const leadingElements = elements.slice(0, leadingIndex);\n  const trailingElements = elements.slice(trailingIndex + 1);\n\n  return direction === \"left\"\n    ? [\n        ...leadingElements,\n        ...targetElements,\n        ...displacedElements,\n        ...trailingElements,\n      ]\n    : [\n        ...leadingElements,\n        ...displacedElements,\n        ...targetElements,\n        ...trailingElements,\n      ];\n};\n\n// public API\n// -----------------------------------------------------------------------------\n\nexport const moveOneLeft = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElements(appState, elements, \"left\");\n};\n\nexport const moveOneRight = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElements(appState, elements, \"right\");\n};\n\nexport const moveAllLeft = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsToEnd(elements, appState, \"left\");\n};\n\nexport const moveAllRight = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  return shiftElementsToEnd(elements, appState, \"right\");\n};\n","import React from \"react\";\nimport {\n  moveOneLeft,\n  moveOneRight,\n  moveAllLeft,\n  moveAllRight,\n} from \"../zindex\";\nimport { KEYS, isDarwin, CODES } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport {\n  SendBackwardIcon,\n  BringToFrontIcon,\n  SendToBackIcon,\n  BringForwardIcon,\n} from \"../components/icons\";\n\nexport const actionSendBackward = register({\n  name: \"sendBackward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendBackward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendBackward\")} — ${getShortcutKey(\"CtrlOrCmd+[\")}`}\n    >\n      <SendBackwardIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionBringForward = register({\n  name: \"bringForward\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveOneRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringForward\",\n  keyPriority: 40,\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    !event.shiftKey &&\n    event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.bringForward\")} — ${getShortcutKey(\"CtrlOrCmd+]\")}`}\n    >\n      <BringForwardIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionSendToBack = register({\n  name: \"sendToBack\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllLeft(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.sendToBack\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_LEFT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_LEFT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.sendToBack\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+[\")\n      }`}\n    >\n      <SendToBackIcon theme={appState.theme} />\n    </button>\n  ),\n});\n\nexport const actionBringToFront = register({\n  name: \"bringToFront\",\n  perform: (elements, appState) => {\n    return {\n      elements: moveAllRight(elements, appState),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.bringToFront\",\n  keyTest: (event) =>\n    isDarwin\n      ? event[KEYS.CTRL_OR_CMD] &&\n        event.altKey &&\n        event.code === CODES.BRACKET_RIGHT\n      : event[KEYS.CTRL_OR_CMD] &&\n        event.shiftKey &&\n        event.code === CODES.BRACKET_RIGHT,\n  PanelComponent: ({ updateData, appState }) => (\n    <button\n      type=\"button\"\n      className=\"zIndexButton\"\n      onClick={(event) => updateData(null)}\n      title={`${t(\"labels.bringToFront\")} — ${\n        isDarwin\n          ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n          : getShortcutKey(\"CtrlOrCmd+Shift+]\")\n      }`}\n    >\n      <BringToFrontIcon theme={appState.theme} />\n    </button>\n  ),\n});\n","import { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { selectGroupsForSelectedElements } from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\n\nexport const actionSelectAll = register({\n  name: \"selectAll\",\n  perform: (elements, appState) => {\n    if (appState.editingLinearElement) {\n      return false;\n    }\n    return {\n      appState: selectGroupsForSelectedElements(\n        {\n          ...appState,\n          editingGroupId: null,\n          selectedElementIds: elements.reduce((map, element) => {\n            if (!element.isDeleted) {\n              map[element.id] = true;\n            }\n            return map;\n          }, {} as any),\n        },\n        getNonDeletedElements(elements),\n      ),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.selectAll\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.A,\n});\n","import React from \"react\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { duplicateElement, getNonDeletedElements } from \"../element\";\nimport { isSomeElementSelected } from \"../scene\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { clone } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport {\n  selectGroupsForSelectedElements,\n  getSelectedGroupForElement,\n  getElementsInGroup,\n} from \"../groups\";\nimport { AppState } from \"../types\";\nimport { fixBindingsAfterDuplication } from \"../element/binding\";\nimport { ActionResult } from \"./types\";\nimport { GRID_SIZE } from \"../constants\";\n\nexport const actionDuplicateSelection = register({\n  name: \"duplicateSelection\",\n  perform: (elements, appState) => {\n    // duplicate point if selected while editing multi-point element\n    if (appState.editingLinearElement) {\n      const { activePointIndex, elementId } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n      if (!element || activePointIndex === null) {\n        return false;\n      }\n      const { points } = element;\n      const selectedPoint = points[activePointIndex];\n      const nextPoint = points[activePointIndex + 1];\n      mutateElement(element, {\n        points: [\n          ...points.slice(0, activePointIndex + 1),\n          nextPoint\n            ? [\n                (selectedPoint[0] + nextPoint[0]) / 2,\n                (selectedPoint[1] + nextPoint[1]) / 2,\n              ]\n            : [selectedPoint[0] + 30, selectedPoint[1] + 30],\n          ...points.slice(activePointIndex + 1),\n        ],\n      });\n      return {\n        appState: {\n          ...appState,\n          editingLinearElement: {\n            ...appState.editingLinearElement,\n            activePointIndex: activePointIndex + 1,\n          },\n        },\n        elements,\n        commitToHistory: true,\n      };\n    }\n\n    return {\n      ...duplicateElements(elements, appState),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.duplicateSelection\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.D,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={clone}\n      title={`${t(\"labels.duplicateSelection\")} — ${getShortcutKey(\n        \"CtrlOrCmd+D\",\n      )}`}\n      aria-label={t(\"labels.duplicateSelection\")}\n      onClick={() => updateData(null)}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nconst duplicateElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n): Partial<ActionResult> => {\n  const groupIdMap = new Map();\n  const newElements: ExcalidrawElement[] = [];\n  const oldElements: ExcalidrawElement[] = [];\n  const oldIdToDuplicatedId = new Map();\n\n  const duplicateAndOffsetElement = (element: ExcalidrawElement) => {\n    const newElement = duplicateElement(\n      appState.editingGroupId,\n      groupIdMap,\n      element,\n      {\n        x: element.x + GRID_SIZE / 2,\n        y: element.y + GRID_SIZE / 2,\n      },\n    );\n    oldIdToDuplicatedId.set(element.id, newElement.id);\n    oldElements.push(element);\n    newElements.push(newElement);\n    return newElement;\n  };\n\n  const finalElements: ExcalidrawElement[] = [];\n\n  let index = 0;\n  while (index < elements.length) {\n    const element = elements[index];\n    if (appState.selectedElementIds[element.id]) {\n      if (element.groupIds.length) {\n        const groupId = getSelectedGroupForElement(appState, element);\n        // if group selected, duplicate it atomically\n        if (groupId) {\n          const groupElements = getElementsInGroup(elements, groupId);\n          finalElements.push(\n            ...groupElements,\n            ...groupElements.map((element) =>\n              duplicateAndOffsetElement(element),\n            ),\n          );\n          index = index + groupElements.length;\n          continue;\n        }\n      }\n      finalElements.push(element, duplicateAndOffsetElement(element));\n    } else {\n      finalElements.push(element);\n    }\n    index++;\n  }\n\n  fixBindingsAfterDuplication(finalElements, oldElements, oldIdToDuplicatedId);\n\n  return {\n    elements: finalElements,\n    appState: selectGroupsForSelectedElements(\n      {\n        ...appState,\n        selectedGroupIds: {},\n        selectedElementIds: newElements.reduce((acc, element) => {\n          acc[element.id] = true;\n          return acc;\n        }, {} as any),\n      },\n      getNonDeletedElements(finalElements),\n    ),\n  };\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\n\n// TODO: It might be \"clever\" to add option.icon to the existing component <ButtonSelect />\nexport const ButtonIconSelect = <T extends Object>({\n  options,\n  value,\n  onChange,\n  group,\n}: {\n  options: { value: T; text: string; icon: JSX.Element }[];\n  value: T | null;\n  onChange: (value: T) => void;\n  group: string;\n}) => (\n  <div className=\"buttonList buttonListIcon\">\n    {options.map((option) => (\n      <label\n        key={option.text}\n        className={clsx({ active: value === option.value })}\n        title={option.text}\n      >\n        <input\n          type=\"radio\"\n          name={group}\n          onChange={() => onChange(option.value)}\n          checked={value === option.value}\n        />\n        {option.icon}\n      </label>\n    ))}\n  </div>\n);\n","import React, { useLayoutEffect, useRef, useEffect } from \"react\";\nimport \"./Popover.scss\";\nimport { unstable_batchedUpdates } from \"react-dom\";\n\ntype Props = {\n  top?: number;\n  left?: number;\n  children?: React.ReactNode;\n  onCloseRequest?(event: PointerEvent): void;\n  fitInViewport?: boolean;\n};\n\nexport const Popover = ({\n  children,\n  left,\n  top,\n  onCloseRequest,\n  fitInViewport = false,\n}: Props) => {\n  const popoverRef = useRef<HTMLDivElement>(null);\n\n  // ensure the popover doesn't overflow the viewport\n  useLayoutEffect(() => {\n    if (fitInViewport && popoverRef.current) {\n      const element = popoverRef.current;\n      const { x, y, width, height } = element.getBoundingClientRect();\n\n      const viewportWidth = window.innerWidth;\n      if (x + width > viewportWidth) {\n        element.style.left = `${viewportWidth - width}px`;\n      }\n      const viewportHeight = window.innerHeight;\n      if (y + height > viewportHeight) {\n        element.style.top = `${viewportHeight - height}px`;\n      }\n    }\n  }, [fitInViewport]);\n\n  useEffect(() => {\n    if (onCloseRequest) {\n      const handler = (event: PointerEvent) => {\n        if (!popoverRef.current?.contains(event.target as Node)) {\n          unstable_batchedUpdates(() => onCloseRequest(event));\n        }\n      };\n      document.addEventListener(\"pointerdown\", handler, false);\n      return () => document.removeEventListener(\"pointerdown\", handler, false);\n    }\n  }, [onCloseRequest]);\n\n  return (\n    <div className=\"popover\" style={{ top, left }} ref={popoverRef}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\nimport { isTransparent } from \"../utils\";\n\nimport \"./ColorPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { t, getLanguage } from \"../i18n\";\nimport { isWritableElement } from \"../utils\";\nimport colors from \"../colors\";\n\nconst isValidColor = (color: string) => {\n  const style = new Option().style;\n  style.color = color;\n  return !!style.color;\n};\n\nconst getColor = (color: string): string | null => {\n  if (isTransparent(color)) {\n    return color;\n  }\n\n  return isValidColor(color)\n    ? color\n    : isValidColor(`#${color}`)\n    ? `#${color}`\n    : null;\n};\n\n// This is a narrow reimplementation of the awesome react-color Twitter component\n// https://github.com/casesandberg/react-color/blob/master/src/components/twitter/Twitter.js\n\n// Unfortunately, we can't detect keyboard layout in the browser. So this will\n// only work well for QWERTY but not AZERTY or others...\nconst keyBindings = [\n  [\"1\", \"2\", \"3\", \"4\", \"5\"],\n  [\"q\", \"w\", \"e\", \"r\", \"t\"],\n  [\"a\", \"s\", \"d\", \"f\", \"g\"],\n].flat();\n\nconst Picker = ({\n  colors,\n  color,\n  onChange,\n  onClose,\n  label,\n  showInput = true,\n  type,\n}: {\n  colors: string[];\n  color: string | null;\n  onChange: (color: string) => void;\n  onClose: () => void;\n  label: string;\n  showInput: boolean;\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n}) => {\n  const firstItem = React.useRef<HTMLButtonElement>();\n  const activeItem = React.useRef<HTMLButtonElement>();\n  const gallery = React.useRef<HTMLDivElement>();\n  const colorInput = React.useRef<HTMLInputElement>();\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (activeItem.current) {\n      activeItem.current.focus();\n    } else if (colorInput.current) {\n      colorInput.current.focus();\n    } else if (gallery.current) {\n      gallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.TAB) {\n      const { activeElement } = document;\n      if (event.shiftKey) {\n        if (activeElement === firstItem.current) {\n          colorInput.current?.focus();\n          event.preventDefault();\n        }\n      } else if (activeElement === colorInput.current) {\n        firstItem.current?.focus();\n        event.preventDefault();\n      }\n    } else if (isArrowKey(event.key)) {\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        gallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = gallery!.current!.children.length - (showInput ? 1 : 0);\n        const nextIndex =\n          event.key === (isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT)\n            ? (index + 1) % length\n            : event.key === (isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT)\n            ? (length + index - 1) % length\n            : event.key === KEYS.ARROW_DOWN\n            ? (index + 5) % length\n            : event.key === KEYS.ARROW_UP\n            ? (length + index - 5) % length\n            : index;\n        (gallery!.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (\n      keyBindings.includes(event.key.toLowerCase()) &&\n      !isWritableElement(event.target)\n    ) {\n      const index = keyBindings.indexOf(event.key.toLowerCase());\n      (gallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  return (\n    <div\n      className={`color-picker color-picker-type-${type}`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={t(\"labels.colorPicker\")}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"color-picker-triangle color-picker-triangle-shadow\"></div>\n      <div className=\"color-picker-triangle\"></div>\n      <div\n        className=\"color-picker-content\"\n        ref={(el) => {\n          if (el) {\n            gallery.current = el;\n          }\n        }}\n        tabIndex={0}\n      >\n        {colors.map((_color, i) => {\n          const _colorWithoutHash = _color.replace(\"#\", \"\");\n          return (\n            <button\n              className=\"color-picker-swatch\"\n              onClick={(event) => {\n                (event.currentTarget as HTMLButtonElement).focus();\n                onChange(_color);\n              }}\n              title={`${t(`colors.${_colorWithoutHash}`)}${\n                !isTransparent(_color) ? ` (${_color})` : \"\"\n              } — ${keyBindings[i].toUpperCase()}`}\n              aria-label={t(`colors.${_colorWithoutHash}`)}\n              aria-keyshortcuts={keyBindings[i]}\n              style={{ color: _color }}\n              key={_color}\n              ref={(el) => {\n                if (el && i === 0) {\n                  firstItem.current = el;\n                }\n                if (el && _color === color) {\n                  activeItem.current = el;\n                }\n              }}\n              onFocus={() => {\n                onChange(_color);\n              }}\n            >\n              {isTransparent(_color) ? (\n                <div className=\"color-picker-transparent\"></div>\n              ) : undefined}\n              <span className=\"color-picker-keybinding\">{keyBindings[i]}</span>\n            </button>\n          );\n        })}\n        {showInput && (\n          <ColorInput\n            color={color}\n            label={label}\n            onChange={(color) => {\n              onChange(color);\n            }}\n            ref={colorInput}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst ColorInput = React.forwardRef(\n  (\n    {\n      color,\n      onChange,\n      label,\n    }: {\n      color: string | null;\n      onChange: (color: string) => void;\n      label: string;\n    },\n    ref,\n  ) => {\n    const [innerValue, setInnerValue] = React.useState(color);\n    const inputRef = React.useRef(null);\n\n    React.useEffect(() => {\n      setInnerValue(color);\n    }, [color]);\n\n    React.useImperativeHandle(ref, () => inputRef.current);\n\n    const changeColor = React.useCallback(\n      (inputValue: string) => {\n        const value = inputValue.toLowerCase();\n        const color = getColor(value);\n        if (color) {\n          onChange(color);\n        }\n        setInnerValue(value);\n      },\n      [onChange],\n    );\n\n    return (\n      <label className=\"color-input-container\">\n        <div className=\"color-picker-hash\">#</div>\n        <input\n          spellCheck={false}\n          className=\"color-picker-input\"\n          aria-label={label}\n          onChange={(event) => changeColor(event.target.value)}\n          value={(innerValue || \"\").replace(/^#/, \"\")}\n          onBlur={() => setInnerValue(color)}\n          ref={inputRef}\n        />\n      </label>\n    );\n  },\n);\n\nexport const ColorPicker = ({\n  type,\n  color,\n  onChange,\n  label,\n  isActive,\n  setActive,\n}: {\n  type: \"canvasBackground\" | \"elementBackground\" | \"elementStroke\";\n  color: string | null;\n  onChange: (color: string) => void;\n  label: string;\n  isActive: boolean;\n  setActive: (active: boolean) => void;\n}) => {\n  const pickerButton = React.useRef<HTMLButtonElement>(null);\n\n  return (\n    <div>\n      <div className=\"color-picker-control-container\">\n        <button\n          className=\"color-picker-label-swatch\"\n          aria-label={label}\n          style={color ? { \"--swatch-color\": color } : undefined}\n          onClick={() => setActive(!isActive)}\n          ref={pickerButton}\n        />\n        <ColorInput\n          color={color}\n          label={label}\n          onChange={(color) => {\n            onChange(color);\n          }}\n        />\n      </div>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <Popover\n            onCloseRequest={(event) =>\n              event.target !== pickerButton.current && setActive(false)\n            }\n          >\n            <Picker\n              colors={colors[type]}\n              color={color || null}\n              onChange={(changedColor) => {\n                onChange(changedColor);\n              }}\n              onClose={() => {\n                setActive(false);\n                pickerButton.current?.focus();\n              }}\n              label={label}\n              showInput={false}\n              type={type}\n            />\n          </Popover>\n        ) : null}\n      </React.Suspense>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"./Popover\";\n\nimport \"./IconPicker.scss\";\nimport { isArrowKey, KEYS } from \"../keys\";\nimport { getLanguage } from \"../i18n\";\n\nfunction Picker<T>({\n  options,\n  value,\n  label,\n  onChange,\n  onClose,\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  onClose: () => void;\n}) {\n  const rFirstItem = React.useRef<HTMLButtonElement>();\n  const rActiveItem = React.useRef<HTMLButtonElement>();\n  const rGallery = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    // After the component is first mounted focus on first input\n    if (rActiveItem.current) {\n      rActiveItem.current.focus();\n    } else if (rGallery.current) {\n      rGallery.current.focus();\n    }\n  }, []);\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const pressedOption = options.find(\n      (option) => option.keyBinding === event.key.toLowerCase(),\n    )!;\n\n    if (!(event.metaKey || event.altKey || event.ctrlKey) && pressedOption) {\n      // Keybinding navigation\n      const index = options.indexOf(pressedOption);\n      (rGallery!.current!.children![index] as any).focus();\n      event.preventDefault();\n    } else if (event.key === KEYS.TAB) {\n      // Tab navigation cycle through options. If the user tabs\n      // away from the picker, close the picker. We need to use\n      // a timeout here to let the stack clear before checking.\n      setTimeout(() => {\n        const active = rActiveItem.current;\n        const docActive = document.activeElement;\n        if (active !== docActive) {\n          onClose();\n        }\n      }, 0);\n    } else if (isArrowKey(event.key)) {\n      // Arrow navigation\n      const { activeElement } = document;\n      const isRTL = getLanguage().rtl;\n      const index = Array.prototype.indexOf.call(\n        rGallery!.current!.children,\n        activeElement,\n      );\n      if (index !== -1) {\n        const length = options.length;\n        let nextIndex = index;\n\n        switch (event.key) {\n          // Select the next option\n          case isRTL ? KEYS.ARROW_LEFT : KEYS.ARROW_RIGHT:\n          case KEYS.ARROW_DOWN: {\n            nextIndex = (index + 1) % length;\n            break;\n          }\n          // Select the previous option\n          case isRTL ? KEYS.ARROW_RIGHT : KEYS.ARROW_LEFT:\n          case KEYS.ARROW_UP: {\n            nextIndex = (length + index - 1) % length;\n            break;\n          }\n        }\n\n        (rGallery.current!.children![nextIndex] as any).focus();\n      }\n      event.preventDefault();\n    } else if (event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) {\n      // Close on escape or enter\n      event.preventDefault();\n      onClose();\n    }\n    event.nativeEvent.stopImmediatePropagation();\n    event.stopPropagation();\n  };\n\n  return (\n    <div\n      className={`picker`}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      aria-label={label}\n      onKeyDown={handleKeyDown}\n    >\n      <div className=\"picker-content\" ref={rGallery}>\n        {options.map((option, i) => (\n          <button\n            className=\"picker-option\"\n            onClick={(event) => {\n              (event.currentTarget as HTMLButtonElement).focus();\n              onChange(option.value);\n            }}\n            title={`${option.text} — ${option.keyBinding.toUpperCase()}`}\n            aria-label={option.text || \"none\"}\n            aria-keyshortcuts={option.keyBinding}\n            key={option.text}\n            ref={(el) => {\n              if (el && i === 0) {\n                rFirstItem.current = el;\n              }\n              if (el && option.value === value) {\n                rActiveItem.current = el;\n              }\n            }}\n            onFocus={() => {\n              onChange(option.value);\n            }}\n          >\n            {option.icon}\n            <span className=\"picker-keybinding\">{option.keyBinding}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function IconPicker<T>({\n  value,\n  label,\n  options,\n  onChange,\n  group = \"\",\n}: {\n  label: string;\n  value: T;\n  options: { value: T; text: string; icon: JSX.Element; keyBinding: string }[];\n  onChange: (value: T) => void;\n  group?: string;\n}) {\n  const [isActive, setActive] = React.useState(false);\n  const rPickerButton = React.useRef<any>(null);\n  const isRTL = getLanguage().rtl;\n\n  return (\n    <label className={\"picker-container\"}>\n      <button\n        name={group}\n        className={isActive ? \"active\" : \"\"}\n        aria-label={label}\n        onClick={() => setActive(!isActive)}\n        ref={rPickerButton}\n      >\n        {options.find((option) => option.value === value)?.icon}\n      </button>\n      <React.Suspense fallback=\"\">\n        {isActive ? (\n          <>\n            <Popover\n              onCloseRequest={(event) =>\n                event.target !== rPickerButton.current && setActive(false)\n              }\n              {...(isRTL ? { right: 5.5 } : { left: -5.5 })}\n            >\n              <Picker\n                options={options}\n                value={value}\n                label={label}\n                onChange={onChange}\n                onClose={() => {\n                  setActive(false);\n                  rPickerButton.current?.focus();\n                }}\n              />\n            </Popover>\n            <div className=\"picker-triangle\" />\n          </>\n        ) : null}\n      </React.Suspense>\n    </label>\n  );\n}\n","import React from \"react\";\nimport { AppState } from \"../../src/types\";\nimport { ButtonIconSelect } from \"../components/ButtonIconSelect\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { IconPicker } from \"../components/IconPicker\";\nimport {\n  ArrowheadArrowIcon,\n  ArrowheadBarIcon,\n  ArrowheadDotIcon,\n  ArrowheadNoneIcon,\n  EdgeRoundIcon,\n  EdgeSharpIcon,\n  FillCrossHatchIcon,\n  FillHachureIcon,\n  FillSolidIcon,\n  FontFamilyCodeIcon,\n  FontFamilyHandDrawnIcon,\n  FontFamilyNormalIcon,\n  FontSizeExtraLargeIcon,\n  FontSizeLargeIcon,\n  FontSizeMediumIcon,\n  FontSizeSmallIcon,\n  SloppinessArchitectIcon,\n  SloppinessArtistIcon,\n  SloppinessCartoonistIcon,\n  StrokeStyleDashedIcon,\n  StrokeStyleDottedIcon,\n  StrokeStyleSolidIcon,\n  StrokeWidthIcon,\n  TextAlignCenterIcon,\n  TextAlignLeftIcon,\n  TextAlignRightIcon,\n} from \"../components/icons\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  FONT_FAMILY,\n} from \"../constants\";\nimport {\n  getNonDeletedElements,\n  isTextElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { isLinearElement, isLinearElementType } from \"../element/typeChecks\";\nimport {\n  Arrowhead,\n  ExcalidrawElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  FontFamilyValues,\n  TextAlign,\n} from \"../element/types\";\nimport { getLanguage, t } from \"../i18n\";\nimport { randomInteger } from \"../random\";\nimport {\n  canChangeSharpness,\n  canHaveArrowheads,\n  getCommonAttributeOfSelectedElements,\n  getTargetElements,\n  isSomeElementSelected,\n} from \"../scene\";\nimport { register } from \"./register\";\n\nconst changeProperty = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  callback: (element: ExcalidrawElement) => ExcalidrawElement,\n) => {\n  return elements.map((element) => {\n    if (\n      appState.selectedElementIds[element.id] ||\n      element.id === appState.editingElement?.id\n    ) {\n      return callback(element);\n    }\n    return element;\n  });\n};\n\nconst getFormValue = function <T>(\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n  getAttribute: (element: ExcalidrawElement) => T,\n  defaultValue?: T,\n): T | null {\n  const editingElement = appState.editingElement;\n  const nonDeletedElements = getNonDeletedElements(elements);\n  return (\n    (editingElement && getAttribute(editingElement)) ??\n    (isSomeElementSelected(nonDeletedElements, appState)\n      ? getCommonAttributeOfSelectedElements(\n          nonDeletedElements,\n          appState,\n          getAttribute,\n        )\n      : defaultValue) ??\n    null\n  );\n};\n\nexport const actionChangeStrokeColor = register({\n  name: \"changeStrokeColor\",\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemStrokeColor && {\n        elements: changeProperty(elements, appState, (el) =>\n          newElementWith(el, {\n            strokeColor: value.currentItemStrokeColor,\n          }),\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemStrokeColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.stroke\")}</h3>\n      <ColorPicker\n        type=\"elementStroke\"\n        label={t(\"labels.stroke\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeColor,\n          appState.currentItemStrokeColor,\n        )}\n        onChange={(color) => updateData({ currentItemStrokeColor: color })}\n        isActive={appState.openPopup === \"strokeColorPicker\"}\n        setActive={(active) =>\n          updateData({ openPopup: active ? \"strokeColorPicker\" : null })\n        }\n      />\n    </>\n  ),\n});\n\nexport const actionChangeBackgroundColor = register({\n  name: \"changeBackgroundColor\",\n  perform: (elements, appState, value) => {\n    return {\n      ...(value.currentItemBackgroundColor && {\n        elements: changeProperty(elements, appState, (el) =>\n          newElementWith(el, {\n            backgroundColor: value.currentItemBackgroundColor,\n          }),\n        ),\n      }),\n      appState: {\n        ...appState,\n        ...value,\n      },\n      commitToHistory: !!value.currentItemBackgroundColor,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <>\n      <h3 aria-hidden=\"true\">{t(\"labels.background\")}</h3>\n      <ColorPicker\n        type=\"elementBackground\"\n        label={t(\"labels.background\")}\n        color={getFormValue(\n          elements,\n          appState,\n          (element) => element.backgroundColor,\n          appState.currentItemBackgroundColor,\n        )}\n        onChange={(color) => updateData({ currentItemBackgroundColor: color })}\n        isActive={appState.openPopup === \"backgroundColorPicker\"}\n        setActive={(active) =>\n          updateData({ openPopup: active ? \"backgroundColorPicker\" : null })\n        }\n      />\n    </>\n  ),\n});\n\nexport const actionChangeFillStyle = register({\n  name: \"changeFillStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          fillStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemFillStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fill\")}</legend>\n      <ButtonIconSelect\n        options={[\n          {\n            value: \"hachure\",\n            text: t(\"labels.hachure\"),\n            icon: <FillHachureIcon theme={appState.theme} />,\n          },\n          {\n            value: \"cross-hatch\",\n            text: t(\"labels.crossHatch\"),\n            icon: <FillCrossHatchIcon theme={appState.theme} />,\n          },\n          {\n            value: \"solid\",\n            text: t(\"labels.solid\"),\n            icon: <FillSolidIcon theme={appState.theme} />,\n          },\n        ]}\n        group=\"fill\"\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.fillStyle,\n          appState.currentItemFillStyle,\n        )}\n        onChange={(value) => {\n          updateData(value);\n        }}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeWidth = register({\n  name: \"changeStrokeWidth\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeWidth: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeWidth: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeWidth\")}</legend>\n      <ButtonIconSelect\n        group=\"stroke-width\"\n        options={[\n          {\n            value: 1,\n            text: t(\"labels.thin\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={2} />,\n          },\n          {\n            value: 2,\n            text: t(\"labels.bold\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={6} />,\n          },\n          {\n            value: 4,\n            text: t(\"labels.extraBold\"),\n            icon: <StrokeWidthIcon theme={appState.theme} strokeWidth={10} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeWidth,\n          appState.currentItemStrokeWidth,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSloppiness = register({\n  name: \"changeSloppiness\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          seed: randomInteger(),\n          roughness: value,\n        }),\n      ),\n      appState: { ...appState, currentItemRoughness: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.sloppiness\")}</legend>\n      <ButtonIconSelect\n        group=\"sloppiness\"\n        options={[\n          {\n            value: 0,\n            text: t(\"labels.architect\"),\n            icon: <SloppinessArchitectIcon theme={appState.theme} />,\n          },\n          {\n            value: 1,\n            text: t(\"labels.artist\"),\n            icon: <SloppinessArtistIcon theme={appState.theme} />,\n          },\n          {\n            value: 2,\n            text: t(\"labels.cartoonist\"),\n            icon: <SloppinessCartoonistIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.roughness,\n          appState.currentItemRoughness,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeStrokeStyle = register({\n  name: \"changeStrokeStyle\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeStyle: value,\n        }),\n      ),\n      appState: { ...appState, currentItemStrokeStyle: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.strokeStyle\")}</legend>\n      <ButtonIconSelect\n        group=\"strokeStyle\"\n        options={[\n          {\n            value: \"solid\",\n            text: t(\"labels.strokeStyle_solid\"),\n            icon: <StrokeStyleSolidIcon theme={appState.theme} />,\n          },\n          {\n            value: \"dashed\",\n            text: t(\"labels.strokeStyle_dashed\"),\n            icon: <StrokeStyleDashedIcon theme={appState.theme} />,\n          },\n          {\n            value: \"dotted\",\n            text: t(\"labels.strokeStyle_dotted\"),\n            icon: <StrokeStyleDottedIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeStyle,\n          appState.currentItemStrokeStyle,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeOpacity = register({\n  name: \"changeOpacity\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          opacity: value,\n        }),\n      ),\n      appState: { ...appState, currentItemOpacity: value },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <label className=\"control-label\">\n      {t(\"labels.opacity\")}\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        step=\"10\"\n        onChange={(event) => updateData(+event.target.value)}\n        onWheel={(event) => {\n          event.stopPropagation();\n          const target = event.target as HTMLInputElement;\n          const STEP = 10;\n          const MAX = 100;\n          const MIN = 0;\n          const value = +target.value;\n\n          if (event.deltaY < 0 && value < MAX) {\n            updateData(value + STEP);\n          } else if (event.deltaY > 0 && value > MIN) {\n            updateData(value - STEP);\n          }\n        }}\n        value={\n          getFormValue(\n            elements,\n            appState,\n            (element) => element.opacity,\n            appState.currentItemOpacity,\n          ) ?? undefined\n        }\n      />\n    </label>\n  ),\n});\n\nexport const actionChangeFontSize = register({\n  name: \"changeFontSize\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontSize: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontSize: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.fontSize\")}</legend>\n      <ButtonIconSelect\n        group=\"font-size\"\n        options={[\n          {\n            value: 16,\n            text: t(\"labels.small\"),\n            icon: <FontSizeSmallIcon theme={appState.theme} />,\n          },\n          {\n            value: 20,\n            text: t(\"labels.medium\"),\n            icon: <FontSizeMediumIcon theme={appState.theme} />,\n          },\n          {\n            value: 28,\n            text: t(\"labels.large\"),\n            icon: <FontSizeLargeIcon theme={appState.theme} />,\n          },\n          {\n            value: 36,\n            text: t(\"labels.veryLarge\"),\n            icon: <FontSizeExtraLargeIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.fontSize,\n          appState.currentItemFontSize || DEFAULT_FONT_SIZE,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeFontFamily = register({\n  name: \"changeFontFamily\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            fontFamily: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemFontFamily: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const options: {\n      value: FontFamilyValues;\n      text: string;\n      icon: JSX.Element;\n    }[] = [\n      {\n        value: FONT_FAMILY.Virgil,\n        text: t(\"labels.handDrawn\"),\n        icon: <FontFamilyHandDrawnIcon theme={appState.theme} />,\n      },\n      {\n        value: FONT_FAMILY.Helvetica,\n        text: t(\"labels.normal\"),\n        icon: <FontFamilyNormalIcon theme={appState.theme} />,\n      },\n      {\n        value: FONT_FAMILY.Cascadia,\n        text: t(\"labels.code\"),\n        icon: <FontFamilyCodeIcon theme={appState.theme} />,\n      },\n    ];\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.fontFamily\")}</legend>\n        <ButtonIconSelect<FontFamilyValues | false>\n          group=\"font-family\"\n          options={options}\n          value={getFormValue(\n            elements,\n            appState,\n            (element) => isTextElement(element) && element.fontFamily,\n            appState.currentItemFontFamily || DEFAULT_FONT_FAMILY,\n          )}\n          onChange={(value) => updateData(value)}\n        />\n      </fieldset>\n    );\n  },\n});\n\nexport const actionChangeTextAlign = register({\n  name: \"changeTextAlign\",\n  perform: (elements, appState, value) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isTextElement(el)) {\n          const element: ExcalidrawTextElement = newElementWith(el, {\n            textAlign: value,\n          });\n          redrawTextBoundingBox(element);\n          return element;\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        currentItemTextAlign: value,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.textAlign\")}</legend>\n      <ButtonIconSelect<TextAlign | false>\n        group=\"text-align\"\n        options={[\n          {\n            value: \"left\",\n            text: t(\"labels.left\"),\n            icon: <TextAlignLeftIcon theme={appState.theme} />,\n          },\n          {\n            value: \"center\",\n            text: t(\"labels.center\"),\n            icon: <TextAlignCenterIcon theme={appState.theme} />,\n          },\n          {\n            value: \"right\",\n            text: t(\"labels.right\"),\n            icon: <TextAlignRightIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => isTextElement(element) && element.textAlign,\n          appState.currentItemTextAlign,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeSharpness = register({\n  name: \"changeSharpness\",\n  perform: (elements, appState, value) => {\n    const targetElements = getTargetElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    const shouldUpdateForNonLinearElements = targetElements.length\n      ? targetElements.every((el) => !isLinearElement(el))\n      : !isLinearElementType(appState.elementType);\n    const shouldUpdateForLinearElements = targetElements.length\n      ? targetElements.every(isLinearElement)\n      : isLinearElementType(appState.elementType);\n    return {\n      elements: changeProperty(elements, appState, (el) =>\n        newElementWith(el, {\n          strokeSharpness: value,\n        }),\n      ),\n      appState: {\n        ...appState,\n        currentItemStrokeSharpness: shouldUpdateForNonLinearElements\n          ? value\n          : appState.currentItemStrokeSharpness,\n        currentItemLinearStrokeSharpness: shouldUpdateForLinearElements\n          ? value\n          : appState.currentItemLinearStrokeSharpness,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <fieldset>\n      <legend>{t(\"labels.edges\")}</legend>\n      <ButtonIconSelect\n        group=\"edges\"\n        options={[\n          {\n            value: \"sharp\",\n            text: t(\"labels.sharp\"),\n            icon: <EdgeSharpIcon theme={appState.theme} />,\n          },\n          {\n            value: \"round\",\n            text: t(\"labels.round\"),\n            icon: <EdgeRoundIcon theme={appState.theme} />,\n          },\n        ]}\n        value={getFormValue(\n          elements,\n          appState,\n          (element) => element.strokeSharpness,\n          (canChangeSharpness(appState.elementType) &&\n            (isLinearElementType(appState.elementType)\n              ? appState.currentItemLinearStrokeSharpness\n              : appState.currentItemStrokeSharpness)) ||\n            null,\n        )}\n        onChange={(value) => updateData(value)}\n      />\n    </fieldset>\n  ),\n});\n\nexport const actionChangeArrowhead = register({\n  name: \"changeArrowhead\",\n  perform: (\n    elements,\n    appState,\n    value: { position: \"start\" | \"end\"; type: Arrowhead },\n  ) => {\n    return {\n      elements: changeProperty(elements, appState, (el) => {\n        if (isLinearElement(el)) {\n          const { position, type } = value;\n\n          if (position === \"start\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              startArrowhead: type,\n            });\n            return element;\n          } else if (position === \"end\") {\n            const element: ExcalidrawLinearElement = newElementWith(el, {\n              endArrowhead: type,\n            });\n            return element;\n          }\n        }\n\n        return el;\n      }),\n      appState: {\n        ...appState,\n        [value.position === \"start\"\n          ? \"currentItemStartArrowhead\"\n          : \"currentItemEndArrowhead\"]: value.type,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => {\n    const isRTL = getLanguage().rtl;\n\n    return (\n      <fieldset>\n        <legend>{t(\"labels.arrowheads\")}</legend>\n        <div className=\"iconSelectList\">\n          <IconPicker\n            label=\"arrowhead_start\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                icon: <ArrowheadNoneIcon theme={appState.theme} />,\n                keyBinding: \"q\",\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                icon: (\n                  <ArrowheadArrowIcon theme={appState.theme} flip={!isRTL} />\n                ),\n                keyBinding: \"w\",\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                icon: <ArrowheadBarIcon theme={appState.theme} flip={!isRTL} />,\n                keyBinding: \"e\",\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                icon: <ArrowheadDotIcon theme={appState.theme} flip={!isRTL} />,\n                keyBinding: \"r\",\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.startArrowhead\n                  : appState.currentItemStartArrowhead,\n              appState.currentItemStartArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"start\", type: value })}\n          />\n          <IconPicker\n            label=\"arrowhead_end\"\n            group=\"arrowheads\"\n            options={[\n              {\n                value: null,\n                text: t(\"labels.arrowhead_none\"),\n                keyBinding: \"q\",\n                icon: <ArrowheadNoneIcon theme={appState.theme} />,\n              },\n              {\n                value: \"arrow\",\n                text: t(\"labels.arrowhead_arrow\"),\n                keyBinding: \"w\",\n                icon: (\n                  <ArrowheadArrowIcon theme={appState.theme} flip={isRTL} />\n                ),\n              },\n              {\n                value: \"bar\",\n                text: t(\"labels.arrowhead_bar\"),\n                keyBinding: \"e\",\n                icon: <ArrowheadBarIcon theme={appState.theme} flip={isRTL} />,\n              },\n              {\n                value: \"dot\",\n                text: t(\"labels.arrowhead_dot\"),\n                keyBinding: \"r\",\n                icon: <ArrowheadDotIcon theme={appState.theme} flip={isRTL} />,\n              },\n            ]}\n            value={getFormValue<Arrowhead | null>(\n              elements,\n              appState,\n              (element) =>\n                isLinearElement(element) && canHaveArrowheads(element.type)\n                  ? element.endArrowhead\n                  : appState.currentItemEndArrowhead,\n              appState.currentItemEndArrowhead,\n            )}\n            onChange={(value) => updateData({ position: \"end\", type: value })}\n          />\n        </div>\n      </fieldset>\n    );\n  },\n});\n","import {\n  PointerType,\n  ExcalidrawLinearElement,\n  NonDeletedExcalidrawElement,\n  NonDeleted,\n  TextAlign,\n  ExcalidrawElement,\n  GroupId,\n  ExcalidrawBindableElement,\n  Arrowhead,\n  ChartType,\n  FontFamilyValues,\n} from \"./element/types\";\nimport { SHAPES } from \"./shapes\";\nimport { Point as RoughPoint } from \"roughjs/bin/geometry\";\nimport { LinearElementEditor } from \"./element/linearElementEditor\";\nimport { SuggestedBinding } from \"./element/binding\";\nimport { ImportedDataState } from \"./data/types\";\nimport type App from \"./components/App\";\nimport type { ResolvablePromise } from \"./utils\";\nimport { Spreadsheet } from \"./charts\";\nimport { Language } from \"./i18n\";\nimport { ClipboardData } from \"./clipboard\";\nimport { isOverScrollBars } from \"./scene\";\nimport { MaybeTransformHandleType } from \"./element/transformHandles\";\n\nexport type Point = Readonly<RoughPoint>;\n\nexport type Collaborator = {\n  pointer?: {\n    x: number;\n    y: number;\n  };\n  button?: \"up\" | \"down\";\n  selectedElementIds?: AppState[\"selectedElementIds\"];\n  username?: string | null;\n  userState?: UserIdleState;\n  color?: {\n    background: string;\n    stroke: string;\n  };\n};\n\nexport type AppState = {\n  isLoading: boolean;\n  errorMessage: string | null;\n  draggingElement: NonDeletedExcalidrawElement | null;\n  resizingElement: NonDeletedExcalidrawElement | null;\n  multiElement: NonDeleted<ExcalidrawLinearElement> | null;\n  selectionElement: NonDeletedExcalidrawElement | null;\n  isBindingEnabled: boolean;\n  startBoundElement: NonDeleted<ExcalidrawBindableElement> | null;\n  suggestedBindings: SuggestedBinding[];\n  // element being edited, but not necessarily added to elements array yet\n  // (e.g. text element when typing into the input)\n  editingElement: NonDeletedExcalidrawElement | null;\n  editingLinearElement: LinearElementEditor | null;\n  elementType: typeof SHAPES[number][\"value\"];\n  elementLocked: boolean;\n  exportBackground: boolean;\n  exportEmbedScene: boolean;\n  exportWithDarkMode: boolean;\n  exportScale: number;\n  currentItemStrokeColor: string;\n  currentItemBackgroundColor: string;\n  currentItemFillStyle: ExcalidrawElement[\"fillStyle\"];\n  currentItemStrokeWidth: number;\n  currentItemStrokeStyle: ExcalidrawElement[\"strokeStyle\"];\n  currentItemRoughness: number;\n  currentItemOpacity: number;\n  currentItemFontFamily: FontFamilyValues;\n  currentItemFontSize: number;\n  currentItemTextAlign: TextAlign;\n  currentItemStrokeSharpness: ExcalidrawElement[\"strokeSharpness\"];\n  currentItemStartArrowhead: Arrowhead | null;\n  currentItemEndArrowhead: Arrowhead | null;\n  currentItemLinearStrokeSharpness: ExcalidrawElement[\"strokeSharpness\"];\n  viewBackgroundColor: string;\n  scrollX: number;\n  scrollY: number;\n  cursorButton: \"up\" | \"down\";\n  scrolledOutside: boolean;\n  name: string;\n  isResizing: boolean;\n  isRotating: boolean;\n  zoom: Zoom;\n  openMenu: \"canvas\" | \"shape\" | null;\n  openPopup:\n    | \"canvasColorPicker\"\n    | \"backgroundColorPicker\"\n    | \"strokeColorPicker\"\n    | null;\n  lastPointerDownWith: PointerType;\n  selectedElementIds: { [id: string]: boolean };\n  previousSelectedElementIds: { [id: string]: boolean };\n  shouldCacheIgnoreZoom: boolean;\n  showHelpDialog: boolean;\n  toastMessage: string | null;\n  zenModeEnabled: boolean;\n  theme: \"light\" | \"dark\";\n  gridSize: number | null;\n  viewModeEnabled: boolean;\n\n  /** top-most selected groups (i.e. does not include nested groups) */\n  selectedGroupIds: { [groupId: string]: boolean };\n  /** group being edited when you drill down to its constituent element\n    (e.g. when you double-click on a group's element) */\n  editingGroupId: GroupId | null;\n  width: number;\n  height: number;\n  offsetTop: number;\n  offsetLeft: number;\n\n  isLibraryOpen: boolean;\n  fileHandle: import(\"browser-fs-access\").FileSystemHandle | null;\n  collaborators: Map<string, Collaborator>;\n  showStats: boolean;\n  currentChartType: ChartType;\n  pasteDialog:\n    | {\n        shown: false;\n        data: null;\n      }\n    | {\n        shown: true;\n        data: Spreadsheet;\n      };\n};\n\nexport type NormalizedZoomValue = number & { _brand: \"normalizedZoom\" };\n\nexport type Zoom = Readonly<{\n  value: NormalizedZoomValue;\n  translation: Readonly<{\n    x: number;\n    y: number;\n  }>;\n}>;\n\nexport type PointerCoords = Readonly<{\n  x: number;\n  y: number;\n}>;\n\nexport type Gesture = {\n  pointers: Map<number, PointerCoords>;\n  lastCenter: { x: number; y: number } | null;\n  initialDistance: number | null;\n  initialScale: number | null;\n};\n\nexport declare class GestureEvent extends UIEvent {\n  readonly rotation: number;\n  readonly scale: number;\n}\n\nexport type LibraryItem = readonly NonDeleted<ExcalidrawElement>[];\nexport type LibraryItems = readonly LibraryItem[];\n\n// NOTE ready/readyPromise props are optional for host apps' sake (our own\n// implem guarantees existence)\nexport type ExcalidrawAPIRefValue =\n  | ExcalidrawImperativeAPI\n  | {\n      readyPromise?: ResolvablePromise<ExcalidrawImperativeAPI>;\n      ready?: false;\n    };\n\nexport interface ExcalidrawProps {\n  onChange?: (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n  ) => void;\n  initialData?: ImportedDataState | null | Promise<ImportedDataState | null>;\n  excalidrawRef?: ForwardRef<ExcalidrawAPIRefValue>;\n  onCollabButtonClick?: () => void;\n  isCollaborating?: boolean;\n  onPointerUpdate?: (payload: {\n    pointer: { x: number; y: number };\n    button: \"down\" | \"up\";\n    pointersMap: Gesture[\"pointers\"];\n  }) => void;\n  onPaste?: (\n    data: ClipboardData,\n    event: ClipboardEvent | null,\n  ) => Promise<boolean> | boolean;\n  renderTopRightUI?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  renderFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  langCode?: Language[\"code\"];\n  viewModeEnabled?: boolean;\n  zenModeEnabled?: boolean;\n  gridModeEnabled?: boolean;\n  libraryReturnUrl?: string;\n  theme?: \"dark\" | \"light\";\n  name?: string;\n  renderCustomStats?: (\n    elements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n  ) => JSX.Element;\n  UIOptions?: UIOptions;\n  detectScroll?: boolean;\n  handleKeyboardGlobally?: boolean;\n  onLibraryChange?: (libraryItems: LibraryItems) => void | Promise<any>;\n  autoFocus?: boolean;\n}\n\nexport type SceneData = {\n  elements?: ImportedDataState[\"elements\"];\n  appState?: ImportedDataState[\"appState\"];\n  collaborators?: Map<string, Collaborator>;\n  commitToHistory?: boolean;\n};\n\nexport enum UserIdleState {\n  ACTIVE = \"active\",\n  AWAY = \"away\",\n  IDLE = \"idle\",\n}\n\nexport type ExportOpts = {\n  saveFileToDisk?: boolean;\n  onExportToBackend?: (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n  ) => void;\n  renderCustomUI?: (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n  ) => JSX.Element;\n};\n\ntype CanvasActions = {\n  changeViewBackgroundColor?: boolean;\n  clearCanvas?: boolean;\n  export?: false | ExportOpts;\n  loadScene?: boolean;\n  saveToActiveFile?: boolean;\n  theme?: boolean;\n  saveAsImage?: boolean;\n};\n\nexport type UIOptions = {\n  canvasActions?: CanvasActions;\n};\n\nexport type AppProps = ExcalidrawProps & {\n  UIOptions: {\n    canvasActions: Required<CanvasActions> & { export: ExportOpts };\n  };\n  detectScroll: boolean;\n  handleKeyboardGlobally: boolean;\n};\n\nexport type PointerDownState = Readonly<{\n  // The first position at which pointerDown happened\n  origin: Readonly<{ x: number; y: number }>;\n  // Same as \"origin\" but snapped to the grid, if grid is on\n  originInGrid: Readonly<{ x: number; y: number }>;\n  // Scrollbar checks\n  scrollbars: ReturnType<typeof isOverScrollBars>;\n  // The previous pointer position\n  lastCoords: { x: number; y: number };\n  // map of original elements data\n  originalElements: Map<string, NonDeleted<ExcalidrawElement>>;\n  resize: {\n    // Handle when resizing, might change during the pointer interaction\n    handleType: MaybeTransformHandleType;\n    // This is determined on the initial pointer down event\n    isResizing: boolean;\n    // This is determined on the initial pointer down event\n    offset: { x: number; y: number };\n    // This is determined on the initial pointer down event\n    arrowDirection: \"origin\" | \"end\";\n    // This is a center point of selected elements determined on the initial pointer down event (for rotation only)\n    center: { x: number; y: number };\n  };\n  hit: {\n    // The element the pointer is \"hitting\", is determined on the initial\n    // pointer down event\n    element: NonDeleted<ExcalidrawElement> | null;\n    // The elements the pointer is \"hitting\", is determined on the initial\n    // pointer down event\n    allHitElements: NonDeleted<ExcalidrawElement>[];\n    // This is determined on the initial pointer down event\n    wasAddedToSelection: boolean;\n    // Whether selected element(s) were duplicated, might change during the\n    // pointer interaction\n    hasBeenDuplicated: boolean;\n    hasHitCommonBoundingBoxOfSelectedElements: boolean;\n  };\n  withCmdOrCtrl: boolean;\n  drag: {\n    // Might change during the pointer interation\n    hasOccurred: boolean;\n    // Might change during the pointer interation\n    offset: { x: number; y: number } | null;\n  };\n  // We need to have these in the state so that we can unsubscribe them\n  eventListeners: {\n    // It's defined on the initial pointer down event\n    onMove: null | ((event: PointerEvent) => void);\n    // It's defined on the initial pointer down event\n    onUp: null | ((event: PointerEvent) => void);\n    // It's defined on the initial pointer down event\n    onKeyDown: null | ((event: KeyboardEvent) => void);\n    // It's defined on the initial pointer down event\n    onKeyUp: null | ((event: KeyboardEvent) => void);\n  };\n}>;\n\nexport type ExcalidrawImperativeAPI = {\n  updateScene: InstanceType<typeof App>[\"updateScene\"];\n  resetScene: InstanceType<typeof App>[\"resetScene\"];\n  getSceneElementsIncludingDeleted: InstanceType<\n    typeof App\n  >[\"getSceneElementsIncludingDeleted\"];\n  history: {\n    clear: InstanceType<typeof App>[\"resetHistory\"];\n  };\n  scrollToContent: InstanceType<typeof App>[\"scrollToContent\"];\n  getSceneElements: InstanceType<typeof App>[\"getSceneElements\"];\n  getAppState: () => InstanceType<typeof App>[\"state\"];\n  refresh: InstanceType<typeof App>[\"refresh\"];\n  importLibrary: InstanceType<typeof App>[\"importLibraryFromUrl\"];\n  setToastMessage: InstanceType<typeof App>[\"setToastMessage\"];\n  readyPromise: ResolvablePromise<ExcalidrawImperativeAPI>;\n  ready: true;\n  id: string;\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\nimport { t } from \"../i18n\";\nimport { ToolButton } from \"./ToolButton\";\n\nexport type Appearence = \"light\" | \"dark\";\n\n// We chose to use only explicit toggle and not a third option for system value,\n// but this could be added in the future.\nexport const DarkModeToggle = (props: {\n  value: Appearence;\n  onChange: (value: Appearence) => void;\n  title?: string;\n}) => {\n  const title =\n    props.title ||\n    (props.value === \"dark\" ? t(\"buttons.lightMode\") : t(\"buttons.darkMode\"));\n\n  return (\n    <ToolButton\n      type=\"icon\"\n      icon={props.value === \"light\" ? ICONS.MOON : ICONS.SUN}\n      title={title}\n      aria-label={title}\n      onClick={() => props.onChange(props.value === \"dark\" ? \"light\" : \"dark\")}\n      data-testid=\"toggle-dark-mode\"\n    />\n  );\n};\n\nconst ICONS = {\n  SUN: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"\n      ></path>\n    </svg>\n  ),\n  MOON: (\n    <svg width=\"512\" height=\"512\" className=\"rtl-mirror\" viewBox=\"0 0 512 512\">\n      <path\n        fill=\"currentColor\"\n        d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"\n      ></path>\n    </svg>\n  ),\n};\n","import \"./Tooltip.scss\";\n\nimport React, { useEffect } from \"react\";\n\nconst getTooltipDiv = () => {\n  const existingDiv = document.querySelector<HTMLDivElement>(\n    \".excalidraw-tooltip\",\n  );\n  if (existingDiv) {\n    return existingDiv;\n  }\n  const div = document.createElement(\"div\");\n  document.body.appendChild(div);\n  div.classList.add(\"excalidraw-tooltip\");\n  return div;\n};\n\nconst updateTooltip = (\n  item: HTMLDivElement,\n  tooltip: HTMLDivElement,\n  label: string,\n  long: boolean,\n) => {\n  tooltip.classList.add(\"excalidraw-tooltip--visible\");\n  tooltip.style.minWidth = long ? \"50ch\" : \"10ch\";\n  tooltip.style.maxWidth = long ? \"50ch\" : \"15ch\";\n\n  tooltip.textContent = label;\n\n  const {\n    x: itemX,\n    bottom: itemBottom,\n    top: itemTop,\n    width: itemWidth,\n  } = item.getBoundingClientRect();\n\n  const {\n    width: labelWidth,\n    height: labelHeight,\n  } = tooltip.getBoundingClientRect();\n\n  const viewportWidth = window.innerWidth;\n  const viewportHeight = window.innerHeight;\n\n  const margin = 5;\n\n  const left = itemX + itemWidth / 2 - labelWidth / 2;\n  const offsetLeft =\n    left + labelWidth >= viewportWidth ? left + labelWidth - viewportWidth : 0;\n\n  const top = itemBottom + margin;\n  const offsetTop =\n    top + labelHeight >= viewportHeight\n      ? itemBottom - itemTop + labelHeight + margin * 2\n      : 0;\n\n  Object.assign(tooltip.style, {\n    top: `${top - offsetTop}px`,\n    left: `${left - offsetLeft}px`,\n  });\n};\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  label: string;\n  long?: boolean;\n};\n\nexport const Tooltip = ({ children, label, long = false }: TooltipProps) => {\n  useEffect(() => {\n    return () =>\n      getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\");\n  }, []);\n\n  return (\n    <div\n      className=\"excalidraw-tooltip-wrapper\"\n      onPointerEnter={(event) =>\n        updateTooltip(\n          event.currentTarget as HTMLDivElement,\n          getTooltipDiv(),\n          label,\n          long,\n        )\n      }\n      onPointerLeave={() =>\n        getTooltipDiv().classList.remove(\"excalidraw-tooltip--visible\")\n      }\n    >\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getDefaultAppState } from \"../appState\";\nimport { ColorPicker } from \"../components/ColorPicker\";\nimport { trash, zoomIn, zoomOut } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { DarkModeToggle } from \"../components/DarkModeToggle\";\nimport { ZOOM_STEP } from \"../constants\";\nimport { getCommonBounds, getNonDeletedElements } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { CODES, KEYS } from \"../keys\";\nimport { getNormalizedZoom, getSelectedElements } from \"../scene\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { getNewZoom } from \"../scene/zoom\";\nimport { AppState, NormalizedZoomValue } from \"../types\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { Tooltip } from \"../components/Tooltip\";\n\nexport const actionChangeViewBackgroundColor = register({\n  name: \"changeViewBackgroundColor\",\n  perform: (_, appState, value) => {\n    return {\n      appState: { ...appState, ...value },\n      commitToHistory: !!value.viewBackgroundColor,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => {\n    return (\n      <div style={{ position: \"relative\" }}>\n        <ColorPicker\n          label={t(\"labels.canvasBackground\")}\n          type=\"canvasBackground\"\n          color={appState.viewBackgroundColor}\n          onChange={(color) => updateData({ viewBackgroundColor: color })}\n          isActive={appState.openPopup === \"canvasColorPicker\"}\n          setActive={(active) =>\n            updateData({ openPopup: active ? \"canvasColorPicker\" : null })\n          }\n          data-testid=\"canvas-background-picker\"\n        />\n      </div>\n    );\n  },\n});\n\nexport const actionClearCanvas = register({\n  name: \"clearCanvas\",\n  perform: (elements, appState: AppState) => {\n    return {\n      elements: elements.map((element) =>\n        newElementWith(element, { isDeleted: true }),\n      ),\n      appState: {\n        ...getDefaultAppState(),\n        theme: appState.theme,\n        elementLocked: appState.elementLocked,\n        exportBackground: appState.exportBackground,\n        exportEmbedScene: appState.exportEmbedScene,\n        gridSize: appState.gridSize,\n        showStats: appState.showStats,\n        pasteDialog: appState.pasteDialog,\n      },\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={trash}\n      title={t(\"buttons.clearReset\")}\n      aria-label={t(\"buttons.clearReset\")}\n      showAriaLabel={useIsMobile()}\n      onClick={() => {\n        if (window.confirm(t(\"alerts.clearReset\"))) {\n          updateData(null);\n        }\n      }}\n      data-testid=\"clear-canvas-button\"\n    />\n  ),\n});\n\nexport const actionZoomIn = register({\n  name: \"zoomIn\",\n  perform: (_elements, appState) => {\n    const zoom = getNewZoom(\n      getNormalizedZoom(appState.zoom.value + ZOOM_STEP),\n      appState.zoom,\n      { left: appState.offsetLeft, top: appState.offsetTop },\n      { x: appState.width / 2, y: appState.height / 2 },\n    );\n    return {\n      appState: {\n        ...appState,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomIn}\n      title={`${t(\"buttons.zoomIn\")} — ${getShortcutKey(\"CtrlOrCmd++\")}`}\n      aria-label={t(\"buttons.zoomIn\")}\n      onClick={() => {\n        updateData(null);\n      }}\n      size=\"small\"\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.EQUAL || event.code === CODES.NUM_ADD) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionZoomOut = register({\n  name: \"zoomOut\",\n  perform: (_elements, appState) => {\n    const zoom = getNewZoom(\n      getNormalizedZoom(appState.zoom.value - ZOOM_STEP),\n      appState.zoom,\n      { left: appState.offsetLeft, top: appState.offsetTop },\n      { x: appState.width / 2, y: appState.height / 2 },\n    );\n\n    return {\n      appState: {\n        ...appState,\n        zoom,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={zoomOut}\n      title={`${t(\"buttons.zoomOut\")} — ${getShortcutKey(\"CtrlOrCmd+-\")}`}\n      aria-label={t(\"buttons.zoomOut\")}\n      onClick={() => {\n        updateData(null);\n      }}\n      size=\"small\"\n    />\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.MINUS || event.code === CODES.NUM_SUBTRACT) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nexport const actionResetZoom = register({\n  name: \"resetZoom\",\n  perform: (_elements, appState) => {\n    return {\n      appState: {\n        ...appState,\n        zoom: getNewZoom(\n          1 as NormalizedZoomValue,\n          appState.zoom,\n          { left: appState.offsetLeft, top: appState.offsetTop },\n          {\n            x: appState.width / 2,\n            y: appState.height / 2,\n          },\n        ),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData, appState }) => (\n    <Tooltip label={t(\"buttons.resetZoom\")}>\n      <ToolButton\n        type=\"button\"\n        className=\"reset-zoom-button\"\n        title={t(\"buttons.resetZoom\")}\n        aria-label={t(\"buttons.resetZoom\")}\n        onClick={() => {\n          updateData(null);\n        }}\n        size=\"small\"\n      >\n        {(appState.zoom.value * 100).toFixed(0)}%\n      </ToolButton>\n    </Tooltip>\n  ),\n  keyTest: (event) =>\n    (event.code === CODES.ZERO || event.code === CODES.NUM_ZERO) &&\n    (event[KEYS.CTRL_OR_CMD] || event.shiftKey),\n});\n\nconst zoomValueToFitBoundsOnViewport = (\n  bounds: [number, number, number, number],\n  viewportDimensions: { width: number; height: number },\n) => {\n  const [x1, y1, x2, y2] = bounds;\n  const commonBoundsWidth = x2 - x1;\n  const zoomValueForWidth = viewportDimensions.width / commonBoundsWidth;\n  const commonBoundsHeight = y2 - y1;\n  const zoomValueForHeight = viewportDimensions.height / commonBoundsHeight;\n  const smallestZoomValue = Math.min(zoomValueForWidth, zoomValueForHeight);\n  const zoomAdjustedToSteps =\n    Math.floor(smallestZoomValue / ZOOM_STEP) * ZOOM_STEP;\n  const clampedZoomValueToFitElements = Math.min(\n    Math.max(zoomAdjustedToSteps, ZOOM_STEP),\n    1,\n  );\n  return clampedZoomValueToFitElements as NormalizedZoomValue;\n};\n\nconst zoomToFitElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  zoomToSelection: boolean,\n) => {\n  const nonDeletedElements = getNonDeletedElements(elements);\n  const selectedElements = getSelectedElements(nonDeletedElements, appState);\n\n  const commonBounds =\n    zoomToSelection && selectedElements.length > 0\n      ? getCommonBounds(selectedElements)\n      : getCommonBounds(nonDeletedElements);\n\n  const zoomValue = zoomValueToFitBoundsOnViewport(commonBounds, {\n    width: appState.width,\n    height: appState.height,\n  });\n  const newZoom = getNewZoom(zoomValue, appState.zoom, {\n    left: appState.offsetLeft,\n    top: appState.offsetTop,\n  });\n\n  const [x1, y1, x2, y2] = commonBounds;\n  const centerX = (x1 + x2) / 2;\n  const centerY = (y1 + y2) / 2;\n  return {\n    appState: {\n      ...appState,\n      ...centerScrollOn({\n        scenePoint: { x: centerX, y: centerY },\n        viewportDimensions: {\n          width: appState.width,\n          height: appState.height,\n        },\n        zoom: newZoom,\n      }),\n      zoom: newZoom,\n    },\n    commitToHistory: false,\n  };\n};\n\nexport const actionZoomToSelected = register({\n  name: \"zoomToSelection\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, true),\n  keyTest: (event) =>\n    event.code === CODES.TWO &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionZoomToFit = register({\n  name: \"zoomToFit\",\n  perform: (elements, appState) => zoomToFitElements(elements, appState, false),\n  keyTest: (event) =>\n    event.code === CODES.ONE &&\n    event.shiftKey &&\n    !event.altKey &&\n    !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionToggleTheme = register({\n  name: \"toggleTheme\",\n  perform: (_, appState, value) => {\n    return {\n      appState: {\n        ...appState,\n        theme: value || (appState.theme === \"light\" ? \"dark\" : \"light\"),\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <div style={{ marginInlineStart: \"0.25rem\" }}>\n      <DarkModeToggle\n        value={appState.theme}\n        onChange={(theme) => {\n          updateData(theme);\n        }}\n      />\n    </div>\n  ),\n  keyTest: (event) => event.altKey && event.shiftKey && event.code === CODES.D,\n});\n","import { KEYS } from \"../keys\";\nimport { isInvisiblySmallElement } from \"../element\";\nimport { resetCursor } from \"../utils\";\nimport React from \"react\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { done } from \"../components/icons\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { isPathALoop } from \"../math\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport Scene from \"../scene/Scene\";\nimport {\n  maybeBindLinearElement,\n  bindOrUnbindLinearElement,\n} from \"../element/binding\";\nimport { isBindingElement } from \"../element/typeChecks\";\n\nexport const actionFinalize = register({\n  name: \"finalize\",\n  perform: (elements, appState, _, { canvas, focusContainer }) => {\n    if (appState.editingLinearElement) {\n      const {\n        elementId,\n        startBindingElement,\n        endBindingElement,\n      } = appState.editingLinearElement;\n      const element = LinearElementEditor.getElement(elementId);\n\n      if (element) {\n        if (isBindingElement(element)) {\n          bindOrUnbindLinearElement(\n            element,\n            startBindingElement,\n            endBindingElement,\n          );\n        }\n        return {\n          elements:\n            element.points.length < 2 || isInvisiblySmallElement(element)\n              ? elements.filter((el) => el.id !== element.id)\n              : undefined,\n          appState: {\n            ...appState,\n            editingLinearElement: null,\n          },\n          commitToHistory: true,\n        };\n      }\n    }\n\n    let newElements = elements;\n    if (window.document.activeElement instanceof HTMLElement) {\n      focusContainer();\n    }\n\n    const multiPointElement = appState.multiElement\n      ? appState.multiElement\n      : appState.editingElement?.type === \"freedraw\"\n      ? appState.editingElement\n      : null;\n\n    if (multiPointElement) {\n      // pen and mouse have hover\n      if (\n        multiPointElement.type !== \"freedraw\" &&\n        appState.lastPointerDownWith !== \"touch\"\n      ) {\n        const { points, lastCommittedPoint } = multiPointElement;\n        if (\n          !lastCommittedPoint ||\n          points[points.length - 1] !== lastCommittedPoint\n        ) {\n          mutateElement(multiPointElement, {\n            points: multiPointElement.points.slice(0, -1),\n          });\n        }\n      }\n      if (isInvisiblySmallElement(multiPointElement)) {\n        newElements = newElements.slice(0, -1);\n      }\n\n      // If the multi point line closes the loop,\n      // set the last point to first point.\n      // This ensures that loop remains closed at different scales.\n      const isLoop = isPathALoop(multiPointElement.points, appState.zoom.value);\n      if (\n        multiPointElement.type === \"line\" ||\n        multiPointElement.type === \"freedraw\"\n      ) {\n        if (isLoop) {\n          const linePoints = multiPointElement.points;\n          const firstPoint = linePoints[0];\n          mutateElement(multiPointElement, {\n            points: linePoints.map((point, index) =>\n              index === linePoints.length - 1\n                ? ([firstPoint[0], firstPoint[1]] as const)\n                : point,\n            ),\n          });\n        }\n      }\n\n      if (\n        isBindingElement(multiPointElement) &&\n        !isLoop &&\n        multiPointElement.points.length > 1\n      ) {\n        const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n          multiPointElement,\n          -1,\n        );\n        maybeBindLinearElement(\n          multiPointElement,\n          appState,\n          Scene.getScene(multiPointElement)!,\n          { x, y },\n        );\n      }\n\n      if (!appState.elementLocked && appState.elementType !== \"freedraw\") {\n        appState.selectedElementIds[multiPointElement.id] = true;\n      }\n    }\n\n    if (\n      (!appState.elementLocked && appState.elementType !== \"freedraw\") ||\n      !multiPointElement\n    ) {\n      resetCursor(canvas);\n    }\n\n    return {\n      elements: newElements,\n      appState: {\n        ...appState,\n        elementType:\n          (appState.elementLocked || appState.elementType === \"freedraw\") &&\n          multiPointElement\n            ? appState.elementType\n            : \"selection\",\n        draggingElement: null,\n        multiElement: null,\n        editingElement: null,\n        startBoundElement: null,\n        suggestedBindings: [],\n        selectedElementIds:\n          multiPointElement &&\n          !appState.elementLocked &&\n          appState.elementType !== \"freedraw\"\n            ? {\n                ...appState.selectedElementIds,\n                [multiPointElement.id]: true,\n              }\n            : appState.selectedElementIds,\n      },\n      commitToHistory: appState.elementType === \"freedraw\",\n    };\n  },\n  keyTest: (event, appState) =>\n    (event.key === KEYS.ESCAPE &&\n      (appState.editingLinearElement !== null ||\n        (!appState.draggingElement && appState.multiElement === null))) ||\n    ((event.key === KEYS.ESCAPE || event.key === KEYS.ENTER) &&\n      appState.multiElement !== null),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={done}\n      title={t(\"buttons.done\")}\n      aria-label={t(\"buttons.done\")}\n      onClick={updateData}\n      visible={appState.multiElement != null}\n    />\n  ),\n});\n","import \"./TextInput.scss\";\n\nimport React, { useState } from \"react\";\nimport { focusNearestParent } from \"../utils\";\n\nimport \"./ProjectName.scss\";\nimport { useExcalidrawContainer } from \"./App\";\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n  isNameEditable: boolean;\n};\n\nexport const ProjectName = (props: Props) => {\n  const { id } = useExcalidrawContainer();\n  const [fileName, setFileName] = useState<string>(props.value);\n\n  const handleBlur = (event: any) => {\n    focusNearestParent(event.target);\n    const value = event.target.value;\n    if (value !== props.value) {\n      props.onChange(value);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n      if (event.nativeEvent.isComposing || event.keyCode === 229) {\n        return;\n      }\n      event.currentTarget.blur();\n    }\n  };\n\n  return (\n    <div className=\"ProjectName\">\n      <label className=\"ProjectName-label\" htmlFor=\"filename\">\n        {`${props.label}${props.isNameEditable ? \"\" : \":\"}`}\n      </label>\n      {props.isNameEditable ? (\n        <input\n          className=\"TextInput\"\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          id={`${id}-filename`}\n          value={fileName}\n          onChange={(event) => setFileName(event.target.value)}\n        />\n      ) : (\n        <span className=\"TextInput TextInput--readonly\" id={`${id}-filename`}>\n          {props.value}\n        </span>\n      )}\n    </div>\n  );\n};\n","/**\n * https://stackoverflow.com/a/3368118\n * Draws a rounded rectangle using the current state of the canvas.\n * @param {CanvasRenderingContext2D} context\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} radius The corner radius\n */\nexport const roundRect = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.moveTo(x + radius, y);\n  context.lineTo(x + width - radius, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius);\n  context.lineTo(x + width, y + height - radius);\n  context.quadraticCurveTo(\n    x + width,\n    y + height,\n    x + width - radius,\n    y + height,\n  );\n  context.lineTo(x + radius, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius);\n  context.lineTo(x, y + radius);\n  context.quadraticCurveTo(x, y, x + radius, y);\n  context.closePath();\n  context.fill();\n  context.stroke();\n};\n","import colors from \"./colors\";\nimport { AppState } from \"./types\";\n\nexport const getClientColors = (clientId: string, appState: AppState) => {\n  if (appState?.collaborators) {\n    const currentUser = appState.collaborators.get(clientId);\n    if (currentUser?.color) {\n      return currentUser.color;\n    }\n  }\n  // Naive way of getting an integer out of the clientId\n  const sum = clientId.split(\"\").reduce((a, str) => a + str.charCodeAt(0), 0);\n\n  // Skip transparent background.\n  const backgrounds = colors.elementBackground.slice(1);\n  const strokes = colors.elementStroke.slice(1);\n  return {\n    background: backgrounds[sum % backgrounds.length],\n    stroke: strokes[sum % strokes.length],\n  };\n};\n\nexport const getClientInitials = (username?: string | null) => {\n  if (!username) {\n    return \"?\";\n  }\n  const names = username.trim().split(\" \");\n\n  if (names.length < 2) {\n    return names[0].substring(0, 2).toUpperCase();\n  }\n\n  const firstName = names[0];\n  const lastName = names[names.length - 1];\n\n  return (firstName[0] + lastName[0]).toUpperCase();\n};\n","import { RoughCanvas } from \"roughjs/bin/canvas\";\nimport { RoughSVG } from \"roughjs/bin/svg\";\nimport oc from \"open-color\";\n\nimport { AppState, Zoom } from \"../types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n  ExcalidrawLinearElement,\n  NonDeleted,\n  GroupId,\n  ExcalidrawBindableElement,\n} from \"../element/types\";\nimport {\n  getElementAbsoluteCoords,\n  OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n  getTransformHandlesFromCoords,\n  getTransformHandles,\n  getElementBounds,\n  getCommonBounds,\n} from \"../element\";\n\nimport { roundRect } from \"./roundRect\";\nimport { SceneState } from \"../scene/types\";\nimport {\n  getScrollBars,\n  SCROLLBAR_COLOR,\n  SCROLLBAR_WIDTH,\n} from \"../scene/scrollbars\";\nimport { getSelectedElements } from \"../scene/selection\";\n\nimport { renderElement, renderElementToSvg } from \"./renderElement\";\nimport { getClientColors } from \"../clients\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport {\n  isSelectedViaGroup,\n  getSelectedGroupIds,\n  getElementsInGroup,\n} from \"../groups\";\nimport { maxBindingGap } from \"../element/collision\";\nimport {\n  SuggestedBinding,\n  SuggestedPointBinding,\n  isBindingEnabled,\n} from \"../element/binding\";\nimport {\n  TransformHandles,\n  TransformHandleType,\n} from \"../element/transformHandles\";\nimport { viewportCoordsToSceneCoords, supportsEmoji } from \"../utils\";\nimport { UserIdleState } from \"../types\";\nimport { THEME_FILTER } from \"../constants\";\n\nconst hasEmojiSupport = supportsEmoji();\n\nconst strokeRectWithRotation = (\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n  fill: boolean = false,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  if (fill) {\n    context.fillRect(x - cx, y - cy, width, height);\n  }\n  context.strokeRect(x - cx, y - cy, width, height);\n  context.restore();\n};\n\nconst strokeDiamondWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.save();\n  context.translate(cx, cy);\n  context.rotate(angle);\n  context.beginPath();\n  context.moveTo(0, height / 2);\n  context.lineTo(width / 2, 0);\n  context.lineTo(0, -height / 2);\n  context.lineTo(-width / 2, 0);\n  context.closePath();\n  context.stroke();\n  context.restore();\n};\n\nconst strokeEllipseWithRotation = (\n  context: CanvasRenderingContext2D,\n  width: number,\n  height: number,\n  cx: number,\n  cy: number,\n  angle: number,\n) => {\n  context.beginPath();\n  context.ellipse(cx, cy, width / 2, height / 2, angle, 0, Math.PI * 2);\n  context.stroke();\n};\n\nconst fillCircle = (\n  context: CanvasRenderingContext2D,\n  cx: number,\n  cy: number,\n  radius: number,\n) => {\n  context.beginPath();\n  context.arc(cx, cy, radius, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n};\n\nconst strokeGrid = (\n  context: CanvasRenderingContext2D,\n  gridSize: number,\n  offsetX: number,\n  offsetY: number,\n  width: number,\n  height: number,\n) => {\n  context.save();\n  context.strokeStyle = \"rgba(0,0,0,0.1)\";\n  context.beginPath();\n  for (let x = offsetX; x < offsetX + width + gridSize * 2; x += gridSize) {\n    context.moveTo(x, offsetY - gridSize);\n    context.lineTo(x, offsetY + height + gridSize * 2);\n  }\n  for (let y = offsetY; y < offsetY + height + gridSize * 2; y += gridSize) {\n    context.moveTo(offsetX - gridSize, y);\n    context.lineTo(offsetX + width + gridSize * 2, y);\n  }\n  context.stroke();\n  context.restore();\n};\n\nconst renderLinearPointHandles = (\n  context: CanvasRenderingContext2D,\n  appState: AppState,\n  sceneState: SceneState,\n  element: NonDeleted<ExcalidrawLinearElement>,\n) => {\n  context.save();\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  context.lineWidth = 1 / sceneState.zoom.value;\n\n  LinearElementEditor.getPointsGlobalCoordinates(element).forEach(\n    (point, idx) => {\n      context.strokeStyle = \"red\";\n      context.setLineDash([]);\n      context.fillStyle =\n        appState.editingLinearElement?.activePointIndex === idx\n          ? \"rgba(255, 127, 127, 0.9)\"\n          : \"rgba(255, 255, 255, 0.9)\";\n      const { POINT_HANDLE_SIZE } = LinearElementEditor;\n      fillCircle(\n        context,\n        point[0],\n        point[1],\n        POINT_HANDLE_SIZE / 2 / sceneState.zoom.value,\n      );\n    },\n  );\n  context.restore();\n};\n\nexport const renderScene = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  selectionElement: NonDeletedExcalidrawElement | null,\n  scale: number,\n  rc: RoughCanvas,\n  canvas: HTMLCanvasElement,\n  sceneState: SceneState,\n  // extra options, currently passed by export helper\n  {\n    renderScrollbars = true,\n    renderSelection = true,\n    // Whether to employ render optimizations to improve performance.\n    // Should not be turned on for export operations and similar, because it\n    // doesn't guarantee pixel-perfect output.\n    renderOptimizations = false,\n    renderGrid = true,\n  }: {\n    renderScrollbars?: boolean;\n    renderSelection?: boolean;\n    renderOptimizations?: boolean;\n    renderGrid?: boolean;\n  } = {},\n) => {\n  if (canvas === null) {\n    return { atLeastOneVisibleElement: false };\n  }\n\n  const context = canvas.getContext(\"2d\")!;\n\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.save();\n  context.scale(scale, scale);\n\n  // When doing calculations based on canvas width we should used normalized one\n  const normalizedCanvasWidth = canvas.width / scale;\n  const normalizedCanvasHeight = canvas.height / scale;\n\n  if (sceneState.exportWithDarkMode) {\n    context.filter = THEME_FILTER;\n  }\n\n  // Paint background\n  if (typeof sceneState.viewBackgroundColor === \"string\") {\n    const hasTransparence =\n      sceneState.viewBackgroundColor === \"transparent\" ||\n      sceneState.viewBackgroundColor.length === 5 || // #RGBA\n      sceneState.viewBackgroundColor.length === 9 || // #RRGGBBA\n      /(hsla|rgba)\\(/.test(sceneState.viewBackgroundColor);\n    if (hasTransparence) {\n      context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    }\n    context.save();\n    context.fillStyle = sceneState.viewBackgroundColor;\n    context.fillRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n    context.restore();\n  } else {\n    context.clearRect(0, 0, normalizedCanvasWidth, normalizedCanvasHeight);\n  }\n\n  // Apply zoom\n  const zoomTranslationX = sceneState.zoom.translation.x;\n  const zoomTranslationY = sceneState.zoom.translation.y;\n  context.save();\n  context.translate(zoomTranslationX, zoomTranslationY);\n  context.scale(sceneState.zoom.value, sceneState.zoom.value);\n\n  // Grid\n  if (renderGrid && appState.gridSize) {\n    strokeGrid(\n      context,\n      appState.gridSize,\n      -Math.ceil(zoomTranslationX / sceneState.zoom.value / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollX % appState.gridSize),\n      -Math.ceil(zoomTranslationY / sceneState.zoom.value / appState.gridSize) *\n        appState.gridSize +\n        (sceneState.scrollY % appState.gridSize),\n      normalizedCanvasWidth / sceneState.zoom.value,\n      normalizedCanvasHeight / sceneState.zoom.value,\n    );\n  }\n\n  // Paint visible elements\n  const visibleElements = elements.filter((element) =>\n    isVisibleElement(element, normalizedCanvasWidth, normalizedCanvasHeight, {\n      zoom: sceneState.zoom,\n      offsetLeft: appState.offsetLeft,\n      offsetTop: appState.offsetTop,\n      scrollX: sceneState.scrollX,\n      scrollY: sceneState.scrollY,\n    }),\n  );\n\n  visibleElements.forEach((element) => {\n    try {\n      renderElement(element, rc, context, renderOptimizations, sceneState);\n    } catch (error) {\n      console.error(error);\n    }\n  });\n\n  if (appState.editingLinearElement) {\n    const element = LinearElementEditor.getElement(\n      appState.editingLinearElement.elementId,\n    );\n    if (element) {\n      renderLinearPointHandles(context, appState, sceneState, element);\n    }\n  }\n\n  // Paint selection element\n  if (selectionElement) {\n    try {\n      renderElement(\n        selectionElement,\n        rc,\n        context,\n        renderOptimizations,\n        sceneState,\n      );\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  if (isBindingEnabled(appState)) {\n    appState.suggestedBindings\n      .filter((binding) => binding != null)\n      .forEach((suggestedBinding) => {\n        renderBindingHighlight(context, sceneState, suggestedBinding!);\n      });\n  }\n\n  // Paint selected elements\n  if (\n    renderSelection &&\n    !appState.multiElement &&\n    !appState.editingLinearElement\n  ) {\n    const selections = elements.reduce((acc, element) => {\n      const selectionColors = [];\n      // local user\n      if (\n        appState.selectedElementIds[element.id] &&\n        !isSelectedViaGroup(appState, element)\n      ) {\n        selectionColors.push(oc.black);\n      }\n      // remote users\n      if (sceneState.remoteSelectedElementIds[element.id]) {\n        selectionColors.push(\n          ...sceneState.remoteSelectedElementIds[element.id].map((socketId) => {\n            const { background } = getClientColors(socketId, appState);\n            return background;\n          }),\n        );\n      }\n      if (selectionColors.length) {\n        const [\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n        ] = getElementAbsoluteCoords(element);\n        acc.push({\n          angle: element.angle,\n          elementX1,\n          elementY1,\n          elementX2,\n          elementY2,\n          selectionColors,\n        });\n      }\n      return acc;\n    }, [] as { angle: number; elementX1: number; elementY1: number; elementX2: number; elementY2: number; selectionColors: string[] }[]);\n\n    const addSelectionForGroupId = (groupId: GroupId) => {\n      const groupElements = getElementsInGroup(elements, groupId);\n      const [elementX1, elementY1, elementX2, elementY2] = getCommonBounds(\n        groupElements,\n      );\n      selections.push({\n        angle: 0,\n        elementX1,\n        elementX2,\n        elementY1,\n        elementY2,\n        selectionColors: [oc.black],\n      });\n    };\n\n    for (const groupId of getSelectedGroupIds(appState)) {\n      // TODO: support multiplayer selected group IDs\n      addSelectionForGroupId(groupId);\n    }\n\n    if (appState.editingGroupId) {\n      addSelectionForGroupId(appState.editingGroupId);\n    }\n\n    selections.forEach((selection) =>\n      renderSelectionBorder(context, sceneState, selection),\n    );\n\n    const locallySelectedElements = getSelectedElements(elements, appState);\n\n    // Paint resize transformHandles\n    context.save();\n    context.translate(sceneState.scrollX, sceneState.scrollY);\n    if (locallySelectedElements.length === 1) {\n      context.fillStyle = oc.white;\n      const transformHandles = getTransformHandles(\n        locallySelectedElements[0],\n        sceneState.zoom,\n        \"mouse\", // when we render we don't know which pointer type so use mouse\n      );\n      if (!appState.viewModeEnabled) {\n        renderTransformHandles(\n          context,\n          sceneState,\n          transformHandles,\n          locallySelectedElements[0].angle,\n        );\n      }\n    } else if (locallySelectedElements.length > 1 && !appState.isRotating) {\n      const dashedLinePadding = 4 / sceneState.zoom.value;\n      context.fillStyle = oc.white;\n      const [x1, y1, x2, y2] = getCommonBounds(locallySelectedElements);\n      const initialLineDash = context.getLineDash();\n      context.setLineDash([2 / sceneState.zoom.value]);\n      const lineWidth = context.lineWidth;\n      context.lineWidth = 1 / sceneState.zoom.value;\n      strokeRectWithRotation(\n        context,\n        x1 - dashedLinePadding,\n        y1 - dashedLinePadding,\n        x2 - x1 + dashedLinePadding * 2,\n        y2 - y1 + dashedLinePadding * 2,\n        (x1 + x2) / 2,\n        (y1 + y2) / 2,\n        0,\n      );\n      context.lineWidth = lineWidth;\n      context.setLineDash(initialLineDash);\n      const transformHandles = getTransformHandlesFromCoords(\n        [x1, y1, x2, y2],\n        0,\n        sceneState.zoom,\n        \"mouse\",\n        OMIT_SIDES_FOR_MULTIPLE_ELEMENTS,\n      );\n      renderTransformHandles(context, sceneState, transformHandles, 0);\n    }\n    context.restore();\n  }\n\n  // Reset zoom\n  context.restore();\n\n  // Paint remote pointers\n  for (const clientId in sceneState.remotePointerViewportCoords) {\n    let { x, y } = sceneState.remotePointerViewportCoords[clientId];\n\n    x -= appState.offsetLeft;\n    y -= appState.offsetTop;\n\n    const width = 9;\n    const height = 14;\n\n    const isOutOfBounds =\n      x < 0 ||\n      x > normalizedCanvasWidth - width ||\n      y < 0 ||\n      y > normalizedCanvasHeight - height;\n\n    x = Math.max(x, 0);\n    x = Math.min(x, normalizedCanvasWidth - width);\n    y = Math.max(y, 0);\n    y = Math.min(y, normalizedCanvasHeight - height);\n\n    const { background, stroke } = getClientColors(clientId, appState);\n\n    context.save();\n    context.strokeStyle = stroke;\n    context.fillStyle = background;\n\n    const userState = sceneState.remotePointerUserStates[clientId];\n    if (isOutOfBounds || userState === UserIdleState.AWAY) {\n      context.globalAlpha = 0.48;\n    }\n\n    if (\n      sceneState.remotePointerButton &&\n      sceneState.remotePointerButton[clientId] === \"down\"\n    ) {\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 3;\n      context.strokeStyle = \"#ffffff88\";\n      context.stroke();\n      context.closePath();\n\n      context.beginPath();\n      context.arc(x, y, 15, 0, 2 * Math.PI, false);\n      context.lineWidth = 1;\n      context.strokeStyle = stroke;\n      context.stroke();\n      context.closePath();\n    }\n\n    context.beginPath();\n    context.moveTo(x, y);\n    context.lineTo(x + 1, y + 14);\n    context.lineTo(x + 4, y + 9);\n    context.lineTo(x + 9, y + 10);\n    context.lineTo(x, y);\n    context.fill();\n    context.stroke();\n\n    const username = sceneState.remotePointerUsernames[clientId];\n\n    let idleState = \"\";\n    if (userState === UserIdleState.AWAY) {\n      idleState = hasEmojiSupport ? \"⚫️\" : ` (${UserIdleState.AWAY})`;\n    } else if (userState === UserIdleState.IDLE) {\n      idleState = hasEmojiSupport ? \"💤\" : ` (${UserIdleState.IDLE})`;\n    } else if (userState === UserIdleState.ACTIVE) {\n      idleState = hasEmojiSupport ? \"🟢\" : \"\";\n    }\n\n    const usernameAndIdleState = `${\n      username ? `${username} ` : \"\"\n    }${idleState}`;\n\n    if (!isOutOfBounds && usernameAndIdleState) {\n      const offsetX = x + width;\n      const offsetY = y + height;\n      const paddingHorizontal = 4;\n      const paddingVertical = 4;\n      const measure = context.measureText(usernameAndIdleState);\n      const measureHeight =\n        measure.actualBoundingBoxDescent + measure.actualBoundingBoxAscent;\n\n      // Border\n      context.fillStyle = stroke;\n      context.fillRect(\n        offsetX - 1,\n        offsetY - 1,\n        measure.width + 2 * paddingHorizontal + 2,\n        measureHeight + 2 * paddingVertical + 2,\n      );\n      // Background\n      context.fillStyle = background;\n      context.fillRect(\n        offsetX,\n        offsetY,\n        measure.width + 2 * paddingHorizontal,\n        measureHeight + 2 * paddingVertical,\n      );\n      context.fillStyle = oc.white;\n\n      context.fillText(\n        usernameAndIdleState,\n        offsetX + paddingHorizontal,\n        offsetY + paddingVertical + measure.actualBoundingBoxAscent,\n      );\n    }\n\n    context.restore();\n    context.closePath();\n  }\n\n  // Paint scrollbars\n  let scrollBars;\n  if (renderScrollbars) {\n    scrollBars = getScrollBars(\n      elements,\n      normalizedCanvasWidth,\n      normalizedCanvasHeight,\n      sceneState,\n    );\n\n    context.save();\n    context.fillStyle = SCROLLBAR_COLOR;\n    context.strokeStyle = \"rgba(255,255,255,0.8)\";\n    [scrollBars.horizontal, scrollBars.vertical].forEach((scrollBar) => {\n      if (scrollBar) {\n        roundRect(\n          context,\n          scrollBar.x,\n          scrollBar.y,\n          scrollBar.width,\n          scrollBar.height,\n          SCROLLBAR_WIDTH / 2,\n        );\n      }\n    });\n    context.restore();\n  }\n\n  context.restore();\n  return { atLeastOneVisibleElement: visibleElements.length > 0, scrollBars };\n};\n\nconst renderTransformHandles = (\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n  transformHandles: TransformHandles,\n  angle: number,\n): void => {\n  Object.keys(transformHandles).forEach((key) => {\n    const transformHandle = transformHandles[key as TransformHandleType];\n    if (transformHandle !== undefined) {\n      context.save();\n      context.lineWidth = 1 / sceneState.zoom.value;\n      if (key === \"rotation\") {\n        fillCircle(\n          context,\n          transformHandle[0] + transformHandle[2] / 2,\n          transformHandle[1] + transformHandle[3] / 2,\n          transformHandle[2] / 2,\n        );\n      } else {\n        strokeRectWithRotation(\n          context,\n          transformHandle[0],\n          transformHandle[1],\n          transformHandle[2],\n          transformHandle[3],\n          transformHandle[0] + transformHandle[2] / 2,\n          transformHandle[1] + transformHandle[3] / 2,\n          angle,\n          true, // fill before stroke\n        );\n      }\n      context.restore();\n    }\n  });\n};\n\nconst renderSelectionBorder = (\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n  elementProperties: {\n    angle: number;\n    elementX1: number;\n    elementY1: number;\n    elementX2: number;\n    elementY2: number;\n    selectionColors: string[];\n  },\n) => {\n  const {\n    angle,\n    elementX1,\n    elementY1,\n    elementX2,\n    elementY2,\n    selectionColors,\n  } = elementProperties;\n  const elementWidth = elementX2 - elementX1;\n  const elementHeight = elementY2 - elementY1;\n\n  const dashedLinePadding = 4 / sceneState.zoom.value;\n  const dashWidth = 8 / sceneState.zoom.value;\n  const spaceWidth = 4 / sceneState.zoom.value;\n\n  context.save();\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  context.lineWidth = 1 / sceneState.zoom.value;\n\n  const count = selectionColors.length;\n  for (let index = 0; index < count; ++index) {\n    context.strokeStyle = selectionColors[index];\n    context.setLineDash([\n      dashWidth,\n      spaceWidth + (dashWidth + spaceWidth) * (count - 1),\n    ]);\n    context.lineDashOffset = (dashWidth + spaceWidth) * index;\n    strokeRectWithRotation(\n      context,\n      elementX1 - dashedLinePadding,\n      elementY1 - dashedLinePadding,\n      elementWidth + dashedLinePadding * 2,\n      elementHeight + dashedLinePadding * 2,\n      elementX1 + elementWidth / 2,\n      elementY1 + elementHeight / 2,\n      angle,\n    );\n  }\n  context.restore();\n};\n\nconst renderBindingHighlight = (\n  context: CanvasRenderingContext2D,\n  sceneState: SceneState,\n  suggestedBinding: SuggestedBinding,\n) => {\n  const renderHighlight = Array.isArray(suggestedBinding)\n    ? renderBindingHighlightForSuggestedPointBinding\n    : renderBindingHighlightForBindableElement;\n\n  context.save();\n  context.translate(sceneState.scrollX, sceneState.scrollY);\n  renderHighlight(context, suggestedBinding as any);\n\n  context.restore();\n};\n\nconst renderBindingHighlightForBindableElement = (\n  context: CanvasRenderingContext2D,\n  element: ExcalidrawBindableElement,\n) => {\n  const [x1, y1, x2, y2] = getElementAbsoluteCoords(element);\n  const width = x2 - x1;\n  const height = y2 - y1;\n  const threshold = maxBindingGap(element, width, height);\n\n  // So that we don't overlap the element itself\n  const strokeOffset = 4;\n  context.strokeStyle = \"rgba(0,0,0,.05)\";\n  context.lineWidth = threshold - strokeOffset;\n  const padding = strokeOffset / 2 + threshold / 2;\n\n  switch (element.type) {\n    case \"rectangle\":\n    case \"text\":\n      strokeRectWithRotation(\n        context,\n        x1 - padding,\n        y1 - padding,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n    case \"diamond\":\n      const side = Math.hypot(width, height);\n      const wPadding = (padding * side) / height;\n      const hPadding = (padding * side) / width;\n      strokeDiamondWithRotation(\n        context,\n        width + wPadding * 2,\n        height + hPadding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n    case \"ellipse\":\n      strokeEllipseWithRotation(\n        context,\n        width + padding * 2,\n        height + padding * 2,\n        x1 + width / 2,\n        y1 + height / 2,\n        element.angle,\n      );\n      break;\n  }\n};\n\nconst renderBindingHighlightForSuggestedPointBinding = (\n  context: CanvasRenderingContext2D,\n  suggestedBinding: SuggestedPointBinding,\n) => {\n  const [element, startOrEnd, bindableElement] = suggestedBinding;\n\n  const threshold = maxBindingGap(\n    bindableElement,\n    bindableElement.width,\n    bindableElement.height,\n  );\n\n  context.strokeStyle = \"rgba(0,0,0,0)\";\n  context.fillStyle = \"rgba(0,0,0,.05)\";\n\n  const pointIndices =\n    startOrEnd === \"both\" ? [0, -1] : startOrEnd === \"start\" ? [0] : [-1];\n  pointIndices.forEach((index) => {\n    const [x, y] = LinearElementEditor.getPointAtIndexGlobalCoordinates(\n      element,\n      index,\n    );\n    fillCircle(context, x, y, threshold);\n  });\n};\n\nconst isVisibleElement = (\n  element: ExcalidrawElement,\n  canvasWidth: number,\n  canvasHeight: number,\n  viewTransformations: {\n    zoom: Zoom;\n    offsetLeft: number;\n    offsetTop: number;\n    scrollX: number;\n    scrollY: number;\n  },\n) => {\n  const [x1, y1, x2, y2] = getElementBounds(element); // scene coordinates\n  const topLeftSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft,\n      clientY: viewTransformations.offsetTop,\n    },\n    viewTransformations,\n  );\n  const bottomRightSceneCoords = viewportCoordsToSceneCoords(\n    {\n      clientX: viewTransformations.offsetLeft + canvasWidth,\n      clientY: viewTransformations.offsetTop + canvasHeight,\n    },\n    viewTransformations,\n  );\n\n  return (\n    topLeftSceneCoords.x <= x2 &&\n    topLeftSceneCoords.y <= y2 &&\n    bottomRightSceneCoords.x >= x1 &&\n    bottomRightSceneCoords.y >= y1\n  );\n};\n\n// This should be only called for exporting purposes\nexport const renderSceneToSvg = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  rsvg: RoughSVG,\n  svgRoot: SVGElement,\n  {\n    offsetX = 0,\n    offsetY = 0,\n  }: {\n    offsetX?: number;\n    offsetY?: number;\n  } = {},\n) => {\n  if (!svgRoot) {\n    return;\n  }\n  // render elements\n  elements.forEach((element) => {\n    if (!element.isDeleted) {\n      try {\n        renderElementToSvg(\n          element,\n          rsvg,\n          svgRoot,\n          element.x + offsetX,\n          element.y + offsetY,\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n};\n","type CANVAS_ERROR_NAMES = \"CANVAS_ERROR\" | \"CANVAS_POSSIBLY_TOO_BIG\";\nexport class CanvasError extends Error {\n  constructor(\n    message: string = \"Couldn't export canvas.\",\n    name: CANVAS_ERROR_NAMES = \"CANVAS_ERROR\",\n  ) {\n    super();\n    this.name = name;\n    this.message = message;\n  }\n}\n","import {\n  ExcalidrawElement,\n  ExcalidrawSelectionElement,\n  FontFamilyValues,\n} from \"../element/types\";\nimport { AppState, NormalizedZoomValue } from \"../types\";\nimport { ImportedDataState } from \"./types\";\nimport {\n  getElementMap,\n  getNormalizedDimensions,\n  isInvisiblySmallElement,\n} from \"../element\";\nimport { isLinearElementType } from \"../element/typeChecks\";\nimport { randomId } from \"../random\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n  DEFAULT_VERTICAL_ALIGN,\n  FONT_FAMILY,\n} from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { bumpVersion } from \"../element/mutateElement\";\n\ntype RestoredAppState = Omit<\n  AppState,\n  \"offsetTop\" | \"offsetLeft\" | \"width\" | \"height\"\n>;\n\nexport const AllowedExcalidrawElementTypes: Record<\n  ExcalidrawElement[\"type\"],\n  true\n> = {\n  selection: true,\n  text: true,\n  rectangle: true,\n  diamond: true,\n  ellipse: true,\n  line: true,\n  arrow: true,\n  freedraw: true,\n};\n\nexport type RestoredDataState = {\n  elements: ExcalidrawElement[];\n  appState: RestoredAppState;\n};\n\nconst getFontFamilyByName = (fontFamilyName: string): FontFamilyValues => {\n  if (Object.keys(FONT_FAMILY).includes(fontFamilyName)) {\n    return FONT_FAMILY[\n      fontFamilyName as keyof typeof FONT_FAMILY\n    ] as FontFamilyValues;\n  }\n  return DEFAULT_FONT_FAMILY;\n};\n\nconst restoreElementWithProperties = <\n  T extends ExcalidrawElement,\n  K extends keyof Omit<\n    Required<T>,\n    Exclude<keyof ExcalidrawElement, \"type\" | \"x\" | \"y\">\n  >\n>(\n  element: Required<T>,\n  extra: Pick<T, K>,\n): T => {\n  const base: Pick<T, keyof ExcalidrawElement> = {\n    type: (extra as Partial<T>).type || element.type,\n    // all elements must have version > 0 so getSceneVersion() will pick up\n    // newly added elements\n    version: element.version || 1,\n    versionNonce: element.versionNonce ?? 0,\n    isDeleted: element.isDeleted ?? false,\n    id: element.id || randomId(),\n    fillStyle: element.fillStyle || \"hachure\",\n    strokeWidth: element.strokeWidth || 1,\n    strokeStyle: element.strokeStyle ?? \"solid\",\n    roughness: element.roughness ?? 1,\n    opacity: element.opacity == null ? 100 : element.opacity,\n    angle: element.angle || 0,\n    x: (extra as Partial<T>).x ?? element.x ?? 0,\n    y: (extra as Partial<T>).y ?? element.y ?? 0,\n    strokeColor: element.strokeColor,\n    backgroundColor: element.backgroundColor,\n    width: element.width || 0,\n    height: element.height || 0,\n    seed: element.seed ?? 1,\n    groupIds: element.groupIds ?? [],\n    strokeSharpness:\n      element.strokeSharpness ??\n      (isLinearElementType(element.type) ? \"round\" : \"sharp\"),\n    boundElementIds: element.boundElementIds ?? [],\n  };\n\n  return ({\n    ...base,\n    ...getNormalizedDimensions(base),\n    ...extra,\n  } as unknown) as T;\n};\n\nconst restoreElement = (\n  element: Exclude<ExcalidrawElement, ExcalidrawSelectionElement>,\n): typeof element => {\n  switch (element.type) {\n    case \"text\":\n      let fontSize = element.fontSize;\n      let fontFamily = element.fontFamily;\n      if (\"font\" in element) {\n        const [fontPx, _fontFamily]: [\n          string,\n          string,\n        ] = (element as any).font.split(\" \");\n        fontSize = parseInt(fontPx, 10);\n        fontFamily = getFontFamilyByName(_fontFamily);\n      }\n      return restoreElementWithProperties(element, {\n        fontSize,\n        fontFamily,\n        text: element.text ?? \"\",\n        baseline: element.baseline,\n        textAlign: element.textAlign || DEFAULT_TEXT_ALIGN,\n        verticalAlign: element.verticalAlign || DEFAULT_VERTICAL_ALIGN,\n      });\n    case \"freedraw\": {\n      return restoreElementWithProperties(element, {\n        points: element.points,\n        lastCommittedPoint: null,\n        simulatePressure: element.simulatePressure,\n        pressures: element.pressures,\n      });\n    }\n    case \"line\":\n    // @ts-ignore LEGACY type\n    // eslint-disable-next-line no-fallthrough\n    case \"draw\":\n    case \"arrow\": {\n      const {\n        startArrowhead = null,\n        endArrowhead = element.type === \"arrow\" ? \"arrow\" : null,\n      } = element;\n\n      let x = element.x;\n      let y = element.y;\n      let points = // migrate old arrow model to new one\n        !Array.isArray(element.points) || element.points.length < 2\n          ? [\n              [0, 0],\n              [element.width, element.height],\n            ]\n          : element.points;\n\n      if (points[0][0] !== 0 || points[0][1] !== 0) {\n        ({ points, x, y } = LinearElementEditor.getNormalizedPoints(element));\n      }\n\n      return restoreElementWithProperties(element, {\n        type:\n          (element.type as ExcalidrawElement[\"type\"] | \"draw\") === \"draw\"\n            ? \"line\"\n            : element.type,\n        startBinding: element.startBinding,\n        endBinding: element.endBinding,\n        lastCommittedPoint: null,\n        startArrowhead,\n        endArrowhead,\n        points,\n        x,\n        y,\n      });\n    }\n    // generic elements\n    case \"ellipse\":\n      return restoreElementWithProperties(element, {});\n    case \"rectangle\":\n      return restoreElementWithProperties(element, {});\n    case \"diamond\":\n      return restoreElementWithProperties(element, {});\n\n    // Don't use default case so as to catch a missing an element type case.\n    // We also don't want to throw, but instead return void so we filter\n    // out these unsupported elements from the restored array.\n  }\n};\n\nexport const restoreElements = (\n  elements: ImportedDataState[\"elements\"],\n  /** NOTE doesn't serve for reconciliation */\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n): ExcalidrawElement[] => {\n  const localElementsMap = localElements ? getElementMap(localElements) : null;\n  return (elements || []).reduce((elements, element) => {\n    // filtering out selection, which is legacy, no longer kept in elements,\n    // and causing issues if retained\n    if (element.type !== \"selection\" && !isInvisiblySmallElement(element)) {\n      let migratedElement: ExcalidrawElement = restoreElement(element);\n      if (migratedElement) {\n        const localElement = localElementsMap?.[element.id];\n        if (localElement && localElement.version > migratedElement.version) {\n          migratedElement = bumpVersion(migratedElement, localElement.version);\n        }\n        elements.push(migratedElement);\n      }\n    }\n    return elements;\n  }, [] as ExcalidrawElement[]);\n};\n\nexport const restoreAppState = (\n  appState: ImportedDataState[\"appState\"],\n  localAppState: Partial<AppState> | null | undefined,\n): RestoredAppState => {\n  appState = appState || {};\n\n  const defaultAppState = getDefaultAppState();\n  const nextAppState = {} as typeof defaultAppState;\n\n  for (const [key, defaultValue] of Object.entries(defaultAppState) as [\n    keyof typeof defaultAppState,\n    any,\n  ][]) {\n    const suppliedValue = appState[key];\n    const localValue = localAppState ? localAppState[key] : undefined;\n    (nextAppState as any)[key] =\n      suppliedValue !== undefined\n        ? suppliedValue\n        : localValue !== undefined\n        ? localValue\n        : defaultValue;\n  }\n\n  return {\n    ...nextAppState,\n    elementType: AllowedExcalidrawElementTypes[nextAppState.elementType]\n      ? nextAppState.elementType\n      : \"selection\",\n    // Migrates from previous version where appState.zoom was a number\n    zoom:\n      typeof appState.zoom === \"number\"\n        ? {\n            value: appState.zoom as NormalizedZoomValue,\n            translation: defaultAppState.zoom.translation,\n          }\n        : appState.zoom || defaultAppState.zoom,\n  };\n};\n\nexport const restore = (\n  data: ImportedDataState | null,\n  /**\n   * Local AppState (`this.state` or initial state from localStorage) so that we\n   * don't overwrite local state with default values (when values not\n   * explicitly specified).\n   * Supply `null` if you can't get access to it.\n   */\n  localAppState: Partial<AppState> | null | undefined,\n  localElements: readonly ExcalidrawElement[] | null | undefined,\n): RestoredDataState => {\n  return {\n    elements: restoreElements(data?.elements, localElements),\n    appState: restoreAppState(data?.appState, localAppState || null),\n  };\n};\n","import { FileSystemHandle } from \"browser-fs-access\";\nimport { cleanAppStateForExport } from \"../appState\";\nimport { EXPORT_DATA_TYPES } from \"../constants\";\nimport { clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { CanvasError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { isValidExcalidrawData } from \"./json\";\nimport { restore } from \"./restore\";\nimport { ImportedLibraryData } from \"./types\";\n\nconst parseFileContents = async (blob: Blob | File) => {\n  let contents: string;\n\n  if (blob.type === \"image/png\") {\n    try {\n      return await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).decodePngMetadata(blob);\n    } catch (error) {\n      if (error.message === \"INVALID\") {\n        throw new Error(t(\"alerts.imageDoesNotContainScene\"));\n      } else {\n        throw new Error(t(\"alerts.cannotRestoreFromImage\"));\n      }\n    }\n  } else {\n    if (\"text\" in Blob) {\n      contents = await blob.text();\n    } else {\n      contents = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsText(blob, \"utf8\");\n        reader.onloadend = () => {\n          if (reader.readyState === FileReader.DONE) {\n            resolve(reader.result as string);\n          }\n        };\n      });\n    }\n    if (blob.type === \"image/svg+xml\") {\n      try {\n        return await (\n          await import(/* webpackChunkName: \"image\" */ \"./image\")\n        ).decodeSvgMetadata({\n          svg: contents,\n        });\n      } catch (error) {\n        if (error.message === \"INVALID\") {\n          throw new Error(t(\"alerts.imageDoesNotContainScene\"));\n        } else {\n          throw new Error(t(\"alerts.cannotRestoreFromImage\"));\n        }\n      }\n    }\n  }\n  return contents;\n};\n\nexport const getMimeType = (blob: Blob | string): string => {\n  let name: string;\n  if (typeof blob === \"string\") {\n    name = blob;\n  } else {\n    if (blob.type) {\n      return blob.type;\n    }\n    name = blob.name || \"\";\n  }\n  if (/\\.(excalidraw|json)$/.test(name)) {\n    return \"application/json\";\n  } else if (/\\.png$/.test(name)) {\n    return \"image/png\";\n  } else if (/\\.jpe?g$/.test(name)) {\n    return \"image/jpeg\";\n  } else if (/\\.svg$/.test(name)) {\n    return \"image/svg+xml\";\n  }\n  return \"\";\n};\n\nexport const getFileHandleType = (handle: FileSystemHandle | null) => {\n  if (!handle) {\n    return null;\n  }\n\n  return handle.name.match(/\\.(json|excalidraw|png|svg)$/)?.[1] || null;\n};\n\nexport const isImageFileHandleType = (\n  type: string | null,\n): type is \"png\" | \"svg\" => {\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const isImageFileHandle = (handle: FileSystemHandle | null) => {\n  const type = getFileHandleType(handle);\n  return type === \"png\" || type === \"svg\";\n};\n\nexport const loadFromBlob = async (\n  blob: Blob,\n  /** @see restore.localAppState */\n  localAppState: AppState | null,\n  localElements: readonly ExcalidrawElement[] | null,\n) => {\n  const contents = await parseFileContents(blob);\n  try {\n    const data = JSON.parse(contents);\n    if (!isValidExcalidrawData(data)) {\n      throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n    }\n    const result = restore(\n      {\n        elements: clearElementsForExport(data.elements || []),\n        appState: {\n          theme: localAppState?.theme,\n          fileHandle: blob.handle || null,\n          ...cleanAppStateForExport(data.appState || {}),\n          ...(localAppState\n            ? calculateScrollCenter(data.elements || [], localAppState, null)\n            : {}),\n        },\n      },\n      localAppState,\n      localElements,\n    );\n\n    return result;\n  } catch (error) {\n    console.error(error.message);\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n};\n\nexport const loadLibraryFromBlob = async (blob: Blob) => {\n  const contents = await parseFileContents(blob);\n  const data: ImportedLibraryData = JSON.parse(contents);\n  if (data.type !== EXPORT_DATA_TYPES.excalidrawLibrary) {\n    throw new Error(t(\"alerts.couldNotLoadInvalidFile\"));\n  }\n  return data;\n};\n\nexport const canvasToBlob = async (\n  canvas: HTMLCanvasElement,\n): Promise<Blob> => {\n  return new Promise((resolve, reject) => {\n    try {\n      canvas.toBlob((blob) => {\n        if (!blob) {\n          return reject(\n            new CanvasError(\n              t(\"canvasError.canvasTooBig\"),\n              \"CANVAS_POSSIBLY_TOO_BIG\",\n            ),\n          );\n        }\n        resolve(blob);\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n","import { fileOpen, fileSave } from \"browser-fs-access\";\nimport { cleanAppStateForExport } from \"../appState\";\nimport { EXPORT_DATA_TYPES, EXPORT_SOURCE, MIME_TYPES } from \"../constants\";\nimport { clearElementsForExport } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { isImageFileHandle, loadFromBlob } from \"./blob\";\n\nimport {\n  ExportedDataState,\n  ImportedDataState,\n  ExportedLibraryData,\n} from \"./types\";\nimport Library from \"./library\";\n\nexport const serializeAsJSON = (\n  elements: readonly ExcalidrawElement[],\n  appState: Partial<AppState>,\n): string => {\n  const data: ExportedDataState = {\n    type: EXPORT_DATA_TYPES.excalidraw,\n    version: 2,\n    source: EXPORT_SOURCE,\n    elements: clearElementsForExport(elements),\n    appState: cleanAppStateForExport(appState),\n  };\n\n  return JSON.stringify(data, null, 2);\n};\n\nexport const saveAsJSON = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const serialized = serializeAsJSON(elements, appState);\n  const blob = new Blob([serialized], {\n    type: MIME_TYPES.excalidraw,\n  });\n\n  const fileHandle = await fileSave(\n    blob,\n    {\n      fileName: `${appState.name}.excalidraw`,\n      description: \"Excalidraw file\",\n      extensions: [\".excalidraw\"],\n    },\n    isImageFileHandle(appState.fileHandle) ? null : appState.fileHandle,\n  );\n  return { fileHandle };\n};\n\nexport const loadFromJSON = async (\n  localAppState: AppState,\n  localElements: readonly ExcalidrawElement[] | null,\n) => {\n  const blob = await fileOpen({\n    description: \"Excalidraw files\",\n    // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n    // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n    /*\n    extensions: [\".json\", \".excalidraw\", \".png\", \".svg\"],\n    mimeTypes: [\n      MIME_TYPES.excalidraw,\n      \"application/json\",\n      \"image/png\",\n      \"image/svg+xml\",\n    ],\n    */\n  });\n  return loadFromBlob(blob, localAppState, localElements);\n};\n\nexport const isValidExcalidrawData = (data?: {\n  type?: any;\n  elements?: any;\n  appState?: any;\n}): data is ImportedDataState => {\n  return (\n    data?.type === EXPORT_DATA_TYPES.excalidraw &&\n    (!data.elements ||\n      (Array.isArray(data.elements) &&\n        (!data.appState || typeof data.appState === \"object\")))\n  );\n};\n\nexport const isValidLibrary = (json: any) => {\n  return (\n    typeof json === \"object\" &&\n    json &&\n    json.type === EXPORT_DATA_TYPES.excalidrawLibrary &&\n    json.version === 1\n  );\n};\n\nexport const saveLibraryAsJSON = async (library: Library) => {\n  const libraryItems = await library.loadLibrary();\n  const data: ExportedLibraryData = {\n    type: EXPORT_DATA_TYPES.excalidrawLibrary,\n    version: 1,\n    source: EXPORT_SOURCE,\n    library: libraryItems,\n  };\n  const serialized = JSON.stringify(data, null, 2);\n  const fileName = \"library.excalidrawlib\";\n  const blob = new Blob([serialized], {\n    type: MIME_TYPES.excalidrawlib,\n  });\n  await fileSave(blob, {\n    fileName,\n    description: \"Excalidraw library file\",\n    extensions: [\".excalidrawlib\"],\n  });\n};\n\nexport const importLibraryFromJSON = async (library: Library) => {\n  const blob = await fileOpen({\n    description: \"Excalidraw library files\",\n    // ToDo: Be over-permissive until https://bugs.webkit.org/show_bug.cgi?id=34442\n    // gets resolved. Else, iOS users cannot open `.excalidraw` files.\n    /*\n    extensions: [\".json\", \".excalidrawlib\"],\n    */\n  });\n  await library.importLibrary(blob);\n};\n","import rough from \"roughjs/bin/rough\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { renderScene, renderSceneToSvg } from \"../renderer/renderScene\";\nimport { distance, SVG_NS } from \"../utils\";\nimport { AppState } from \"../types\";\nimport { DEFAULT_EXPORT_PADDING, THEME_FILTER } from \"../constants\";\nimport { getDefaultAppState } from \"../appState\";\nimport { serializeAsJSON } from \"../data/json\";\n\nexport const SVG_EXPORT_TAG = `<!-- svg-source:excalidraw -->`;\n\nexport const exportToCanvas = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n  },\n  createCanvas: (\n    width: number,\n    height: number,\n  ) => { canvas: HTMLCanvasElement; scale: number } = (width, height) => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = width * appState.exportScale;\n    canvas.height = height * appState.exportScale;\n    return { canvas, scale: appState.exportScale };\n  },\n) => {\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  const { canvas, scale = 1 } = createCanvas(width, height);\n\n  renderScene(\n    elements,\n    appState,\n    null,\n    scale,\n    rough.canvas(canvas),\n    canvas,\n    {\n      viewBackgroundColor: exportBackground ? viewBackgroundColor : null,\n      exportWithDarkMode: appState.exportWithDarkMode,\n      scrollX: -minX + exportPadding,\n      scrollY: -minY + exportPadding,\n      zoom: getDefaultAppState().zoom,\n      remotePointerViewportCoords: {},\n      remoteSelectedElementIds: {},\n      shouldCacheIgnoreZoom: false,\n      remotePointerUsernames: {},\n      remotePointerUserStates: {},\n    },\n    {\n      renderScrollbars: false,\n      renderSelection: false,\n      renderOptimizations: false,\n      renderGrid: false,\n    },\n  );\n\n  return canvas;\n};\n\nexport const exportToSvg = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    exportScale?: number;\n    viewBackgroundColor: string;\n    exportWithDarkMode?: boolean;\n    exportEmbedScene?: boolean;\n  },\n): Promise<SVGSVGElement> => {\n  const {\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    exportScale = 1,\n    exportEmbedScene,\n  } = appState;\n  let metadata = \"\";\n  if (exportEmbedScene) {\n    try {\n      metadata = await (\n        await import(/* webpackChunkName: \"image\" */ \"../../src/data/image\")\n      ).encodeSvgMetadata({\n        text: serializeAsJSON(elements, appState),\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  const [minX, minY, width, height] = getCanvasSize(elements, exportPadding);\n\n  // initialze SVG root\n  const svgRoot = document.createElementNS(SVG_NS, \"svg\");\n  svgRoot.setAttribute(\"version\", \"1.1\");\n  svgRoot.setAttribute(\"xmlns\", SVG_NS);\n  svgRoot.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n  svgRoot.setAttribute(\"width\", `${width * exportScale}`);\n  svgRoot.setAttribute(\"height\", `${height * exportScale}`);\n  if (appState.exportWithDarkMode) {\n    svgRoot.setAttribute(\"filter\", THEME_FILTER);\n  }\n\n  svgRoot.innerHTML = `\n  ${SVG_EXPORT_TAG}\n  ${metadata}\n  <defs>\n    <style>\n      @font-face {\n        font-family: \"Virgil\";\n        src: url(\"https://excalidraw.com/Virgil.woff2\");\n      }\n      @font-face {\n        font-family: \"Cascadia\";\n        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n      }\n    </style>\n  </defs>\n  `;\n\n  // render background rect\n  if (appState.exportBackground && viewBackgroundColor) {\n    const rect = svgRoot.ownerDocument!.createElementNS(SVG_NS, \"rect\");\n    rect.setAttribute(\"x\", \"0\");\n    rect.setAttribute(\"y\", \"0\");\n    rect.setAttribute(\"width\", `${width}`);\n    rect.setAttribute(\"height\", `${height}`);\n    rect.setAttribute(\"fill\", viewBackgroundColor);\n    svgRoot.appendChild(rect);\n  }\n\n  const rsvg = rough.svg(svgRoot);\n  renderSceneToSvg(elements, rsvg, svgRoot, {\n    offsetX: -minX + exportPadding,\n    offsetY: -minY + exportPadding,\n  });\n\n  return svgRoot;\n};\n\n// calculate smallest area to fit the contents in\nconst getCanvasSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n): [number, number, number, number] => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  const width = distance(minX, maxX) + exportPadding * 2;\n  const height = distance(minY, maxY) + exportPadding + exportPadding;\n\n  return [minX, minY, width, height];\n};\n\nexport const getExportSize = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  exportPadding: number,\n  scale: number,\n): [number, number] => {\n  const [, , width, height] = getCanvasSize(\n    elements,\n    exportPadding,\n  ).map((dimension) => Math.trunc(dimension * scale));\n\n  return [width, height];\n};\n","import colors from \"./colors\";\nimport { DEFAULT_FONT_FAMILY, DEFAULT_FONT_SIZE, ENV } from \"./constants\";\nimport { newElement, newLinearElement, newTextElement } from \"./element\";\nimport { NonDeletedExcalidrawElement } from \"./element/types\";\nimport { randomId } from \"./random\";\n\nexport type ChartElements = readonly NonDeletedExcalidrawElement[];\n\nconst BAR_WIDTH = 32;\nconst BAR_GAP = 12;\nconst BAR_HEIGHT = 256;\nconst GRID_OPACITY = 50;\n\nexport interface Spreadsheet {\n  title: string | null;\n  labels: string[] | null;\n  values: number[];\n}\n\nexport const NOT_SPREADSHEET = \"NOT_SPREADSHEET\";\nexport const VALID_SPREADSHEET = \"VALID_SPREADSHEET\";\n\ntype ParseSpreadsheetResult =\n  | { type: typeof NOT_SPREADSHEET; reason: string }\n  | { type: typeof VALID_SPREADSHEET; spreadsheet: Spreadsheet };\n\nconst tryParseNumber = (s: string): number | null => {\n  const match = /^[$€£¥₩]?([0-9,]+(\\.[0-9]+)?)$/.exec(s);\n  if (!match) {\n    return null;\n  }\n  return parseFloat(match[1].replace(/,/g, \"\"));\n};\n\nconst isNumericColumn = (lines: string[][], columnIndex: number) =>\n  lines.slice(1).every((line) => tryParseNumber(line[columnIndex]) !== null);\n\nconst tryParseCells = (cells: string[][]): ParseSpreadsheetResult => {\n  const numCols = cells[0].length;\n\n  if (numCols > 2) {\n    return { type: NOT_SPREADSHEET, reason: \"More than 2 columns\" };\n  }\n\n  if (numCols === 1) {\n    if (!isNumericColumn(cells, 0)) {\n      return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n    }\n\n    const hasHeader = tryParseNumber(cells[0][0]) === null;\n    const values = (hasHeader ? cells.slice(1) : cells).map((line) =>\n      tryParseNumber(line[0]),\n    );\n\n    if (values.length < 2) {\n      return { type: NOT_SPREADSHEET, reason: \"Less than two rows\" };\n    }\n\n    return {\n      type: VALID_SPREADSHEET,\n      spreadsheet: {\n        title: hasHeader ? cells[0][0] : null,\n        labels: null,\n        values: values as number[],\n      },\n    };\n  }\n\n  const valueColumnIndex = isNumericColumn(cells, 0) ? 0 : 1;\n\n  if (!isNumericColumn(cells, valueColumnIndex)) {\n    return { type: NOT_SPREADSHEET, reason: \"Value is not numeric\" };\n  }\n\n  const labelColumnIndex = (valueColumnIndex + 1) % 2;\n  const hasHeader = tryParseNumber(cells[0][valueColumnIndex]) === null;\n  const rows = hasHeader ? cells.slice(1) : cells;\n\n  if (rows.length < 2) {\n    return { type: NOT_SPREADSHEET, reason: \"Less than 2 rows\" };\n  }\n\n  return {\n    type: VALID_SPREADSHEET,\n    spreadsheet: {\n      title: hasHeader ? cells[0][valueColumnIndex] : null,\n      labels: rows.map((row) => row[labelColumnIndex]),\n      values: rows.map((row) => tryParseNumber(row[valueColumnIndex])!),\n    },\n  };\n};\n\nconst transposeCells = (cells: string[][]) => {\n  const nextCells: string[][] = [];\n  for (let col = 0; col < cells[0].length; col++) {\n    const nextCellRow: string[] = [];\n    for (let row = 0; row < cells.length; row++) {\n      nextCellRow.push(cells[row][col]);\n    }\n    nextCells.push(nextCellRow);\n  }\n  return nextCells;\n};\n\nexport const tryParseSpreadsheet = (text: string): ParseSpreadsheetResult => {\n  // Copy/paste from excel, spreadhseets, tsv, csv.\n  // For now we only accept 2 columns with an optional header\n\n  // Check for tab separated values\n  let lines = text\n    .trim()\n    .split(\"\\n\")\n    .map((line) => line.trim().split(\"\\t\"));\n\n  // Check for comma separated files\n  if (lines.length && lines[0].length !== 2) {\n    lines = text\n      .trim()\n      .split(\"\\n\")\n      .map((line) => line.trim().split(\",\"));\n  }\n\n  if (lines.length === 0) {\n    return { type: NOT_SPREADSHEET, reason: \"No values\" };\n  }\n\n  const numColsFirstLine = lines[0].length;\n  const isSpreadsheet = lines.every((line) => line.length === numColsFirstLine);\n\n  if (!isSpreadsheet) {\n    return {\n      type: NOT_SPREADSHEET,\n      reason: \"All rows don't have same number of columns\",\n    };\n  }\n\n  const result = tryParseCells(lines);\n  if (result.type !== VALID_SPREADSHEET) {\n    const transposedResults = tryParseCells(transposeCells(lines));\n    if (transposedResults.type === VALID_SPREADSHEET) {\n      return transposedResults;\n    }\n  }\n  return result;\n};\n\nconst bgColors = colors.elementBackground.slice(\n  2,\n  colors.elementBackground.length,\n);\n\n// Put all the common properties here so when the whole chart is selected\n// the properties dialog shows the correct selected values\nconst commonProps = {\n  fillStyle: \"hachure\",\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontSize: DEFAULT_FONT_SIZE,\n  opacity: 100,\n  roughness: 1,\n  strokeColor: colors.elementStroke[0],\n  strokeSharpness: \"sharp\",\n  strokeStyle: \"solid\",\n  strokeWidth: 1,\n  verticalAlign: \"middle\",\n} as const;\n\nconst getChartDimentions = (spreadsheet: Spreadsheet) => {\n  const chartWidth =\n    (BAR_WIDTH + BAR_GAP) * spreadsheet.values.length + BAR_GAP;\n  const chartHeight = BAR_HEIGHT + BAR_GAP * 2;\n  return { chartWidth, chartHeight };\n};\n\nconst chartXLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  return (\n    spreadsheet.labels?.map((label, index) => {\n      return newTextElement({\n        groupIds: [groupId],\n        backgroundColor,\n        ...commonProps,\n        text: label.length > 8 ? `${label.slice(0, 5)}...` : label,\n        x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP * 2,\n        y: y + BAR_GAP / 2,\n        width: BAR_WIDTH,\n        angle: 5.87,\n        fontSize: 16,\n        textAlign: \"center\",\n        verticalAlign: \"top\",\n      });\n    }) || []\n  );\n};\n\nconst chartYLabels = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const minYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_GAP,\n    text: \"0\",\n    textAlign: \"right\",\n  });\n\n  const maxYLabel = newTextElement({\n    groupIds: [groupId],\n    backgroundColor,\n    ...commonProps,\n    x: x - BAR_GAP,\n    y: y - BAR_HEIGHT - minYLabel.height / 2,\n    text: Math.max(...spreadsheet.values).toLocaleString(),\n    textAlign: \"right\",\n  });\n\n  return [minYLabel, maxYLabel];\n};\n\nconst chartLines = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimentions(spreadsheet);\n  const xLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    width: chartWidth,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  const yLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: chartHeight,\n    points: [\n      [0, 0],\n      [0, -chartHeight],\n    ],\n  });\n\n  const maxLine = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x,\n    y: y - BAR_HEIGHT - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    strokeStyle: \"dotted\",\n    width: chartWidth,\n    opacity: GRID_OPACITY,\n    points: [\n      [0, 0],\n      [chartWidth, 0],\n    ],\n  });\n\n  return [xLine, yLine, maxLine];\n};\n\n// For the maths behind it https://excalidraw.com/#json=6320864370884608,O_5xfD-Agh32tytHpRJx1g\nconst chartBaseElements = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n  groupId: string,\n  backgroundColor: string,\n  debug?: boolean,\n): ChartElements => {\n  const { chartWidth, chartHeight } = getChartDimentions(spreadsheet);\n\n  const title = spreadsheet.title\n    ? newTextElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        text: spreadsheet.title,\n        x: x + chartWidth / 2,\n        y: y - BAR_HEIGHT - BAR_GAP * 2 - DEFAULT_FONT_SIZE,\n        strokeSharpness: \"sharp\",\n        strokeStyle: \"solid\",\n        textAlign: \"center\",\n      })\n    : null;\n\n  const debugRect = debug\n    ? newElement({\n        backgroundColor,\n        groupIds: [groupId],\n        ...commonProps,\n        type: \"rectangle\",\n        x,\n        y: y - chartHeight,\n        width: chartWidth,\n        height: chartHeight,\n        strokeColor: colors.elementStroke[0],\n        fillStyle: \"solid\",\n        opacity: 6,\n      })\n    : null;\n\n  return [\n    ...(debugRect ? [debugRect] : []),\n    ...(title ? [title] : []),\n    ...chartXLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartYLabels(spreadsheet, x, y, groupId, backgroundColor),\n    ...chartLines(spreadsheet, x, y, groupId, backgroundColor),\n  ];\n};\n\nconst chartTypeBar = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  const bars = spreadsheet.values.map((value, index) => {\n    const barHeight = (value / max) * BAR_HEIGHT;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"rectangle\",\n      x: x + index * (BAR_WIDTH + BAR_GAP) + BAR_GAP,\n      y: y - barHeight - BAR_GAP,\n      width: BAR_WIDTH,\n      height: barHeight,\n    });\n  });\n\n  return [\n    ...bars,\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n  ];\n};\n\nconst chartTypeLine = (\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  const max = Math.max(...spreadsheet.values);\n  const groupId = randomId();\n  const backgroundColor = bgColors[Math.floor(Math.random() * bgColors.length)];\n\n  let index = 0;\n  const points = [];\n  for (const value of spreadsheet.values) {\n    const cx = index * (BAR_WIDTH + BAR_GAP);\n    const cy = -(value / max) * BAR_HEIGHT;\n    points.push([cx, cy]);\n    index++;\n  }\n\n  const maxX = Math.max(...points.map((element) => element[0]));\n  const maxY = Math.max(...points.map((element) => element[1]));\n  const minX = Math.min(...points.map((element) => element[0]));\n  const minY = Math.min(...points.map((element) => element[1]));\n\n  const line = newLinearElement({\n    backgroundColor,\n    groupIds: [groupId],\n    ...commonProps,\n    type: \"line\",\n    x: x + BAR_GAP + BAR_WIDTH / 2,\n    y: y - BAR_GAP,\n    startArrowhead: null,\n    endArrowhead: null,\n    height: maxY - minY,\n    width: maxX - minX,\n    strokeWidth: 2,\n    points: points as any,\n  });\n\n  const dots = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = -(value / max) * BAR_HEIGHT + BAR_GAP / 2;\n    return newElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      fillStyle: \"solid\",\n      strokeWidth: 2,\n      type: \"ellipse\",\n      x: x + cx + BAR_WIDTH / 2,\n      y: y + cy - BAR_GAP * 2,\n      width: BAR_GAP,\n      height: BAR_GAP,\n    });\n  });\n\n  const lines = spreadsheet.values.map((value, index) => {\n    const cx = index * (BAR_WIDTH + BAR_GAP) + BAR_GAP / 2;\n    const cy = (value / max) * BAR_HEIGHT + BAR_GAP / 2 + BAR_GAP;\n    return newLinearElement({\n      backgroundColor,\n      groupIds: [groupId],\n      ...commonProps,\n      type: \"line\",\n      x: x + cx + BAR_WIDTH / 2 + BAR_GAP / 2,\n      y: y - cy,\n      startArrowhead: null,\n      endArrowhead: null,\n      height: cy,\n      strokeStyle: \"dotted\",\n      opacity: GRID_OPACITY,\n      points: [\n        [0, 0],\n        [0, cy],\n      ],\n    });\n  });\n\n  return [\n    ...chartBaseElements(\n      spreadsheet,\n      x,\n      y,\n      groupId,\n      backgroundColor,\n      process.env.NODE_ENV === ENV.DEVELOPMENT,\n    ),\n    line,\n    ...lines,\n    ...dots,\n  ];\n};\n\nexport const renderSpreadsheet = (\n  chartType: string,\n  spreadsheet: Spreadsheet,\n  x: number,\n  y: number,\n): ChartElements => {\n  if (chartType === \"line\") {\n    return chartTypeLine(spreadsheet, x, y);\n  }\n  return chartTypeBar(spreadsheet, x, y);\n};\n","import {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"./element/types\";\nimport { getSelectedElements } from \"./scene\";\nimport { AppState } from \"./types\";\nimport { SVG_EXPORT_TAG } from \"./scene/export\";\nimport { tryParseSpreadsheet, Spreadsheet, VALID_SPREADSHEET } from \"./charts\";\nimport { EXPORT_DATA_TYPES } from \"./constants\";\n\ntype ElementsClipboard = {\n  type: typeof EXPORT_DATA_TYPES.excalidrawClipboard;\n  elements: ExcalidrawElement[];\n};\n\nexport interface ClipboardData {\n  spreadsheet?: Spreadsheet;\n  elements?: readonly ExcalidrawElement[];\n  text?: string;\n  errorMessage?: string;\n}\n\nlet CLIPBOARD = \"\";\nlet PREFER_APP_CLIPBOARD = false;\n\nexport const probablySupportsClipboardReadText =\n  \"clipboard\" in navigator && \"readText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardWriteText =\n  \"clipboard\" in navigator && \"writeText\" in navigator.clipboard;\n\nexport const probablySupportsClipboardBlob =\n  \"clipboard\" in navigator &&\n  \"write\" in navigator.clipboard &&\n  \"ClipboardItem\" in window &&\n  \"toBlob\" in HTMLCanvasElement.prototype;\n\nconst clipboardContainsElements = (\n  contents: any,\n): contents is { elements: ExcalidrawElement[] } => {\n  if (\n    [\n      EXPORT_DATA_TYPES.excalidraw,\n      EXPORT_DATA_TYPES.excalidrawClipboard,\n    ].includes(contents?.type) &&\n    Array.isArray(contents.elements)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport const copyToClipboard = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  const contents: ElementsClipboard = {\n    type: EXPORT_DATA_TYPES.excalidrawClipboard,\n    elements: getSelectedElements(elements, appState),\n  };\n  const json = JSON.stringify(contents);\n  CLIPBOARD = json;\n  try {\n    PREFER_APP_CLIPBOARD = false;\n    await copyTextToSystemClipboard(json);\n  } catch (error) {\n    PREFER_APP_CLIPBOARD = true;\n    console.error(error);\n  }\n};\n\nconst getAppClipboard = (): Partial<ElementsClipboard> => {\n  if (!CLIPBOARD) {\n    return {};\n  }\n\n  try {\n    return JSON.parse(CLIPBOARD);\n  } catch (error) {\n    console.error(error);\n    return {};\n  }\n};\n\nconst parsePotentialSpreadsheet = (\n  text: string,\n): { spreadsheet: Spreadsheet } | { errorMessage: string } | null => {\n  const result = tryParseSpreadsheet(text);\n  if (result.type === VALID_SPREADSHEET) {\n    return { spreadsheet: result.spreadsheet };\n  }\n  return null;\n};\n\n/**\n * Retrieves content from system clipboard (either from ClipboardEvent or\n *  via async clipboard API if supported)\n */\nconst getSystemClipboard = async (\n  event: ClipboardEvent | null,\n): Promise<string> => {\n  try {\n    const text = event\n      ? event.clipboardData?.getData(\"text/plain\").trim()\n      : probablySupportsClipboardReadText &&\n        (await navigator.clipboard.readText());\n\n    return text || \"\";\n  } catch {\n    return \"\";\n  }\n};\n\n/**\n * Attemps to parse clipboard. Prefers system clipboard.\n */\nexport const parseClipboard = async (\n  event: ClipboardEvent | null,\n): Promise<ClipboardData> => {\n  const systemClipboard = await getSystemClipboard(event);\n\n  // if system clipboard empty, couldn't be resolved, or contains previously\n  // copied excalidraw scene as SVG, fall back to previously copied excalidraw\n  // elements\n  if (!systemClipboard || systemClipboard.includes(SVG_EXPORT_TAG)) {\n    return getAppClipboard();\n  }\n\n  // if system clipboard contains spreadsheet, use it even though it's\n  // technically possible it's staler than in-app clipboard\n  const spreadsheetResult = parsePotentialSpreadsheet(systemClipboard);\n  if (spreadsheetResult) {\n    return spreadsheetResult;\n  }\n\n  const appClipboardData = getAppClipboard();\n\n  try {\n    const systemClipboardData = JSON.parse(systemClipboard);\n    if (clipboardContainsElements(systemClipboardData)) {\n      return { elements: systemClipboardData.elements };\n    }\n    return appClipboardData;\n  } catch {\n    // system clipboard doesn't contain excalidraw elements → return plaintext\n    // unless we set a flag to prefer in-app clipboard because browser didn't\n    // support storing to system clipboard on copy\n    return PREFER_APP_CLIPBOARD && appClipboardData.elements\n      ? appClipboardData\n      : { text: systemClipboard };\n  }\n};\n\nexport const copyBlobToClipboardAsPng = async (blob: Blob) => {\n  await navigator.clipboard.write([\n    new window.ClipboardItem({ \"image/png\": blob }),\n  ]);\n};\n\nexport const copyTextToSystemClipboard = async (text: string | null) => {\n  let copied = false;\n  if (probablySupportsClipboardWriteText) {\n    try {\n      // NOTE: doesn't work on FF on non-HTTPS domains, or when document\n      // not focused\n      await navigator.clipboard.writeText(text || \"\");\n      copied = true;\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  // Note that execCommand doesn't allow copying empty strings, so if we're\n  // clearing clipboard using this API, we must copy at least an empty char\n  if (!copied && !copyTextViaExecCommand(text || \" \")) {\n    throw new Error(\"couldn't copy\");\n  }\n};\n\n// adapted from https://github.com/zenorocha/clipboard.js/blob/ce79f170aa655c408b6aab33c9472e8e4fa52e19/src/clipboard-action.js#L48\nconst copyTextViaExecCommand = (text: string) => {\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const textarea = document.createElement(\"textarea\");\n\n  textarea.style.border = \"0\";\n  textarea.style.padding = \"0\";\n  textarea.style.margin = \"0\";\n  textarea.style.position = \"absolute\";\n  textarea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\";\n  const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  textarea.style.top = `${yPosition}px`;\n  // Prevent zooming on iOS\n  textarea.style.fontSize = \"12pt\";\n\n  textarea.setAttribute(\"readonly\", \"\");\n  textarea.value = text;\n\n  document.body.appendChild(textarea);\n\n  let success = false;\n\n  try {\n    textarea.select();\n    textarea.setSelectionRange(0, textarea.value.length);\n\n    success = document.execCommand(\"copy\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  textarea.remove();\n\n  return success;\n};\n","import { fileSave, FileSystemHandle } from \"browser-fs-access\";\nimport {\n  copyBlobToClipboardAsPng,\n  copyTextToSystemClipboard,\n} from \"../clipboard\";\nimport { DEFAULT_EXPORT_PADDING } from \"../constants\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToCanvas, exportToSvg } from \"../scene/export\";\nimport { ExportType } from \"../scene/types\";\nimport { AppState } from \"../types\";\nimport { canvasToBlob } from \"./blob\";\nimport { serializeAsJSON } from \"./json\";\n\nexport { loadFromBlob } from \"./blob\";\nexport { loadFromJSON, saveAsJSON } from \"./json\";\n\nexport const exportCanvas = async (\n  type: ExportType,\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n  {\n    exportBackground,\n    exportPadding = DEFAULT_EXPORT_PADDING,\n    viewBackgroundColor,\n    name,\n    fileHandle = null,\n  }: {\n    exportBackground: boolean;\n    exportPadding?: number;\n    viewBackgroundColor: string;\n    name: string;\n    fileHandle?: FileSystemHandle | null;\n  },\n) => {\n  if (elements.length === 0) {\n    throw new Error(t(\"alerts.cannotExportEmptyCanvas\"));\n  }\n  if (type === \"svg\" || type === \"clipboard-svg\") {\n    const tempSvg = await exportToSvg(elements, {\n      exportBackground,\n      exportWithDarkMode: appState.exportWithDarkMode,\n      viewBackgroundColor,\n      exportPadding,\n      exportScale: appState.exportScale,\n      exportEmbedScene: appState.exportEmbedScene && type === \"svg\",\n    });\n    if (type === \"svg\") {\n      return await fileSave(\n        new Blob([tempSvg.outerHTML], { type: \"image/svg+xml\" }),\n        {\n          fileName: `${name}.svg`,\n          extensions: [\".svg\"],\n        },\n        fileHandle,\n      );\n    } else if (type === \"clipboard-svg\") {\n      await copyTextToSystemClipboard(tempSvg.outerHTML);\n      return;\n    }\n  }\n\n  const tempCanvas = exportToCanvas(elements, appState, {\n    exportBackground,\n    viewBackgroundColor,\n    exportPadding,\n  });\n  tempCanvas.style.display = \"none\";\n  document.body.appendChild(tempCanvas);\n  let blob = await canvasToBlob(tempCanvas);\n  tempCanvas.remove();\n\n  if (type === \"png\") {\n    const fileName = `${name}.png`;\n    if (appState.exportEmbedScene) {\n      blob = await (\n        await import(/* webpackChunkName: \"image\" */ \"./image\")\n      ).encodePngMetadata({\n        blob,\n        metadata: serializeAsJSON(elements, appState),\n      });\n    }\n\n    return await fileSave(\n      blob,\n      {\n        fileName,\n        extensions: [\".png\"],\n      },\n      fileHandle,\n    );\n  } else if (type === \"clipboard\") {\n    try {\n      await copyBlobToClipboardAsPng(blob);\n    } catch (error) {\n      if (error.name === \"CANVAS_POSSIBLY_TOO_BIG\") {\n        throw error;\n      }\n      throw new Error(t(\"alerts.couldNotCopyToClipboard\"));\n    }\n  }\n};\n","import { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { exportCanvas } from \".\";\nimport { getNonDeletedElements } from \"../element\";\nimport { getFileHandleType, isImageFileHandleType } from \"./blob\";\n\nexport const resaveAsImageWithScene = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const { exportBackground, viewBackgroundColor, name, fileHandle } = appState;\n\n  const fileHandleType = getFileHandleType(fileHandle);\n\n  if (!fileHandle || !isImageFileHandleType(fileHandleType)) {\n    throw new Error(\n      \"fileHandle should exist and should be of type svg or png when resaving\",\n    );\n  }\n  appState = {\n    ...appState,\n    exportEmbedScene: true,\n  };\n\n  await exportCanvas(\n    fileHandleType,\n    getNonDeletedElements(elements),\n    appState,\n    {\n      exportBackground,\n      viewBackgroundColor,\n      name,\n      fileHandle,\n    },\n  );\n\n  return { fileHandle };\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { checkIcon } from \"./icons\";\n\nimport \"./CheckboxItem.scss\";\n\nexport const CheckboxItem: React.FC<{\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n}> = ({ children, checked, onChange }) => {\n  return (\n    <div\n      className={clsx(\"Checkbox\", { \"is-checked\": checked })}\n      onClick={(event) => {\n        onChange(!checked);\n        ((event.currentTarget as HTMLDivElement).querySelector(\n          \".Checkbox-box\",\n        ) as HTMLButtonElement).focus();\n      }}\n    >\n      <button className=\"Checkbox-box\" role=\"checkbox\" aria-checked={checked}>\n        {checkIcon}\n      </button>\n      <div className=\"Checkbox-label\">{children}</div>\n    </div>\n  );\n};\n","import \"./Stack.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype StackProps = {\n  children: React.ReactNode;\n  gap?: number;\n  align?: \"start\" | \"center\" | \"end\" | \"baseline\";\n  justifyContent?: \"center\" | \"space-around\" | \"space-between\";\n  className?: string | boolean;\n  style?: React.CSSProperties;\n};\n\nconst RowStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n  style,\n}: StackProps) => {\n  return (\n    <div\n      className={clsx(\"Stack Stack_horizontal\", className)}\n      style={{\n        \"--gap\": gap,\n        alignItems: align,\n        justifyContent,\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst ColStack = ({\n  children,\n  gap,\n  align,\n  justifyContent,\n  className,\n}: StackProps) => {\n  return (\n    <div\n      className={clsx(\"Stack Stack_vertical\", className)}\n      style={{\n        \"--gap\": gap,\n        justifyItems: align,\n        justifyContent,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default {\n  Row: RowStack,\n  Col: ColStack,\n};\n","import React from \"react\";\nimport Stack from \"../components/Stack\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { save, file } from \"../components/icons\";\nimport { t } from \"../i18n\";\n\nimport \"./ActiveFile.scss\";\n\ntype ActiveFileProps = {\n  fileName?: string;\n  onSave: () => void;\n};\n\nexport const ActiveFile = ({ fileName, onSave }: ActiveFileProps) => (\n  <Stack.Row className=\"ActiveFile\" gap={1} align=\"center\">\n    <span className=\"ActiveFile__fileName\">\n      {file}\n      <span>{fileName}</span>\n    </span>\n    <ToolButton\n      type=\"icon\"\n      icon={save}\n      title={t(\"buttons.save\")}\n      aria-label={t(\"buttons.save\")}\n      onClick={onSave}\n      data-testid=\"save-button\"\n    />\n  </Stack.Row>\n);\n","import React from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport { load, questionCircle, saveAs } from \"../components/icons\";\nimport { ProjectName } from \"../components/ProjectName\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport \"../components/ToolIcon.scss\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { DarkModeToggle, Appearence } from \"../components/DarkModeToggle\";\nimport { loadFromJSON, saveAsJSON } from \"../data\";\nimport { resaveAsImageWithScene } from \"../data/resave\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { supported as fsSupported } from \"browser-fs-access\";\nimport { CheckboxItem } from \"../components/CheckboxItem\";\nimport { getExportSize } from \"../scene/export\";\nimport { DEFAULT_EXPORT_PADDING, EXPORT_SCALES } from \"../constants\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ActiveFile } from \"../components/ActiveFile\";\nimport { isImageFileHandle } from \"../data/blob\";\n\nexport const actionChangeProjectName = register({\n  name: \"changeProjectName\",\n  perform: (_elements, appState, value) => {\n    trackEvent(\"change\", \"title\");\n    return { appState: { ...appState, name: value }, commitToHistory: false };\n  },\n  PanelComponent: ({ appState, updateData, appProps }) => (\n    <ProjectName\n      label={t(\"labels.fileTitle\")}\n      value={appState.name || \"Unnamed\"}\n      onChange={(name: string) => updateData(name)}\n      isNameEditable={\n        typeof appProps.name === \"undefined\" && !appState.viewModeEnabled\n      }\n    />\n  ),\n});\n\nexport const actionChangeExportScale = register({\n  name: \"changeExportScale\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportScale: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ elements: allElements, appState, updateData }) => {\n    const elements = getNonDeletedElements(allElements);\n    const exportSelected = isSomeElementSelected(elements, appState);\n    const exportedElements = exportSelected\n      ? getSelectedElements(elements, appState)\n      : elements;\n\n    return (\n      <>\n        {EXPORT_SCALES.map((s) => {\n          const [width, height] = getExportSize(\n            exportedElements,\n            DEFAULT_EXPORT_PADDING,\n            s,\n          );\n\n          const scaleButtonTitle = `${t(\n            \"buttons.scale\",\n          )} ${s}x (${width}x${height})`;\n\n          return (\n            <ToolButton\n              key={s}\n              size=\"small\"\n              type=\"radio\"\n              icon={`${s}x`}\n              name=\"export-canvas-scale\"\n              title={scaleButtonTitle}\n              aria-label={scaleButtonTitle}\n              id=\"export-canvas-scale\"\n              checked={s === appState.exportScale}\n              onChange={() => updateData(s)}\n            />\n          );\n        })}\n      </>\n    );\n  },\n});\n\nexport const actionChangeExportBackground = register({\n  name: \"changeExportBackground\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportBackground: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportBackground}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"labels.withBackground\")}\n    </CheckboxItem>\n  ),\n});\n\nexport const actionChangeExportEmbedScene = register({\n  name: \"changeExportEmbedScene\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportEmbedScene: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <CheckboxItem\n      checked={appState.exportEmbedScene}\n      onChange={(checked) => updateData(checked)}\n    >\n      {t(\"labels.exportEmbedScene\")}\n      <Tooltip label={t(\"labels.exportEmbedScene_details\")} long={true}>\n        <div className=\"excalidraw-tooltip-icon\">{questionCircle}</div>\n      </Tooltip>\n    </CheckboxItem>\n  ),\n});\n\nexport const actionSaveToActiveFile = register({\n  name: \"saveToActiveFile\",\n  perform: async (elements, appState, value) => {\n    const fileHandleExists = !!appState.fileHandle;\n\n    try {\n      const { fileHandle } = isImageFileHandle(appState.fileHandle)\n        ? await resaveAsImageWithScene(elements, appState)\n        : await saveAsJSON(elements, appState);\n\n      return {\n        commitToHistory: false,\n        appState: {\n          ...appState,\n          fileHandle,\n          toastMessage: fileHandleExists\n            ? fileHandle.name\n              ? t(\"toast.fileSavedToFilename\").replace(\n                  \"{filename}\",\n                  `\"${fileHandle.name}\"`,\n                )\n              : t(\"toast.fileSaved\")\n            : null,\n        },\n      };\n    } catch (error) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      }\n      return { commitToHistory: false };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event[KEYS.CTRL_OR_CMD] && !event.shiftKey,\n  PanelComponent: ({ updateData, appState }) => (\n    <ActiveFile\n      onSave={() => updateData(null)}\n      fileName={appState.fileHandle?.name}\n    />\n  ),\n});\n\nexport const actionSaveFileToDisk = register({\n  name: \"saveFileToDisk\",\n  perform: async (elements, appState, value) => {\n    try {\n      const { fileHandle } = await saveAsJSON(elements, {\n        ...appState,\n        fileHandle: null,\n      });\n      return { commitToHistory: false, appState: { ...appState, fileHandle } };\n    } catch (error) {\n      if (error?.name !== \"AbortError\") {\n        console.error(error);\n      }\n      return { commitToHistory: false };\n    }\n  },\n  keyTest: (event) =>\n    event.key === KEYS.S && event.shiftKey && event[KEYS.CTRL_OR_CMD],\n  PanelComponent: ({ updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={saveAs}\n      title={t(\"buttons.saveAs\")}\n      aria-label={t(\"buttons.saveAs\")}\n      showAriaLabel={useIsMobile()}\n      hidden={!fsSupported}\n      onClick={() => updateData(null)}\n      data-testid=\"save-as-button\"\n    />\n  ),\n});\n\nexport const actionLoadScene = register({\n  name: \"loadScene\",\n  perform: async (elements, appState) => {\n    try {\n      const {\n        elements: loadedElements,\n        appState: loadedAppState,\n      } = await loadFromJSON(appState, elements);\n      return {\n        elements: loadedElements,\n        appState: loadedAppState,\n        commitToHistory: true,\n      };\n    } catch (error) {\n      if (error?.name === \"AbortError\") {\n        return false;\n      }\n      return {\n        elements,\n        appState: { ...appState, errorMessage: error.message },\n        commitToHistory: false,\n      };\n    }\n  },\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.key === KEYS.O,\n  PanelComponent: ({ updateData, appState }) => (\n    <ToolButton\n      type=\"button\"\n      icon={load}\n      title={t(\"buttons.load\")}\n      aria-label={t(\"buttons.load\")}\n      showAriaLabel={useIsMobile()}\n      onClick={updateData}\n      data-testid=\"load-button\"\n    />\n  ),\n});\n\nexport const actionExportWithDarkMode = register({\n  name: \"exportWithDarkMode\",\n  perform: (_elements, appState, value) => {\n    return {\n      appState: { ...appState, exportWithDarkMode: value },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData }) => (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        marginTop: \"-45px\",\n        marginBottom: \"10px\",\n      }}\n    >\n      <DarkModeToggle\n        value={appState.exportWithDarkMode ? \"dark\" : \"light\"}\n        onChange={(theme: Appearence) => {\n          updateData(theme === \"dark\");\n        }}\n        title={t(\"labels.toggleExportColorScheme\")}\n      />\n    </div>\n  ),\n});\n","import {\n  isTextElement,\n  isExcalidrawElement,\n  redrawTextBoundingBox,\n} from \"../element\";\nimport { CODES, KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { register } from \"./register\";\nimport { mutateElement, newElementWith } from \"../element/mutateElement\";\nimport {\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_TEXT_ALIGN,\n} from \"../constants\";\n\n// `copiedStyles` is exported only for tests.\nexport let copiedStyles: string = \"{}\";\n\nexport const actionCopyStyles = register({\n  name: \"copyStyles\",\n  perform: (elements, appState) => {\n    const element = elements.find((el) => appState.selectedElementIds[el.id]);\n    if (element) {\n      copiedStyles = JSON.stringify(element);\n    }\n    return {\n      appState: {\n        ...appState,\n        toastMessage: t(\"toast.copyStyles\"),\n      },\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copyStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.C,\n});\n\nexport const actionPasteStyles = register({\n  name: \"pasteStyles\",\n  perform: (elements, appState) => {\n    const pastedElement = JSON.parse(copiedStyles);\n    if (!isExcalidrawElement(pastedElement)) {\n      return { elements, commitToHistory: false };\n    }\n    return {\n      elements: elements.map((element) => {\n        if (appState.selectedElementIds[element.id]) {\n          const newElement = newElementWith(element, {\n            backgroundColor: pastedElement?.backgroundColor,\n            strokeWidth: pastedElement?.strokeWidth,\n            strokeColor: pastedElement?.strokeColor,\n            strokeStyle: pastedElement?.strokeStyle,\n            fillStyle: pastedElement?.fillStyle,\n            opacity: pastedElement?.opacity,\n            roughness: pastedElement?.roughness,\n          });\n          if (isTextElement(newElement)) {\n            mutateElement(newElement, {\n              fontSize: pastedElement?.fontSize || DEFAULT_FONT_SIZE,\n              fontFamily: pastedElement?.fontFamily || DEFAULT_FONT_FAMILY,\n              textAlign: pastedElement?.textAlign || DEFAULT_TEXT_ALIGN,\n            });\n            redrawTextBoundingBox(newElement);\n          }\n          return newElement;\n        }\n        return element;\n      }),\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.pasteStyles\",\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.V,\n});\n","import React from \"react\";\nimport { questionCircle } from \"../components/icons\";\n\ntype HelpIconProps = {\n  title?: string;\n  name?: string;\n  id?: string;\n  onClick?(): void;\n};\n\nexport const HelpIcon = (props: HelpIconProps) => (\n  <button\n    className=\"help-icon\"\n    onClick={props.onClick}\n    type=\"button\"\n    title={`${props.title} — ?`}\n    aria-label={props.title}\n  >\n    {questionCircle}\n  </button>\n);\n","import React from \"react\";\nimport { CODES, KEYS } from \"../keys\";\nimport { t } from \"../i18n\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\nimport { UngroupIcon, GroupIcon } from \"../components/icons\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport {\n  getSelectedGroupIds,\n  selectGroup,\n  selectGroupsForSelectedElements,\n  getElementsInGroup,\n  addToGroup,\n  removeFromSelectedGroups,\n  isElementInGroup,\n} from \"../groups\";\nimport { getNonDeletedElements } from \"../element\";\nimport { randomId } from \"../random\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\n\nconst allElementsInSameGroup = (elements: readonly ExcalidrawElement[]) => {\n  if (elements.length >= 2) {\n    const groupIds = elements[0].groupIds;\n    for (const groupId of groupIds) {\n      if (\n        elements.reduce(\n          (acc, element) => acc && isElementInGroup(element, groupId),\n          true,\n        )\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  return (\n    selectedElements.length >= 2 && !allElementsInSameGroup(selectedElements)\n  );\n};\n\nexport const actionGroup = register({\n  name: \"group\",\n  perform: (elements, appState) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    if (selectedElements.length < 2) {\n      // nothing to group\n      return { appState, elements, commitToHistory: false };\n    }\n    // if everything is already grouped into 1 group, there is nothing to do\n    const selectedGroupIds = getSelectedGroupIds(appState);\n    if (selectedGroupIds.length === 1) {\n      const selectedGroupId = selectedGroupIds[0];\n      const elementIdsInGroup = new Set(\n        getElementsInGroup(elements, selectedGroupId).map(\n          (element) => element.id,\n        ),\n      );\n      const selectedElementIds = new Set(\n        selectedElements.map((element) => element.id),\n      );\n      const combinedSet = new Set([\n        ...Array.from(elementIdsInGroup),\n        ...Array.from(selectedElementIds),\n      ]);\n      if (combinedSet.size === elementIdsInGroup.size) {\n        // no incremental ids in the selected ids\n        return { appState, elements, commitToHistory: false };\n      }\n    }\n    const newGroupId = randomId();\n    const updatedElements = elements.map((element) => {\n      if (!appState.selectedElementIds[element.id]) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: addToGroup(\n          element.groupIds,\n          newGroupId,\n          appState.editingGroupId,\n        ),\n      });\n    });\n    // keep the z order within the group the same, but move them\n    // to the z order of the highest element in the layer stack\n    const elementsInGroup = getElementsInGroup(updatedElements, newGroupId);\n    const lastElementInGroup = elementsInGroup[elementsInGroup.length - 1];\n    const lastGroupElementIndex = updatedElements.lastIndexOf(\n      lastElementInGroup,\n    );\n    const elementsAfterGroup = updatedElements.slice(lastGroupElementIndex + 1);\n    const elementsBeforeGroup = updatedElements\n      .slice(0, lastGroupElementIndex)\n      .filter(\n        (updatedElement) => !isElementInGroup(updatedElement, newGroupId),\n      );\n    const updatedElementsInOrder = [\n      ...elementsBeforeGroup,\n      ...elementsInGroup,\n      ...elementsAfterGroup,\n    ];\n\n    return {\n      appState: selectGroup(\n        newGroupId,\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(updatedElementsInOrder),\n      ),\n      elements: updatedElementsInOrder,\n      commitToHistory: true,\n    };\n  },\n  contextItemLabel: \"labels.group\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionGroup(elements, appState),\n  keyTest: (event) =>\n    !event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.code === CODES.G,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<GroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.group\")} — ${getShortcutKey(\"CtrlOrCmd+G\")}`}\n      aria-label={t(\"labels.group\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n\nexport const actionUngroup = register({\n  name: \"ungroup\",\n  perform: (elements, appState) => {\n    const groupIds = getSelectedGroupIds(appState);\n    if (groupIds.length === 0) {\n      return { appState, elements, commitToHistory: false };\n    }\n    const nextElements = elements.map((element) => {\n      const nextGroupIds = removeFromSelectedGroups(\n        element.groupIds,\n        appState.selectedGroupIds,\n      );\n      if (nextGroupIds.length === element.groupIds.length) {\n        return element;\n      }\n      return newElementWith(element, {\n        groupIds: nextGroupIds,\n      });\n    });\n    return {\n      appState: selectGroupsForSelectedElements(\n        { ...appState, selectedGroupIds: {} },\n        getNonDeletedElements(nextElements),\n      ),\n      elements: nextElements,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event.shiftKey && event[KEYS.CTRL_OR_CMD] && event.code === CODES.G,\n  contextItemLabel: \"labels.ungroup\",\n  contextItemPredicate: (elements, appState) =>\n    getSelectedGroupIds(appState).length > 0,\n\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      hidden={getSelectedGroupIds(appState).length === 0}\n      icon={<UngroupIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.ungroup\")} — ${getShortcutKey(\"CtrlOrCmd+Shift+G\")}`}\n      aria-label={t(\"labels.ungroup\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    ></ToolButton>\n  ),\n});\n","import React from \"react\";\nimport { menu, palette } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport { showSelectedShapeActions, getNonDeletedElements } from \"../element\";\nimport { register } from \"./register\";\nimport { allowFullScreen, exitFullScreen, isFullScreen } from \"../utils\";\nimport { CODES, KEYS } from \"../keys\";\nimport { HelpIcon } from \"../components/HelpIcon\";\n\nexport const actionToggleCanvasMenu = register({\n  name: \"toggleCanvasMenu\",\n  perform: (_, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"canvas\" ? null : \"canvas\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ appState, updateData }) => (\n    <ToolButton\n      type=\"button\"\n      icon={menu}\n      aria-label={t(\"buttons.menu\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"canvas\"}\n    />\n  ),\n});\n\nexport const actionToggleEditMenu = register({\n  name: \"toggleEditMenu\",\n  perform: (_elements, appState) => ({\n    appState: {\n      ...appState,\n      openMenu: appState.openMenu === \"shape\" ? null : \"shape\",\n    },\n    commitToHistory: false,\n  }),\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      visible={showSelectedShapeActions(\n        appState,\n        getNonDeletedElements(elements),\n      )}\n      type=\"button\"\n      icon={palette}\n      aria-label={t(\"buttons.edit\")}\n      onClick={updateData}\n      selected={appState.openMenu === \"shape\"}\n    />\n  ),\n});\n\nexport const actionFullScreen = register({\n  name: \"toggleFullScreen\",\n  perform: () => {\n    if (!isFullScreen()) {\n      allowFullScreen();\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    }\n    return {\n      commitToHistory: false,\n    };\n  },\n  keyTest: (event) => event.code === CODES.F && !event[KEYS.CTRL_OR_CMD],\n});\n\nexport const actionShortcuts = register({\n  name: \"toggleShortcuts\",\n  perform: (_elements, appState, _, { focusContainer }) => {\n    if (appState.showHelpDialog) {\n      focusContainer();\n    }\n    return {\n      appState: {\n        ...appState,\n        showHelpDialog: !appState.showHelpDialog,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ updateData }) => (\n    <HelpIcon title={t(\"helpDialog.title\")} onClick={updateData} />\n  ),\n  keyTest: (event) => event.key === KEYS.QUESTION_MARK,\n});\n","import \"./Avatar.scss\";\n\nimport React from \"react\";\n\ntype AvatarProps = {\n  children: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  color: string;\n  border: string;\n};\n\nexport const Avatar = ({ children, color, border, onClick }: AvatarProps) => (\n  <div\n    className=\"Avatar\"\n    style={{ background: color, border: `1px solid ${border}` }}\n    onClick={onClick}\n  >\n    {children}\n  </div>\n);\n","import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getNonDeletedElements } from \"../element\";\nimport { deepCopyElement } from \"../element/newElement\";\n\nexport const actionAddToLibrary = register({\n  name: \"addToLibrary\",\n  perform: (elements, appState, _, app) => {\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n\n    app.library.loadLibrary().then((items) => {\n      app.library.saveLibrary([\n        ...items,\n        selectedElements.map(deepCopyElement),\n      ]);\n    });\n    return false;\n  },\n  contextItemLabel: \"labels.addToLibrary\",\n});\n","import React from \"react\";\nimport { getClientColors, getClientInitials } from \"../clients\";\nimport { Avatar } from \"../components/Avatar\";\nimport { centerScrollOn } from \"../scene/scroll\";\nimport { Collaborator } from \"../types\";\nimport { register } from \"./register\";\n\nexport const actionGoToCollaborator = register({\n  name: \"goToCollaborator\",\n  perform: (_elements, appState, value) => {\n    const point = value as Collaborator[\"pointer\"];\n    if (!point) {\n      return { appState, commitToHistory: false };\n    }\n\n    return {\n      appState: {\n        ...appState,\n        ...centerScrollOn({\n          scenePoint: point,\n          viewportDimensions: {\n            width: appState.width,\n            height: appState.height,\n          },\n          zoom: appState.zoom,\n        }),\n        // Close mobile menu\n        openMenu: appState.openMenu === \"canvas\" ? null : appState.openMenu,\n      },\n      commitToHistory: false,\n    };\n  },\n  PanelComponent: ({ appState, updateData, data }) => {\n    const clientId: string | undefined = data?.id;\n    if (!clientId) {\n      return null;\n    }\n\n    const collaborator = appState.collaborators.get(clientId);\n\n    if (!collaborator) {\n      return null;\n    }\n\n    const { background, stroke } = getClientColors(clientId, appState);\n    const shortName = getClientInitials(collaborator.username);\n\n    return (\n      <Avatar\n        color={background}\n        border={stroke}\n        onClick={() => updateData(collaborator.pointer)}\n      >\n        {shortName}\n      </Avatar>\n    );\n  },\n});\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { getCommonBounds } from \"./element\";\n\ninterface Box {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n}\n\nexport interface Alignment {\n  position: \"start\" | \"center\" | \"end\";\n  axis: \"x\" | \"y\";\n}\n\nexport const alignElements = (\n  selectedElements: ExcalidrawElement[],\n  alignment: Alignment,\n): ExcalidrawElement[] => {\n  const groups: ExcalidrawElement[][] = getMaximumGroups(selectedElements);\n\n  const selectionBoundingBox = getCommonBoundingBox(selectedElements);\n\n  return groups.flatMap((group) => {\n    const translation = calculateTranslation(\n      group,\n      selectionBoundingBox,\n      alignment,\n    );\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n\nexport const getMaximumGroups = (\n  elements: ExcalidrawElement[],\n): ExcalidrawElement[][] => {\n  const groups: Map<String, ExcalidrawElement[]> = new Map<\n    String,\n    ExcalidrawElement[]\n  >();\n\n  elements.forEach((element: ExcalidrawElement) => {\n    const groupId =\n      element.groupIds.length === 0\n        ? element.id\n        : element.groupIds[element.groupIds.length - 1];\n\n    const currentGroupMembers = groups.get(groupId) || [];\n\n    groups.set(groupId, [...currentGroupMembers, element]);\n  });\n\n  return Array.from(groups.values());\n};\n\nconst calculateTranslation = (\n  group: ExcalidrawElement[],\n  selectionBoundingBox: Box,\n  { axis, position }: Alignment,\n): { x: number; y: number } => {\n  const groupBoundingBox = getCommonBoundingBox(group);\n\n  const [min, max]: [\"minX\" | \"minY\", \"maxX\" | \"maxY\"] =\n    axis === \"x\" ? [\"minX\", \"maxX\"] : [\"minY\", \"maxY\"];\n\n  const noTranslation = { x: 0, y: 0 };\n  if (position === \"start\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[min] - groupBoundingBox[min],\n    };\n  } else if (position === \"end\") {\n    return {\n      ...noTranslation,\n      [axis]: selectionBoundingBox[max] - groupBoundingBox[max],\n    };\n  } // else if (position === \"center\") {\n  return {\n    ...noTranslation,\n    [axis]:\n      (selectionBoundingBox[min] + selectionBoundingBox[max]) / 2 -\n      (groupBoundingBox[min] + groupBoundingBox[max]) / 2,\n  };\n};\n\nconst getCommonBoundingBox = (elements: ExcalidrawElement[]): Box => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  return { minX, minY, maxX, maxY };\n};\n","import React from \"react\";\nimport { alignElements, Alignment } from \"../align\";\nimport {\n  AlignBottomIcon,\n  AlignLeftIcon,\n  AlignRightIcon,\n  AlignTopIcon,\n  CenterHorizontallyIcon,\n  CenterVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { getElementMap, getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { KEYS } from \"../keys\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => getSelectedElements(getNonDeletedElements(elements), appState).length > 1;\n\nconst alignSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  alignment: Alignment,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  const updatedElements = alignElements(selectedElements, alignment);\n\n  const updatedElementsMap = getElementMap(updatedElements);\n\n  return elements.map((element) => updatedElementsMap[element.id] || element);\n};\n\nexport const actionAlignTop = register({\n  name: \"alignTop\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"start\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_UP,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignTopIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignTop\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Up\",\n      )}`}\n      aria-label={t(\"labels.alignTop\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignBottom = register({\n  name: \"alignBottom\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"end\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_DOWN,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignBottomIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignBottom\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Down\",\n      )}`}\n      aria-label={t(\"labels.alignBottom\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignLeft = register({\n  name: \"alignLeft\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"start\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_LEFT,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignLeftIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignLeft\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Left\",\n      )}`}\n      aria-label={t(\"labels.alignLeft\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignRight = register({\n  name: \"alignRight\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"end\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] && event.shiftKey && event.key === KEYS.ARROW_RIGHT,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<AlignRightIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.alignRight\")} — ${getShortcutKey(\n        \"CtrlOrCmd+Shift+Right\",\n      )}`}\n      aria-label={t(\"labels.alignRight\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignVerticallyCentered = register({\n  name: \"alignVerticallyCentered\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"center\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<CenterVerticallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerVertically\")}\n      aria-label={t(\"labels.centerVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const actionAlignHorizontallyCentered = register({\n  name: \"alignHorizontallyCentered\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: alignSelectedElements(elements, appState, {\n        position: \"center\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<CenterHorizontallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={t(\"labels.centerHorizontally\")}\n      aria-label={t(\"labels.centerHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import { ExcalidrawElement } from \"./element/types\";\nimport { newElementWith } from \"./element/mutateElement\";\nimport { getCommonBounds } from \"./element\";\n\ninterface Box {\n  minX: number;\n  minY: number;\n  maxX: number;\n  maxY: number;\n  midX: number;\n  midY: number;\n  width: number;\n  height: number;\n}\n\nexport interface Distribution {\n  space: \"between\";\n  axis: \"x\" | \"y\";\n}\n\nexport const distributeElements = (\n  selectedElements: ExcalidrawElement[],\n  distribution: Distribution,\n): ExcalidrawElement[] => {\n  const [start, mid, end, extent] =\n    distribution.axis === \"x\"\n      ? ([\"minX\", \"midX\", \"maxX\", \"width\"] as const)\n      : ([\"minY\", \"midY\", \"maxY\", \"height\"] as const);\n\n  const bounds = getCommonBoundingBox(selectedElements);\n  const groups = getMaximumGroups(selectedElements)\n    .map((group) => [group, getCommonBoundingBox(group)] as const)\n    .sort((a, b) => a[1][mid] - b[1][mid]);\n\n  let span = 0;\n  for (const group of groups) {\n    span += group[1][extent];\n  }\n\n  const step = (bounds[extent] - span) / (groups.length - 1);\n\n  if (step < 0) {\n    // If we have a negative step, we'll need to distribute from centers\n    // rather than from gaps. Buckle up, this is a weird one.\n\n    // Get indices of boxes that define start and end of our bounding box\n    const index0 = groups.findIndex((g) => g[1][start] === bounds[start]);\n    const index1 = groups.findIndex((g) => g[1][end] === bounds[end]);\n\n    // Get our step, based on the distance between the center points of our\n    // start and end boxes\n    const step =\n      (groups[index1][1][mid] - groups[index0][1][mid]) / (groups.length - 1);\n\n    let pos = groups[index0][1][mid];\n\n    return groups.flatMap(([group, box], index) => {\n      const translation = {\n        x: 0,\n        y: 0,\n      };\n\n      // Don't move our start and end boxes\n      if (index !== index0 && index !== index1) {\n        pos += step;\n        translation[distribution.axis] = pos - box[mid];\n      }\n\n      return group.map((element) =>\n        newElementWith(element, {\n          x: element.x + translation.x,\n          y: element.y + translation.y,\n        }),\n      );\n    });\n  }\n\n  // Distribute from gaps\n\n  let pos = bounds[start];\n\n  return groups.flatMap(([group, box]) => {\n    const translation = {\n      x: 0,\n      y: 0,\n    };\n\n    translation[distribution.axis] = pos - box[start];\n\n    pos += step;\n    pos += box[extent];\n\n    return group.map((element) =>\n      newElementWith(element, {\n        x: element.x + translation.x,\n        y: element.y + translation.y,\n      }),\n    );\n  });\n};\n\nexport const getMaximumGroups = (\n  elements: ExcalidrawElement[],\n): ExcalidrawElement[][] => {\n  const groups: Map<String, ExcalidrawElement[]> = new Map<\n    String,\n    ExcalidrawElement[]\n  >();\n\n  elements.forEach((element: ExcalidrawElement) => {\n    const groupId =\n      element.groupIds.length === 0\n        ? element.id\n        : element.groupIds[element.groupIds.length - 1];\n\n    const currentGroupMembers = groups.get(groupId) || [];\n\n    groups.set(groupId, [...currentGroupMembers, element]);\n  });\n\n  return Array.from(groups.values());\n};\n\nconst getCommonBoundingBox = (elements: ExcalidrawElement[]): Box => {\n  const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n  return {\n    minX,\n    minY,\n    maxX,\n    maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n    midX: (minX + maxX) / 2,\n    midY: (minY + maxY) / 2,\n  };\n};\n","import React from \"react\";\nimport {\n  DistributeHorizontallyIcon,\n  DistributeVerticallyIcon,\n} from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { distributeElements, Distribution } from \"../disitrubte\";\nimport { getElementMap, getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { CODES } from \"../keys\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { AppState } from \"../types\";\nimport { getShortcutKey } from \"../utils\";\nimport { register } from \"./register\";\n\nconst enableActionGroup = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => getSelectedElements(getNonDeletedElements(elements), appState).length > 1;\n\nconst distributeSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  distribution: Distribution,\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  const updatedElements = distributeElements(selectedElements, distribution);\n\n  const updatedElementsMap = getElementMap(updatedElements);\n\n  return elements.map((element) => updatedElementsMap[element.id] || element);\n};\n\nexport const distributeHorizontally = register({\n  name: \"distributeHorizontally\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, {\n        space: \"between\",\n        axis: \"x\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.altKey && event.code === CODES.H,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<DistributeHorizontallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeHorizontally\")} — ${getShortcutKey(\n        \"Alt+H\",\n      )}`}\n      aria-label={t(\"labels.distributeHorizontally\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n\nexport const distributeVertically = register({\n  name: \"distributeVertically\",\n  perform: (elements, appState) => {\n    return {\n      appState,\n      elements: distributeSelectedElements(elements, appState, {\n        space: \"between\",\n        axis: \"y\",\n      }),\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.altKey && event.code === CODES.V,\n  PanelComponent: ({ elements, appState, updateData }) => (\n    <ToolButton\n      hidden={!enableActionGroup(elements, appState)}\n      type=\"button\"\n      icon={<DistributeVerticallyIcon theme={appState.theme} />}\n      onClick={() => updateData(null)}\n      title={`${t(\"labels.distributeVertically\")} — ${getShortcutKey(\"Alt+V\")}`}\n      aria-label={t(\"labels.distributeVertically\")}\n      visible={isSomeElementSelected(getNonDeletedElements(elements), appState)}\n    />\n  ),\n});\n","import { register } from \"./register\";\nimport { getSelectedElements } from \"../scene\";\nimport { getElementMap, getNonDeletedElements } from \"../element\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { ExcalidrawElement, NonDeleted } from \"../element/types\";\nimport { normalizeAngle, resizeSingleElement } from \"../element/resizeElements\";\nimport { AppState } from \"../types\";\nimport { getTransformHandles } from \"../element/transformHandles\";\nimport { isFreeDrawElement, isLinearElement } from \"../element/typeChecks\";\nimport { updateBoundElements } from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\n\nconst enableActionFlipHorizontal = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const eligibleElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  return eligibleElements.length === 1 && eligibleElements[0].type !== \"text\";\n};\n\nconst enableActionFlipVertical = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const eligibleElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  return eligibleElements.length === 1;\n};\n\nexport const actionFlipHorizontal = register({\n  name: \"flipHorizontal\",\n  perform: (elements, appState) => {\n    return {\n      elements: flipSelectedElements(elements, appState, \"horizontal\"),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.shiftKey && event.code === \"KeyH\",\n  contextItemLabel: \"labels.flipHorizontal\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionFlipHorizontal(elements, appState),\n});\n\nexport const actionFlipVertical = register({\n  name: \"flipVertical\",\n  perform: (elements, appState) => {\n    return {\n      elements: flipSelectedElements(elements, appState, \"vertical\"),\n      appState,\n      commitToHistory: true,\n    };\n  },\n  keyTest: (event) => event.shiftKey && event.code === \"KeyV\",\n  contextItemLabel: \"labels.flipVertical\",\n  contextItemPredicate: (elements, appState) =>\n    enableActionFlipVertical(elements, appState),\n});\n\nconst flipSelectedElements = (\n  elements: readonly ExcalidrawElement[],\n  appState: Readonly<AppState>,\n  flipDirection: \"horizontal\" | \"vertical\",\n) => {\n  const selectedElements = getSelectedElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n\n  // remove once we allow for groups of elements to be flipped\n  if (selectedElements.length > 1) {\n    return elements;\n  }\n\n  const updatedElements = flipElements(\n    selectedElements,\n    appState,\n    flipDirection,\n  );\n\n  const updatedElementsMap = getElementMap(updatedElements);\n\n  return elements.map((element) => updatedElementsMap[element.id] || element);\n};\n\nconst flipElements = (\n  elements: NonDeleted<ExcalidrawElement>[],\n  appState: AppState,\n  flipDirection: \"horizontal\" | \"vertical\",\n): ExcalidrawElement[] => {\n  for (let i = 0; i < elements.length; i++) {\n    flipElement(elements[i], appState);\n    // If vertical flip, rotate an extra 180\n    if (flipDirection === \"vertical\") {\n      rotateElement(elements[i], Math.PI);\n    }\n  }\n  return elements;\n};\n\nconst flipElement = (\n  element: NonDeleted<ExcalidrawElement>,\n  appState: AppState,\n) => {\n  const originalX = element.x;\n  const originalY = element.y;\n  const width = element.width;\n  const height = element.height;\n  const originalAngle = normalizeAngle(element.angle);\n\n  let finalOffsetX = 0;\n  if (isLinearElement(element) || isFreeDrawElement(element)) {\n    finalOffsetX =\n      element.points.reduce((max, point) => Math.max(max, point[0]), 0) * 2 -\n      element.width;\n  }\n\n  // Rotate back to zero, if necessary\n  mutateElement(element, {\n    angle: normalizeAngle(0),\n  });\n  // Flip unrotated by pulling TransformHandle to opposite side\n  const transformHandles = getTransformHandles(element, appState.zoom);\n  let usingNWHandle = true;\n  let newNCoordsX = 0;\n  let nHandle = transformHandles.nw;\n  if (!nHandle) {\n    // Use ne handle instead\n    usingNWHandle = false;\n    nHandle = transformHandles.ne;\n    if (!nHandle) {\n      mutateElement(element, {\n        angle: originalAngle,\n      });\n      return;\n    }\n  }\n\n  if (isLinearElement(element)) {\n    for (let i = 1; i < element.points.length; i++) {\n      LinearElementEditor.movePoint(element, i, [\n        -element.points[i][0],\n        element.points[i][1],\n      ]);\n    }\n    LinearElementEditor.normalizePoints(element);\n  } else {\n    // calculate new x-coord for transformation\n    newNCoordsX = usingNWHandle ? element.x + 2 * width : element.x - 2 * width;\n    resizeSingleElement(\n      element,\n      true,\n      element,\n      usingNWHandle ? \"nw\" : \"ne\",\n      false,\n      newNCoordsX,\n      nHandle[1],\n    );\n    // fix the size to account for handle sizes\n    mutateElement(element, {\n      width,\n      height,\n    });\n  }\n\n  // Rotate by (360 degrees - original angle)\n  let angle = normalizeAngle(2 * Math.PI - originalAngle);\n  if (angle < 0) {\n    // check, probably unnecessary\n    angle = normalizeAngle(angle + 2 * Math.PI);\n  }\n  mutateElement(element, {\n    angle,\n  });\n\n  // Move back to original spot to appear \"flipped in place\"\n  mutateElement(element, {\n    x: originalX + finalOffsetX,\n    y: originalY,\n  });\n\n  updateBoundElements(element);\n};\n\nconst rotateElement = (element: ExcalidrawElement, rotationAngle: number) => {\n  const originalX = element.x;\n  const originalY = element.y;\n  let angle = normalizeAngle(element.angle + rotationAngle);\n  if (angle < 0) {\n    // check, probably unnecessary\n    angle = normalizeAngle(2 * Math.PI + angle);\n  }\n  mutateElement(element, {\n    angle,\n  });\n\n  // Move back to original spot\n  mutateElement(element, {\n    x: originalX,\n    y: originalY,\n  });\n};\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { copyToClipboard } from \"../clipboard\";\nimport { actionDeleteSelected } from \"./actionDeleteSelected\";\nimport { getSelectedElements } from \"../scene/selection\";\nimport { exportCanvas } from \"../data/index\";\nimport { getNonDeletedElements } from \"../element\";\nimport { t } from \"../i18n\";\n\nexport const actionCopy = register({\n  name: \"copy\",\n  perform: (elements, appState) => {\n    copyToClipboard(getNonDeletedElements(elements), appState);\n\n    return {\n      commitToHistory: false,\n    };\n  },\n  contextItemLabel: \"labels.copy\",\n  // don't supply a shortcut since we handle this conditionally via onCopy event\n  keyTest: undefined,\n});\n\nexport const actionCut = register({\n  name: \"cut\",\n  perform: (elements, appState, data, app) => {\n    actionCopy.perform(elements, appState, data, app);\n    return actionDeleteSelected.perform(elements, appState, data, app);\n  },\n  contextItemLabel: \"labels.cut\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.X,\n});\n\nexport const actionCopyAsSvg = register({\n  name: \"copyAsSvg\",\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        commitToHistory: false,\n      };\n    }\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    try {\n      await exportCanvas(\n        \"clipboard-svg\",\n        selectedElements.length\n          ? selectedElements\n          : getNonDeletedElements(elements),\n        appState,\n        appState,\n      );\n      return {\n        commitToHistory: false,\n      };\n    } catch (error) {\n      console.error(error);\n      return {\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n        commitToHistory: false,\n      };\n    }\n  },\n  contextItemLabel: \"labels.copyAsSvg\",\n});\n\nexport const actionCopyAsPng = register({\n  name: \"copyAsPng\",\n  perform: async (elements, appState, _data, app) => {\n    if (!app.canvas) {\n      return {\n        commitToHistory: false,\n      };\n    }\n    const selectedElements = getSelectedElements(\n      getNonDeletedElements(elements),\n      appState,\n    );\n    try {\n      await exportCanvas(\n        \"clipboard\",\n        selectedElements.length\n          ? selectedElements\n          : getNonDeletedElements(elements),\n        appState,\n        appState,\n      );\n      return {\n        appState: {\n          ...appState,\n          toastMessage: t(\"toast.copyToClipboardAsPng\", {\n            exportSelection: selectedElements.length\n              ? t(\"toast.selection\")\n              : t(\"toast.canvas\"),\n            exportColorScheme: appState.exportWithDarkMode\n              ? t(\"buttons.darkMode\")\n              : t(\"buttons.lightMode\"),\n          }),\n        },\n        commitToHistory: false,\n      };\n    } catch (error) {\n      console.error(error);\n      return {\n        appState: {\n          ...appState,\n          errorMessage: error.message,\n        },\n        commitToHistory: false,\n      };\n    }\n  },\n  contextItemLabel: \"labels.copyAsPng\",\n  keyTest: (event) => event.code === CODES.C && event.altKey && event.shiftKey,\n});\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { GRID_SIZE } from \"../constants\";\nimport { AppState } from \"../types\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleGridMode = register({\n  name: \"gridMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"grid\");\n    return {\n      appState: {\n        ...appState,\n        gridSize: this.checked!(appState) ? null : GRID_SIZE,\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState: AppState) => appState.gridSize !== null,\n  contextItemLabel: \"labels.showGrid\",\n  keyTest: (event) => event[KEYS.CTRL_OR_CMD] && event.code === CODES.QUOTE,\n});\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleZenMode = register({\n  name: \"zenMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"zen\");\n\n    return {\n      appState: {\n        ...appState,\n        zenModeEnabled: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.zenModeEnabled,\n  contextItemLabel: \"buttons.zenMode\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.Z,\n});\n","import { register } from \"./register\";\nimport { CODES, KEYS } from \"../keys\";\n\nexport const actionToggleStats = register({\n  name: \"stats\",\n  perform(elements, appState) {\n    return {\n      appState: {\n        ...appState,\n        showStats: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.showStats,\n  contextItemLabel: \"stats.title\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.SLASH,\n});\n","import { Action, ActionResult } from \"./types\";\nimport React from \"react\";\nimport { undo, redo } from \"../components/icons\";\nimport { ToolButton } from \"../components/ToolButton\";\nimport { t } from \"../i18n\";\nimport History, { HistoryEntry } from \"../history\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppState } from \"../types\";\nimport { isWindows, KEYS } from \"../keys\";\nimport { getElementMap } from \"../element\";\nimport { newElementWith } from \"../element/mutateElement\";\nimport { fixBindingsAfterDeletion } from \"../element/binding\";\n\nconst writeData = (\n  prevElements: readonly ExcalidrawElement[],\n  appState: AppState,\n  updater: () => HistoryEntry | null,\n): ActionResult => {\n  const commitToHistory = false;\n  if (\n    !appState.multiElement &&\n    !appState.resizingElement &&\n    !appState.editingElement &&\n    !appState.draggingElement\n  ) {\n    const data = updater();\n    if (data === null) {\n      return { commitToHistory };\n    }\n\n    const prevElementMap = getElementMap(prevElements);\n    const nextElements = data.elements;\n    const nextElementMap = getElementMap(nextElements);\n\n    const deletedElements = prevElements.filter(\n      (prevElement) => !nextElementMap.hasOwnProperty(prevElement.id),\n    );\n    const elements = nextElements\n      .map((nextElement) =>\n        newElementWith(\n          prevElementMap[nextElement.id] || nextElement,\n          nextElement,\n        ),\n      )\n      .concat(\n        deletedElements.map((prevElement) =>\n          newElementWith(prevElement, { isDeleted: true }),\n        ),\n      );\n    fixBindingsAfterDeletion(elements, deletedElements);\n\n    return {\n      elements,\n      appState: { ...appState, ...data.appState },\n      commitToHistory,\n      syncHistory: true,\n    };\n  }\n  return { commitToHistory };\n};\n\ntype ActionCreator = (history: History) => Action;\n\nexport const createUndoAction: ActionCreator = (history) => ({\n  name: \"undo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.undoOnce()),\n  keyTest: (event) =>\n    event[KEYS.CTRL_OR_CMD] &&\n    event.key.toLowerCase() === KEYS.Z &&\n    !event.shiftKey,\n  PanelComponent: ({ updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={undo}\n      aria-label={t(\"buttons.undo\")}\n      onClick={updateData}\n      size={data?.size || \"medium\"}\n    />\n  ),\n  commitToHistory: () => false,\n});\n\nexport const createRedoAction: ActionCreator = (history) => ({\n  name: \"redo\",\n  perform: (elements, appState) =>\n    writeData(elements, appState, () => history.redoOnce()),\n  keyTest: (event) =>\n    (event[KEYS.CTRL_OR_CMD] &&\n      event.shiftKey &&\n      event.key.toLowerCase() === KEYS.Z) ||\n    (isWindows && event.ctrlKey && !event.shiftKey && event.key === KEYS.Y),\n  PanelComponent: ({ updateData, data }) => (\n    <ToolButton\n      type=\"button\"\n      icon={redo}\n      aria-label={t(\"buttons.redo\")}\n      onClick={updateData}\n      size={data?.size || \"medium\"}\n    />\n  ),\n  commitToHistory: () => false,\n});\n","import React from \"react\";\nimport {\n  Action,\n  ActionsManagerInterface,\n  UpdaterFn,\n  ActionName,\n  ActionResult,\n  PanelComponentProps,\n} from \"./types\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { AppProps, AppState } from \"../types\";\nimport { MODES } from \"../constants\";\nimport Library from \"../data/library\";\n\n// This is the <App> component, but for now we don't care about anything but its\n// `canvas` state.\ntype App = {\n  canvas: HTMLCanvasElement | null;\n  focusContainer: () => void;\n  props: AppProps;\n  library: Library;\n};\n\nexport class ActionManager implements ActionsManagerInterface {\n  actions = {} as ActionsManagerInterface[\"actions\"];\n\n  updater: (actionResult: ActionResult | Promise<ActionResult>) => void;\n\n  getAppState: () => Readonly<AppState>;\n  getElementsIncludingDeleted: () => readonly ExcalidrawElement[];\n  app: App;\n\n  constructor(\n    updater: UpdaterFn,\n    getAppState: () => AppState,\n    getElementsIncludingDeleted: () => readonly ExcalidrawElement[],\n    app: App,\n  ) {\n    this.updater = (actionResult) => {\n      if (actionResult && \"then\" in actionResult) {\n        actionResult.then((actionResult) => {\n          return updater(actionResult);\n        });\n      } else {\n        return updater(actionResult);\n      }\n    };\n    this.getAppState = getAppState;\n    this.getElementsIncludingDeleted = getElementsIncludingDeleted;\n    this.app = app;\n  }\n\n  registerAction(action: Action) {\n    this.actions[action.name] = action;\n  }\n\n  registerAll(actions: readonly Action[]) {\n    actions.forEach((action) => this.registerAction(action));\n  }\n\n  handleKeyDown(event: React.KeyboardEvent | KeyboardEvent) {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n    const data = Object.values(this.actions)\n      .sort((a, b) => (b.keyPriority || 0) - (a.keyPriority || 0))\n      .filter(\n        (action) =>\n          (action.name in canvasActions\n            ? canvasActions[action.name as keyof typeof canvasActions]\n            : true) &&\n          action.keyTest &&\n          action.keyTest(\n            event,\n            this.getAppState(),\n            this.getElementsIncludingDeleted(),\n          ),\n      );\n\n    if (data.length === 0) {\n      return false;\n    }\n    const { viewModeEnabled } = this.getAppState();\n    if (viewModeEnabled) {\n      if (!Object.values(MODES).includes(data[0].name)) {\n        return false;\n      }\n    }\n\n    event.preventDefault();\n    this.updater(\n      data[0].perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n        this.app,\n      ),\n    );\n    return true;\n  }\n\n  executeAction(action: Action) {\n    this.updater(\n      action.perform(\n        this.getElementsIncludingDeleted(),\n        this.getAppState(),\n        null,\n        this.app,\n      ),\n    );\n  }\n\n  /**\n   * @param data additional data sent to the PanelComponent\n   */\n  renderAction = (name: ActionName, data?: PanelComponentProps[\"data\"]) => {\n    const canvasActions = this.app.props.UIOptions.canvasActions;\n\n    if (\n      this.actions[name] &&\n      \"PanelComponent\" in this.actions[name] &&\n      (name in canvasActions\n        ? canvasActions[name as keyof typeof canvasActions]\n        : true)\n    ) {\n      const action = this.actions[name];\n      const PanelComponent = action.PanelComponent!;\n      const updateData = (formState?: any) => {\n        this.updater(\n          action.perform(\n            this.getElementsIncludingDeleted(),\n            this.getAppState(),\n            formState,\n            this.app,\n          ),\n        );\n      };\n\n      return (\n        <PanelComponent\n          elements={this.getElementsIncludingDeleted()}\n          appState={this.getAppState()}\n          updateData={updateData}\n          appProps={this.app.props}\n          data={data}\n        />\n      );\n    }\n\n    return null;\n  };\n}\n","import { loadLibraryFromBlob } from \"./blob\";\nimport { LibraryItems, LibraryItem } from \"../types\";\nimport { restoreElements } from \"./restore\";\nimport { getNonDeletedElements } from \"../element\";\nimport type App from \"../components/App\";\n\nclass Library {\n  private libraryCache: LibraryItems | null = null;\n  private app: App;\n\n  constructor(app: App) {\n    this.app = app;\n  }\n\n  resetLibrary = async () => {\n    await this.app.props.onLibraryChange?.([]);\n    this.libraryCache = [];\n  };\n\n  restoreLibraryItem = (libraryItem: LibraryItem): LibraryItem | null => {\n    const elements = getNonDeletedElements(restoreElements(libraryItem, null));\n    return elements.length ? elements : null;\n  };\n\n  /** imports library (currently merges, removing duplicates) */\n  async importLibrary(blob: Blob) {\n    const libraryFile = await loadLibraryFromBlob(blob);\n    if (!libraryFile || !libraryFile.library) {\n      return;\n    }\n\n    /**\n     * checks if library item does not exist already in current library\n     */\n    const isUniqueitem = (\n      existingLibraryItems: LibraryItems,\n      targetLibraryItem: LibraryItem,\n    ) => {\n      return !existingLibraryItems.find((libraryItem) => {\n        if (libraryItem.length !== targetLibraryItem.length) {\n          return false;\n        }\n\n        // detect z-index difference by checking the excalidraw elements\n        // are in order\n        return libraryItem.every((libItemExcalidrawItem, idx) => {\n          return (\n            libItemExcalidrawItem.id === targetLibraryItem[idx].id &&\n            libItemExcalidrawItem.versionNonce ===\n              targetLibraryItem[idx].versionNonce\n          );\n        });\n      });\n    };\n\n    const existingLibraryItems = await this.loadLibrary();\n\n    const filtered = libraryFile.library!.reduce((acc, libraryItem) => {\n      const restoredItem = this.restoreLibraryItem(libraryItem);\n      if (restoredItem && isUniqueitem(existingLibraryItems, restoredItem)) {\n        acc.push(restoredItem);\n      }\n      return acc;\n    }, [] as Mutable<LibraryItems>);\n\n    await this.saveLibrary([...existingLibraryItems, ...filtered]);\n  }\n\n  loadLibrary = (): Promise<LibraryItems> => {\n    return new Promise(async (resolve) => {\n      if (this.libraryCache) {\n        return resolve(JSON.parse(JSON.stringify(this.libraryCache)));\n      }\n\n      try {\n        const libraryItems = this.app.libraryItemsFromStorage;\n        if (!libraryItems) {\n          return resolve([]);\n        }\n\n        const items = libraryItems.reduce((acc, item) => {\n          const restoredItem = this.restoreLibraryItem(item);\n          if (restoredItem) {\n            acc.push(item);\n          }\n          return acc;\n        }, [] as Mutable<LibraryItems>);\n\n        // clone to ensure we don't mutate the cached library elements in the app\n        this.libraryCache = JSON.parse(JSON.stringify(items));\n\n        resolve(items);\n      } catch (error) {\n        console.error(error);\n        resolve([]);\n      }\n    });\n  };\n\n  saveLibrary = async (items: LibraryItems) => {\n    const prevLibraryItems = this.libraryCache;\n    try {\n      const serializedItems = JSON.stringify(items);\n      // cache optimistically so that the app has access to the latest\n      // immediately\n      this.libraryCache = JSON.parse(serializedItems);\n      await this.app.props.onLibraryChange?.(items);\n    } catch (error) {\n      this.libraryCache = prevLibraryItems;\n      throw error;\n    }\n  };\n}\n\nexport default Library;\n","import { PointerCoords } from \"./types\";\n\nexport const getCenter = (pointers: Map<number, PointerCoords>) => {\n  const allCoords = Array.from(pointers.values());\n  return {\n    x: sum(allCoords, (coords) => coords.x) / allCoords.length,\n    y: sum(allCoords, (coords) => coords.y) / allCoords.length,\n  };\n};\n\nexport const getDistance = ([a, b]: readonly PointerCoords[]) =>\n  Math.hypot(a.x - b.x, a.y - b.y);\n\nconst sum = <T>(array: readonly T[], mapper: (item: T) => number): number =>\n  array.reduce((acc, item) => acc + mapper(item), 0);\n","import { AppState } from \"./types\";\nimport { ExcalidrawElement } from \"./element/types\";\nimport { isLinearElement } from \"./element/typeChecks\";\nimport { deepCopyElement } from \"./element/newElement\";\n\nexport interface HistoryEntry {\n  appState: ReturnType<typeof clearAppStatePropertiesForHistory>;\n  elements: ExcalidrawElement[];\n}\n\ninterface DehydratedExcalidrawElement {\n  id: string;\n  versionNonce: number;\n}\n\ninterface DehydratedHistoryEntry {\n  appState: string;\n  elements: DehydratedExcalidrawElement[];\n}\n\nconst clearAppStatePropertiesForHistory = (appState: AppState) => {\n  return {\n    selectedElementIds: appState.selectedElementIds,\n    selectedGroupIds: appState.selectedGroupIds,\n    viewBackgroundColor: appState.viewBackgroundColor,\n    editingLinearElement: appState.editingLinearElement,\n    editingGroupId: appState.editingGroupId,\n    name: appState.name,\n  };\n};\n\nclass History {\n  private elementCache = new Map<string, Map<number, ExcalidrawElement>>();\n  private recording: boolean = true;\n  private stateHistory: DehydratedHistoryEntry[] = [];\n  private redoStack: DehydratedHistoryEntry[] = [];\n  private lastEntry: HistoryEntry | null = null;\n\n  private hydrateHistoryEntry({\n    appState,\n    elements,\n  }: DehydratedHistoryEntry): HistoryEntry {\n    return {\n      appState: JSON.parse(appState),\n      elements: elements.map((dehydratedExcalidrawElement) => {\n        const element = this.elementCache\n          .get(dehydratedExcalidrawElement.id)\n          ?.get(dehydratedExcalidrawElement.versionNonce);\n        if (!element) {\n          throw new Error(\n            `Element not found: ${dehydratedExcalidrawElement.id}:${dehydratedExcalidrawElement.versionNonce}`,\n          );\n        }\n        return element;\n      }),\n    };\n  }\n\n  private dehydrateHistoryEntry({\n    appState,\n    elements,\n  }: HistoryEntry): DehydratedHistoryEntry {\n    return {\n      appState: JSON.stringify(appState),\n      elements: elements.map((element: ExcalidrawElement) => {\n        if (!this.elementCache.has(element.id)) {\n          this.elementCache.set(element.id, new Map());\n        }\n        const versions = this.elementCache.get(element.id)!;\n        if (!versions.has(element.versionNonce)) {\n          versions.set(element.versionNonce, deepCopyElement(element));\n        }\n        return {\n          id: element.id,\n          versionNonce: element.versionNonce,\n        };\n      }),\n    };\n  }\n\n  getSnapshotForTest() {\n    return {\n      recording: this.recording,\n      stateHistory: this.stateHistory.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n      redoStack: this.redoStack.map((dehydratedHistoryEntry) =>\n        this.hydrateHistoryEntry(dehydratedHistoryEntry),\n      ),\n    };\n  }\n\n  clear() {\n    this.stateHistory.length = 0;\n    this.redoStack.length = 0;\n    this.lastEntry = null;\n    this.elementCache.clear();\n  }\n\n  private generateEntry = (\n    appState: AppState,\n    elements: readonly ExcalidrawElement[],\n  ): DehydratedHistoryEntry =>\n    this.dehydrateHistoryEntry({\n      appState: clearAppStatePropertiesForHistory(appState),\n      elements: elements.reduce((elements, element) => {\n        if (\n          isLinearElement(element) &&\n          appState.multiElement &&\n          appState.multiElement.id === element.id\n        ) {\n          // don't store multi-point arrow if still has only one point\n          if (\n            appState.multiElement &&\n            appState.multiElement.id === element.id &&\n            element.points.length < 2\n          ) {\n            return elements;\n          }\n\n          elements.push({\n            ...element,\n            // don't store last point if not committed\n            points:\n              element.lastCommittedPoint !==\n              element.points[element.points.length - 1]\n                ? element.points.slice(0, -1)\n                : element.points,\n          });\n        } else {\n          elements.push(element);\n        }\n        return elements;\n      }, [] as Mutable<typeof elements>),\n    });\n\n  shouldCreateEntry(nextEntry: HistoryEntry): boolean {\n    const { lastEntry } = this;\n\n    if (!lastEntry) {\n      return true;\n    }\n\n    if (nextEntry.elements.length !== lastEntry.elements.length) {\n      return true;\n    }\n\n    // loop from right to left as changes are likelier to happen on new elements\n    for (let i = nextEntry.elements.length - 1; i > -1; i--) {\n      const prev = nextEntry.elements[i];\n      const next = lastEntry.elements[i];\n      if (\n        !prev ||\n        !next ||\n        prev.id !== next.id ||\n        prev.versionNonce !== next.versionNonce\n      ) {\n        return true;\n      }\n    }\n\n    // note: this is safe because entry's appState is guaranteed no excess props\n    let key: keyof typeof nextEntry.appState;\n    for (key in nextEntry.appState) {\n      if (key === \"editingLinearElement\") {\n        if (\n          nextEntry.appState[key]?.elementId ===\n          lastEntry.appState[key]?.elementId\n        ) {\n          continue;\n        }\n      }\n      if (key === \"selectedElementIds\" || key === \"selectedGroupIds\") {\n        continue;\n      }\n      if (nextEntry.appState[key] !== lastEntry.appState[key]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  pushEntry(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    const newEntryDehydrated = this.generateEntry(appState, elements);\n    const newEntry: HistoryEntry = this.hydrateHistoryEntry(newEntryDehydrated);\n\n    if (newEntry) {\n      if (!this.shouldCreateEntry(newEntry)) {\n        return;\n      }\n\n      this.stateHistory.push(newEntryDehydrated);\n      this.lastEntry = newEntry;\n      // As a new entry was pushed, we invalidate the redo stack\n      this.clearRedoStack();\n    }\n  }\n\n  clearRedoStack() {\n    this.redoStack.splice(0, this.redoStack.length);\n  }\n\n  redoOnce(): HistoryEntry | null {\n    if (this.redoStack.length === 0) {\n      return null;\n    }\n\n    const entryToRestore = this.redoStack.pop();\n\n    if (entryToRestore !== undefined) {\n      this.stateHistory.push(entryToRestore);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  undoOnce(): HistoryEntry | null {\n    if (this.stateHistory.length === 1) {\n      return null;\n    }\n\n    const currentEntry = this.stateHistory.pop();\n\n    const entryToRestore = this.stateHistory[this.stateHistory.length - 1];\n\n    if (currentEntry !== undefined) {\n      this.redoStack.push(currentEntry);\n      return this.hydrateHistoryEntry(entryToRestore);\n    }\n\n    return null;\n  }\n\n  /**\n   * Updates history's `lastEntry` to latest app state. This is necessary\n   *  when doing undo/redo which itself doesn't commit to history, but updates\n   *  app state in a way that would break `shouldCreateEntry` which relies on\n   *  `lastEntry` to reflect last comittable history state.\n   * We can't update `lastEntry` from within history when calling undo/redo\n   *  because the action potentially mutates appState/elements before storing\n   *  it.\n   */\n  setCurrentState(appState: AppState, elements: readonly ExcalidrawElement[]) {\n    this.lastEntry = this.hydrateHistoryEntry(\n      this.generateEntry(appState, elements),\n    );\n  }\n\n  // Suspicious that this is called so many places. Seems error-prone.\n  resumeRecording() {\n    this.recording = true;\n  }\n\n  record(state: AppState, elements: readonly ExcalidrawElement[]) {\n    if (this.recording) {\n      this.pushEntry(state, elements);\n      this.recording = false;\n    }\n  }\n}\n\nexport default History;\n","import React from \"react\";\nimport { KEYS } from \"./keys\";\n\n// We inline font-awesome icons in order to save on js size rather than including the font awesome react library\nexport const SHAPES = [\n  {\n    icon: (\n      // fa-mouse-pointer\n      <svg viewBox=\"0 0 320 512\" className=\"\">\n        <path d=\"M302.189 329.126H196.105l55.831 135.993c3.889 9.428-.555 19.999-9.444 23.999l-49.165 21.427c-9.165 4-19.443-.571-23.332-9.714l-53.053-129.136-86.664 89.138C18.729 472.71 0 463.554 0 447.977V18.299C0 1.899 19.921-6.096 30.277 5.443l284.412 292.542c11.472 11.179 3.007 31.141-12.5 31.141z\" />\n      </svg>\n    ),\n    value: \"selection\",\n    key: KEYS.V,\n  },\n  {\n    icon: (\n      // fa-square\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z\" />\n      </svg>\n    ),\n    value: \"rectangle\",\n    key: KEYS.R,\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 223.646 223.646\">\n        <path d=\"M111.823 0L16.622 111.823 111.823 223.646 207.025 111.823z\" />\n      </svg>\n    ),\n    value: \"diamond\",\n    key: KEYS.D,\n  },\n  {\n    icon: (\n      // fa-circle\n      <svg viewBox=\"0 0 512 512\">\n        <path d=\"M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8z\" />\n      </svg>\n    ),\n    value: \"ellipse\",\n    key: KEYS.E,\n  },\n  {\n    icon: (\n      // fa-long-arrow-alt-right\n      <svg viewBox=\"0 0 448 512\" className=\"rtl-mirror\">\n        <path d=\"M313.941 216H12c-6.627 0-12 5.373-12 12v56c0 6.627 5.373 12 12 12h301.941v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.569 0-33.941l-86.059-86.059c-15.119-15.119-40.971-4.411-40.971 16.971V216z\" />\n      </svg>\n    ),\n    value: \"arrow\",\n    key: KEYS.A,\n  },\n  {\n    icon: (\n      // custom\n      <svg viewBox=\"0 0 6 6\">\n        <line\n          x1=\"0\"\n          y1=\"3\"\n          x2=\"6\"\n          y2=\"3\"\n          stroke=\"currentColor\"\n          strokeLinecap=\"round\"\n        />\n      </svg>\n    ),\n    value: \"line\",\n    key: [KEYS.P, KEYS.L],\n  },\n  {\n    icon: (\n      // fa-pencil\n      <svg viewBox=\"0 0 512 512\">\n        <path\n          fill=\"currentColor\"\n          d=\"M290.74 93.24l128.02 128.02-277.99 277.99-114.14 12.6C11.35 513.54-1.56 500.62.14 485.34l12.7-114.22 277.9-277.88zm207.2-19.06l-60.11-60.11c-18.75-18.75-49.16-18.75-67.91 0l-56.55 56.55 128.02 128.02 56.55-56.55c18.75-18.76 18.75-49.16 0-67.91z\"\n        ></path>\n      </svg>\n    ),\n    value: \"freedraw\",\n    key: KEYS.X,\n  },\n  {\n    icon: (\n      // fa-font\n      <svg viewBox=\"0 0 448 512\">\n        <path d=\"M432 416h-23.41L277.88 53.69A32 32 0 0 0 247.58 32h-47.16a32 32 0 0 0-30.3 21.69L39.41 416H16a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16h-19.58l23.3-64h152.56l23.3 64H304a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM176.85 272L224 142.51 271.15 272z\" />\n      </svg>\n    ),\n    value: \"text\",\n    key: KEYS.T,\n  },\n] as const;\n\nexport const findShapeByKey = (key: string) => {\n  const shape = SHAPES.find((shape, index) => {\n    return (\n      key === (index + 1).toString() ||\n      (typeof shape.key === \"string\"\n        ? shape.key === key\n        : (shape.key as readonly string[]).includes(key))\n    );\n  });\n  return shape?.value || null;\n};\n","import { t } from \"../i18n\";\nimport { isDarwin } from \"../keys\";\nimport { getShortcutKey } from \"../utils\";\n\nexport type ShortcutName =\n  | \"cut\"\n  | \"copy\"\n  | \"paste\"\n  | \"copyStyles\"\n  | \"pasteStyles\"\n  | \"selectAll\"\n  | \"deleteSelectedElements\"\n  | \"duplicateSelection\"\n  | \"sendBackward\"\n  | \"bringForward\"\n  | \"sendToBack\"\n  | \"bringToFront\"\n  | \"copyAsPng\"\n  | \"copyAsSvg\"\n  | \"group\"\n  | \"ungroup\"\n  | \"gridMode\"\n  | \"zenMode\"\n  | \"stats\"\n  | \"addToLibrary\"\n  | \"viewMode\"\n  | \"flipHorizontal\"\n  | \"flipVertical\";\n\nconst shortcutMap: Record<ShortcutName, string[]> = {\n  cut: [getShortcutKey(\"CtrlOrCmd+X\")],\n  copy: [getShortcutKey(\"CtrlOrCmd+C\")],\n  paste: [getShortcutKey(\"CtrlOrCmd+V\")],\n  copyStyles: [getShortcutKey(\"CtrlOrCmd+Alt+C\")],\n  pasteStyles: [getShortcutKey(\"CtrlOrCmd+Alt+V\")],\n  selectAll: [getShortcutKey(\"CtrlOrCmd+A\")],\n  deleteSelectedElements: [getShortcutKey(\"Del\")],\n  duplicateSelection: [\n    getShortcutKey(\"CtrlOrCmd+D\"),\n    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n  ],\n  sendBackward: [getShortcutKey(\"CtrlOrCmd+[\")],\n  bringForward: [getShortcutKey(\"CtrlOrCmd+]\")],\n  sendToBack: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n  ],\n  bringToFront: [\n    isDarwin\n      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n  ],\n  copyAsPng: [getShortcutKey(\"Shift+Alt+C\")],\n  copyAsSvg: [],\n  group: [getShortcutKey(\"CtrlOrCmd+G\")],\n  ungroup: [getShortcutKey(\"CtrlOrCmd+Shift+G\")],\n  gridMode: [getShortcutKey(\"CtrlOrCmd+'\")],\n  zenMode: [getShortcutKey(\"Alt+Z\")],\n  stats: [getShortcutKey(\"Alt+/\")],\n  addToLibrary: [],\n  flipHorizontal: [getShortcutKey(\"Shift+H\")],\n  flipVertical: [getShortcutKey(\"Shift+V\")],\n  viewMode: [getShortcutKey(\"Alt+R\")],\n};\n\nexport const getShortcutFromShortcutName = (name: ShortcutName) => {\n  const shortcuts = shortcutMap[name];\n  // if multiple shortcuts availiable, take the first one\n  return shortcuts && shortcuts.length > 0 ? shortcuts[0] : \"\";\n};\n","import React from \"react\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { Popover } from \"./Popover\";\nimport { t } from \"../i18n\";\n\nimport \"./ContextMenu.scss\";\nimport {\n  getShortcutFromShortcutName,\n  ShortcutName,\n} from \"../actions/shortcuts\";\nimport { Action } from \"../actions/types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { AppState } from \"../types\";\n\nexport type ContextMenuOption = \"separator\" | Action;\n\ntype ContextMenuProps = {\n  options: ContextMenuOption[];\n  onCloseRequest?(): void;\n  top: number;\n  left: number;\n  actionManager: ActionManager;\n  appState: Readonly<AppState>;\n};\n\nconst ContextMenu = ({\n  options,\n  onCloseRequest,\n  top,\n  left,\n  actionManager,\n  appState,\n}: ContextMenuProps) => {\n  return (\n    <Popover\n      onCloseRequest={onCloseRequest}\n      top={top}\n      left={left}\n      fitInViewport={true}\n    >\n      <ul\n        className=\"context-menu\"\n        onContextMenu={(event) => event.preventDefault()}\n      >\n        {options.map((option, idx) => {\n          if (option === \"separator\") {\n            return <hr key={idx} className=\"context-menu-option-separator\" />;\n          }\n\n          const actionName = option.name;\n          const label = option.contextItemLabel\n            ? t(option.contextItemLabel)\n            : \"\";\n          return (\n            <li key={idx} data-testid={actionName} onClick={onCloseRequest}>\n              <button\n                className={clsx(\"context-menu-option\", {\n                  dangerous: actionName === \"deleteSelectedElements\",\n                  checkmark: option.checked?.(appState),\n                })}\n                onClick={() => actionManager.executeAction(option)}\n              >\n                <div className=\"context-menu-option__label\">{label}</div>\n                <kbd className=\"context-menu-option__shortcut\">\n                  {actionName\n                    ? getShortcutFromShortcutName(actionName as ShortcutName)\n                    : \"\"}\n                </kbd>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </Popover>\n  );\n};\n\nconst contextMenuNodeByContainer = new WeakMap<HTMLElement, HTMLDivElement>();\n\nconst getContextMenuNode = (container: HTMLElement): HTMLDivElement => {\n  let contextMenuNode = contextMenuNodeByContainer.get(container);\n  if (contextMenuNode) {\n    return contextMenuNode;\n  }\n  contextMenuNode = document.createElement(\"div\");\n  container\n    .querySelector(\".excalidraw-contextMenuContainer\")!\n    .appendChild(contextMenuNode);\n  contextMenuNodeByContainer.set(container, contextMenuNode);\n  return contextMenuNode;\n};\n\ntype ContextMenuParams = {\n  options: (ContextMenuOption | false | null | undefined)[];\n  top: ContextMenuProps[\"top\"];\n  left: ContextMenuProps[\"left\"];\n  actionManager: ContextMenuProps[\"actionManager\"];\n  appState: Readonly<AppState>;\n  container: HTMLElement;\n};\n\nconst handleClose = (container: HTMLElement) => {\n  const contextMenuNode = contextMenuNodeByContainer.get(container);\n  if (contextMenuNode) {\n    unmountComponentAtNode(contextMenuNode);\n    contextMenuNode.remove();\n    contextMenuNodeByContainer.delete(container);\n  }\n};\n\nexport default {\n  push(params: ContextMenuParams) {\n    const options = Array.of<ContextMenuOption>();\n    params.options.forEach((option) => {\n      if (option) {\n        options.push(option);\n      }\n    });\n    if (options.length) {\n      render(\n        <ContextMenu\n          top={params.top}\n          left={params.left}\n          options={options}\n          onCloseRequest={() => handleClose(params.container)}\n          actionManager={params.actionManager}\n          appState={params.appState}\n        />,\n        getContextMenuNode(params.container),\n      );\n    }\n  },\n};\n","import React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { getNonDeletedElements } from \"../element\";\nimport { ExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport {\n  canChangeSharpness,\n  canHaveArrowheads,\n  getTargetElements,\n  hasBackground,\n  hasStrokeStyle,\n  hasStrokeWidth,\n  hasText,\n} from \"../scene\";\nimport { SHAPES } from \"../shapes\";\nimport { AppState, Zoom } from \"../types\";\nimport { capitalizeString, isTransparent, setCursorForShape } from \"../utils\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\n\nexport const SelectedShapeActions = ({\n  appState,\n  elements,\n  renderAction,\n  elementType,\n}: {\n  appState: AppState;\n  elements: readonly ExcalidrawElement[];\n  renderAction: ActionManager[\"renderAction\"];\n  elementType: ExcalidrawElement[\"type\"];\n}) => {\n  const targetElements = getTargetElements(\n    getNonDeletedElements(elements),\n    appState,\n  );\n  const isEditing = Boolean(appState.editingElement);\n  const isMobile = useIsMobile();\n  const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\";\n\n  const showFillIcons =\n    hasBackground(elementType) ||\n    targetElements.some(\n      (element) =>\n        hasBackground(element.type) && !isTransparent(element.backgroundColor),\n    );\n  const showChangeBackgroundIcons =\n    hasBackground(elementType) ||\n    targetElements.some((element) => hasBackground(element.type));\n\n  return (\n    <div className=\"panelColumn\">\n      {renderAction(\"changeStrokeColor\")}\n      {showChangeBackgroundIcons && renderAction(\"changeBackgroundColor\")}\n      {showFillIcons && renderAction(\"changeFillStyle\")}\n\n      {(hasStrokeWidth(elementType) ||\n        targetElements.some((element) => hasStrokeWidth(element.type))) &&\n        renderAction(\"changeStrokeWidth\")}\n\n      {(elementType === \"freedraw\" ||\n        targetElements.some((element) => element.type === \"freedraw\")) &&\n        renderAction(\"changeStrokeShape\")}\n\n      {(hasStrokeStyle(elementType) ||\n        targetElements.some((element) => hasStrokeStyle(element.type))) && (\n        <>\n          {renderAction(\"changeStrokeStyle\")}\n          {renderAction(\"changeSloppiness\")}\n        </>\n      )}\n\n      {(canChangeSharpness(elementType) ||\n        targetElements.some((element) => canChangeSharpness(element.type))) && (\n        <>{renderAction(\"changeSharpness\")}</>\n      )}\n\n      {(hasText(elementType) ||\n        targetElements.some((element) => hasText(element.type))) && (\n        <>\n          {renderAction(\"changeFontSize\")}\n\n          {renderAction(\"changeFontFamily\")}\n\n          {renderAction(\"changeTextAlign\")}\n        </>\n      )}\n\n      {(canHaveArrowheads(elementType) ||\n        targetElements.some((element) => canHaveArrowheads(element.type))) && (\n        <>{renderAction(\"changeArrowhead\")}</>\n      )}\n\n      {renderAction(\"changeOpacity\")}\n\n      <fieldset>\n        <legend>{t(\"labels.layers\")}</legend>\n        <div className=\"buttonList\">\n          {renderAction(\"sendToBack\")}\n          {renderAction(\"sendBackward\")}\n          {renderAction(\"bringToFront\")}\n          {renderAction(\"bringForward\")}\n        </div>\n      </fieldset>\n\n      {targetElements.length > 1 && (\n        <fieldset>\n          <legend>{t(\"labels.align\")}</legend>\n          <div className=\"buttonList\">\n            {\n              // swap this order for RTL so the button positions always match their action\n              // (i.e. the leftmost button aligns left)\n            }\n            {isRTL ? (\n              <>\n                {renderAction(\"alignRight\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignLeft\")}\n              </>\n            ) : (\n              <>\n                {renderAction(\"alignLeft\")}\n                {renderAction(\"alignHorizontallyCentered\")}\n                {renderAction(\"alignRight\")}\n              </>\n            )}\n            {targetElements.length > 2 &&\n              renderAction(\"distributeHorizontally\")}\n            <div className=\"iconRow\">\n              {renderAction(\"alignTop\")}\n              {renderAction(\"alignVerticallyCentered\")}\n              {renderAction(\"alignBottom\")}\n              {targetElements.length > 2 &&\n                renderAction(\"distributeVertically\")}\n            </div>\n          </div>\n        </fieldset>\n      )}\n      {!isMobile && !isEditing && targetElements.length > 0 && (\n        <fieldset>\n          <legend>{t(\"labels.actions\")}</legend>\n          <div className=\"buttonList\">\n            {renderAction(\"duplicateSelection\")}\n            {renderAction(\"deleteSelectedElements\")}\n            {renderAction(\"group\")}\n            {renderAction(\"ungroup\")}\n          </div>\n        </fieldset>\n      )}\n    </div>\n  );\n};\n\nexport const ShapesSwitcher = ({\n  canvas,\n  elementType,\n  setAppState,\n}: {\n  canvas: HTMLCanvasElement | null;\n  elementType: ExcalidrawElement[\"type\"];\n  setAppState: React.Component<any, AppState>[\"setState\"];\n}) => (\n  <>\n    {SHAPES.map(({ value, icon, key }, index) => {\n      const label = t(`toolBar.${value}`);\n      const letter = typeof key === \"string\" ? key : key[0];\n      const shortcut = `${capitalizeString(letter)} ${t(\"helpDialog.or\")} ${\n        index + 1\n      }`;\n      return (\n        <ToolButton\n          className=\"Shape\"\n          key={value}\n          type=\"radio\"\n          icon={icon}\n          checked={elementType === value}\n          name=\"editor-current-shape\"\n          title={`${capitalizeString(label)} — ${shortcut}`}\n          keyBindingLabel={`${index + 1}`}\n          aria-label={capitalizeString(label)}\n          aria-keyshortcuts={shortcut}\n          data-testid={value}\n          onChange={() => {\n            setAppState({\n              elementType: value,\n              multiElement: null,\n              selectedElementIds: {},\n            });\n            setCursorForShape(canvas, value);\n            setAppState({});\n          }}\n        />\n      );\n    })}\n  </>\n);\n\nexport const ZoomActions = ({\n  renderAction,\n  zoom,\n}: {\n  renderAction: ActionManager[\"renderAction\"];\n  zoom: Zoom;\n}) => (\n  <Stack.Col gap={1}>\n    <Stack.Row gap={1} align=\"center\">\n      {renderAction(\"zoomOut\")}\n      {renderAction(\"zoomIn\")}\n      {renderAction(\"resetZoom\")}\n    </Stack.Row>\n  </Stack.Col>\n);\n","import React from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { AppState } from \"../types\";\n\nexport const BackgroundPickerAndDarkModeToggle = ({\n  appState,\n  setAppState,\n  actionManager,\n  showThemeBtn,\n}: {\n  actionManager: ActionManager;\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  showThemeBtn: boolean;\n}) => (\n  <div style={{ display: \"flex\" }}>\n    {actionManager.renderAction(\"changeViewBackgroundColor\")}\n    {showThemeBtn && actionManager.renderAction(\"toggleTheme\")}\n  </div>\n);\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { ToolButton } from \"./ToolButton\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { users } from \"./icons\";\n\nimport \"./CollabButton.scss\";\n\nconst CollabButton = ({\n  isCollaborating,\n  collaboratorCount,\n  onClick,\n}: {\n  isCollaborating: boolean;\n  collaboratorCount: number;\n  onClick: () => void;\n}) => {\n  return (\n    <>\n      <ToolButton\n        className={clsx(\"CollabButton\", {\n          \"is-collaborating\": isCollaborating,\n        })}\n        onClick={onClick}\n        icon={users}\n        type=\"button\"\n        title={t(\"labels.liveCollaboration\")}\n        aria-label={t(\"labels.liveCollaboration\")}\n        showAriaLabel={useIsMobile()}\n      >\n        {collaboratorCount > 0 && (\n          <div className=\"CollabButton-collaborators\">{collaboratorCount}</div>\n        )}\n      </ToolButton>\n    </>\n  );\n};\n\nexport default CollabButton;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { render, unmountComponentAtNode } from \"react-dom\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport { probablySupportsClipboardBlob } from \"../clipboard\";\nimport { canvasToBlob } from \"../data/blob\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { CanvasError } from \"../errors\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"./App\";\nimport { getSelectedElements, isSomeElementSelected } from \"../scene\";\nimport { exportToCanvas } from \"../scene/export\";\nimport { AppState } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { clipboard, exportImage } from \"./icons\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport \"./ExportDialog.scss\";\nimport { supported as fsSupported } from \"browser-fs-access\";\nimport OpenColor from \"open-color\";\nimport { CheckboxItem } from \"./CheckboxItem\";\nimport { DEFAULT_EXPORT_PADDING } from \"../constants\";\n\nconst supportsContextFilters =\n  \"filter\" in document.createElement(\"canvas\").getContext(\"2d\")!;\n\nexport const ErrorCanvasPreview = () => {\n  return (\n    <div>\n      <h3>{t(\"canvasError.cannotShowPreview\")}</h3>\n      <p>\n        <span>{t(\"canvasError.canvasTooBig\")}</span>\n      </p>\n      <em>({t(\"canvasError.canvasTooBigTip\")})</em>\n    </div>\n  );\n};\n\nconst renderPreview = (\n  content: HTMLCanvasElement | Error,\n  previewNode: HTMLDivElement,\n) => {\n  unmountComponentAtNode(previewNode);\n  previewNode.innerHTML = \"\";\n  if (content instanceof HTMLCanvasElement) {\n    previewNode.appendChild(content);\n  } else {\n    render(<ErrorCanvasPreview />, previewNode);\n  }\n};\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst ExportButton: React.FC<{\n  color: keyof OpenColor;\n  onClick: () => void;\n  title: string;\n  shade?: number;\n}> = ({ children, title, onClick, color, shade = 6 }) => {\n  return (\n    <button\n      className=\"ExportDialog-imageExportButton\"\n      style={{\n        [\"--button-color\" as any]: OpenColor[color][shade],\n        [\"--button-color-darker\" as any]: OpenColor[color][shade + 1],\n        [\"--button-color-darkest\" as any]: OpenColor[color][shade + 2],\n      }}\n      title={title}\n      aria-label={title}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst ImageExportModal = ({\n  elements,\n  appState,\n  exportPadding = DEFAULT_EXPORT_PADDING,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n  onCloseRequest: () => void;\n}) => {\n  const someElementIsSelected = isSomeElementSelected(elements, appState);\n  const [exportSelected, setExportSelected] = useState(someElementIsSelected);\n  const previewRef = useRef<HTMLDivElement>(null);\n  const { exportBackground, viewBackgroundColor } = appState;\n\n  const exportedElements = exportSelected\n    ? getSelectedElements(elements, appState)\n    : elements;\n\n  useEffect(() => {\n    setExportSelected(someElementIsSelected);\n  }, [someElementIsSelected]);\n\n  useEffect(() => {\n    const previewNode = previewRef.current;\n    if (!previewNode) {\n      return;\n    }\n    try {\n      const canvas = exportToCanvas(exportedElements, appState, {\n        exportBackground,\n        viewBackgroundColor,\n        exportPadding,\n      });\n\n      // if converting to blob fails, there's some problem that will\n      // likely prevent preview and export (e.g. canvas too big)\n      canvasToBlob(canvas)\n        .then(() => {\n          renderPreview(canvas, previewNode);\n        })\n        .catch((error) => {\n          console.error(error);\n          renderPreview(new CanvasError(), previewNode);\n        });\n    } catch (error) {\n      console.error(error);\n      renderPreview(new CanvasError(), previewNode);\n    }\n  }, [\n    appState,\n    exportedElements,\n    exportBackground,\n    exportPadding,\n    viewBackgroundColor,\n  ]);\n\n  return (\n    <div className=\"ExportDialog\">\n      <div className=\"ExportDialog__preview\" ref={previewRef} />\n      {supportsContextFilters &&\n        actionManager.renderAction(\"exportWithDarkMode\")}\n      <div style={{ display: \"grid\", gridTemplateColumns: \"1fr\" }}>\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fit, minmax(190px, 1fr))\",\n            // dunno why this is needed, but when the items wrap it creates\n            // an overflow\n            overflow: \"hidden\",\n          }}\n        >\n          {actionManager.renderAction(\"changeExportBackground\")}\n          {someElementIsSelected && (\n            <CheckboxItem\n              checked={exportSelected}\n              onChange={(checked) => setExportSelected(checked)}\n            >\n              {t(\"labels.onlySelected\")}\n            </CheckboxItem>\n          )}\n          {actionManager.renderAction(\"changeExportEmbedScene\")}\n        </div>\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \".6em\" }}>\n        <Stack.Row gap={2}>\n          {actionManager.renderAction(\"changeExportScale\")}\n        </Stack.Row>\n        <p style={{ marginLeft: \"1em\", userSelect: \"none\" }}>Scale</p>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: \".6em 0\",\n        }}\n      >\n        {!fsSupported && actionManager.renderAction(\"changeProjectName\")}\n      </div>\n      <Stack.Row gap={2} justifyContent=\"center\" style={{ margin: \"2em 0\" }}>\n        <ExportButton\n          color=\"indigo\"\n          title={t(\"buttons.exportToPng\")}\n          aria-label={t(\"buttons.exportToPng\")}\n          onClick={() => onExportToPng(exportedElements)}\n        >\n          PNG\n        </ExportButton>\n        <ExportButton\n          color=\"red\"\n          title={t(\"buttons.exportToSvg\")}\n          aria-label={t(\"buttons.exportToSvg\")}\n          onClick={() => onExportToSvg(exportedElements)}\n        >\n          SVG\n        </ExportButton>\n        {probablySupportsClipboardBlob && (\n          <ExportButton\n            title={t(\"buttons.copyPngToClipboard\")}\n            onClick={() => onExportToClipboard(exportedElements)}\n            color=\"gray\"\n            shade={7}\n          >\n            {clipboard}\n          </ExportButton>\n        )}\n      </Stack.Row>\n    </div>\n  );\n};\n\nexport const ImageExportDialog = ({\n  elements,\n  appState,\n  exportPadding = DEFAULT_EXPORT_PADDING,\n  actionManager,\n  onExportToPng,\n  onExportToSvg,\n  onExportToClipboard,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  exportPadding?: number;\n  actionManager: ActionsManagerInterface;\n  onExportToPng: ExportCB;\n  onExportToSvg: ExportCB;\n  onExportToClipboard: ExportCB;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => {\n          setModalIsShown(true);\n        }}\n        data-testid=\"image-export-button\"\n        icon={exportImage}\n        type=\"button\"\n        aria-label={t(\"buttons.exportImage\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.exportImage\")}\n      />\n      {modalIsShown && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.exportImage\")}>\n          <ImageExportModal\n            elements={elements}\n            appState={appState}\n            exportPadding={exportPadding}\n            actionManager={actionManager}\n            onExportToPng={onExportToPng}\n            onExportToSvg={onExportToSvg}\n            onExportToClipboard={onExportToClipboard}\n            onCloseRequest={handleClose}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import \"./FixedSideContainer.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype FixedSideContainerProps = {\n  children: React.ReactNode;\n  side: \"top\" | \"left\" | \"right\";\n  className?: string;\n};\n\nexport const FixedSideContainer = ({\n  children,\n  side,\n  className,\n}: FixedSideContainerProps) => (\n  <div\n    className={clsx(\n      \"FixedSideContainer\",\n      `FixedSideContainer_side_${side}`,\n      className,\n    )}\n  >\n    {children}\n  </div>\n);\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { getSelectedElements } from \"../scene\";\n\nimport \"./HintViewer.scss\";\nimport { AppState } from \"../types\";\nimport { isLinearElement, isTextElement } from \"../element/typeChecks\";\nimport { getShortcutKey } from \"../utils\";\n\ninterface Hint {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n}\n\nconst getHints = ({ appState, elements }: Hint) => {\n  const { elementType, isResizing, isRotating, lastPointerDownWith } = appState;\n  const multiMode = appState.multiElement !== null;\n  if (elementType === \"arrow\" || elementType === \"line\") {\n    if (!multiMode) {\n      return t(\"hints.linearElement\");\n    }\n    return t(\"hints.linearElementMulti\");\n  }\n\n  if (elementType === \"freedraw\") {\n    return t(\"hints.freeDraw\");\n  }\n\n  if (elementType === \"text\") {\n    return t(\"hints.text\");\n  }\n\n  const selectedElements = getSelectedElements(elements, appState);\n  if (\n    isResizing &&\n    lastPointerDownWith === \"mouse\" &&\n    selectedElements.length === 1\n  ) {\n    const targetElement = selectedElements[0];\n    if (isLinearElement(targetElement) && targetElement.points.length === 2) {\n      return t(\"hints.lockAngle\");\n    }\n    return t(\"hints.resize\");\n  }\n\n  if (isRotating && lastPointerDownWith === \"mouse\") {\n    return t(\"hints.rotate\");\n  }\n\n  if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n    if (appState.editingLinearElement) {\n      return appState.editingLinearElement.activePointIndex\n        ? t(\"hints.lineEditor_pointSelected\")\n        : t(\"hints.lineEditor_nothingSelected\");\n    }\n    return t(\"hints.lineEditor_info\");\n  }\n\n  if (selectedElements.length === 1 && isTextElement(selectedElements[0])) {\n    return t(\"hints.text_selected\");\n  }\n\n  if (appState.editingElement && isTextElement(appState.editingElement)) {\n    return t(\"hints.text_editing\");\n  }\n\n  return null;\n};\n\nexport const HintViewer = ({ appState, elements }: Hint) => {\n  let hint = getHints({\n    appState,\n    elements,\n  });\n  if (!hint) {\n    return null;\n  }\n\n  hint = getShortcutKey(hint);\n\n  return (\n    <div className=\"HintViewer\">\n      <span>{hint}</span>\n    </div>\n  );\n};\n","import \"./Island.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype IslandProps = {\n  children: React.ReactNode;\n  padding?: number;\n  className?: string | boolean;\n  style?: object;\n};\n\nexport const Island = React.forwardRef<HTMLDivElement, IslandProps>(\n  ({ children, padding, className, style }, ref) => (\n    <div\n      className={clsx(\"Island\", className)}\n      style={{ \"--padding\": padding, ...style }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  ),\n);\n","import clsx from \"clsx\";\nimport oc from \"open-color\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { close } from \"../components/icons\";\nimport { MIME_TYPES } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { exportToSvg } from \"../scene/export\";\nimport { LibraryItem } from \"../types\";\nimport \"./LibraryUnit.scss\";\n\n// fa-plus\nconst PLUS_ICON = (\n  <svg viewBox=\"0 0 1792 1792\">\n    <path\n      fill=\"currentColor\"\n      d=\"M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z\"\n    />\n  </svg>\n);\n\nexport const LibraryUnit = ({\n  elements,\n  pendingElements,\n  onRemoveFromLibrary,\n  onClick,\n}: {\n  elements?: LibraryItem;\n  pendingElements?: LibraryItem;\n  onRemoveFromLibrary: () => void;\n  onClick: () => void;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useEffect(() => {\n    const elementsToRender = elements || pendingElements;\n    if (!elementsToRender) {\n      return;\n    }\n    let svg: SVGSVGElement;\n    const current = ref.current!;\n\n    (async () => {\n      svg = await exportToSvg(elementsToRender, {\n        exportBackground: false,\n        viewBackgroundColor: oc.white,\n      });\n      for (const child of ref.current!.children) {\n        if (child.tagName !== \"svg\") {\n          continue;\n        }\n        current!.removeChild(child);\n      }\n      current!.appendChild(svg);\n    })();\n\n    return () => {\n      if (svg) {\n        current.removeChild(svg);\n      }\n    };\n  }, [elements, pendingElements]);\n\n  const [isHovered, setIsHovered] = useState(false);\n  const isMobile = useIsMobile();\n\n  const adder = (isHovered || isMobile) && pendingElements && (\n    <div className=\"library-unit__adder\">{PLUS_ICON}</div>\n  );\n\n  return (\n    <div\n      className={clsx(\"library-unit\", {\n        \"library-unit__active\": elements || pendingElements,\n      })}\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n    >\n      <div\n        className={clsx(\"library-unit__dragger\", {\n          \"library-unit__pulse\": !!pendingElements,\n        })}\n        ref={ref}\n        draggable={!!elements}\n        onClick={!!elements || !!pendingElements ? onClick : undefined}\n        onDragStart={(event) => {\n          setIsHovered(false);\n          event.dataTransfer.setData(\n            MIME_TYPES.excalidrawlib,\n            JSON.stringify(elements),\n          );\n        }}\n      />\n      {adder}\n      {elements && (isHovered || isMobile) && (\n        <button\n          className=\"library-unit__removeFromLibrary\"\n          aria-label={t(\"labels.removeFromLibrary\")}\n          onClick={onRemoveFromLibrary}\n        >\n          {close}\n        </button>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { t } from \"../i18n\";\n\nexport const LoadingMessage = () => {\n  // !! KEEP THIS IN SYNC WITH index.html !!\n  return (\n    <div className=\"LoadingMessage\">\n      <span>{t(\"labels.loadingScene\")}</span>\n    </div>\n  );\n};\n","import \"./ToolIcon.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { ToolButtonSize } from \"./ToolButton\";\n\ntype LockIconProps = {\n  title?: string;\n  name?: string;\n  checked: boolean;\n  onChange?(): void;\n  zenModeEnabled?: boolean;\n};\n\nconst DEFAULT_SIZE: ToolButtonSize = \"medium\";\n\nconst ICONS = {\n  CHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z\" />\n    </svg>\n  ),\n  UNCHECKED: (\n    <svg\n      width=\"1792\"\n      height=\"1792\"\n      viewBox=\"0 0 1792 1792\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"unlocked-icon rtl-mirror\"\n    >\n      <path d=\"M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z\" />\n    </svg>\n  ),\n};\n\nexport const LockButton = (props: LockIconProps) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon__lock ToolIcon_type_floating zen-mode-visibility\",\n        `ToolIcon_size_${DEFAULT_SIZE}`,\n        {\n          \"zen-mode-visibility--hidden\": props.zenModeEnabled,\n        },\n      )}\n      title={`${props.title} — Q`}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.onChange}\n        checked={props.checked}\n        aria-label={props.title}\n      />\n      <div className=\"ToolIcon__icon\">\n        {props.checked ? ICONS.CHECKED : ICONS.UNCHECKED}\n      </div>\n    </label>\n  );\n};\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { useExcalidrawContainer } from \"./App\";\n\ninterface SectionProps extends React.HTMLProps<HTMLElement> {\n  heading: string;\n  children: React.ReactNode | ((header: React.ReactNode) => React.ReactNode);\n}\n\nexport const Section = ({ heading, children, ...props }: SectionProps) => {\n  const { id } = useExcalidrawContainer();\n  const header = (\n    <h2 className=\"visually-hidden\" id={`${id}-${heading}-title`}>\n      {t(`headings.${heading}`)}\n    </h2>\n  );\n  return (\n    <section {...props} aria-labelledby={`${id}-${heading}-title`}>\n      {typeof children === \"function\" ? (\n        children(header)\n      ) : (\n        <>\n          {header}\n          {children}\n        </>\n      )}\n    </section>\n  );\n};\n","import \"./UserList.scss\";\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype UserListProps = {\n  children: React.ReactNode;\n  className?: string;\n  mobile?: boolean;\n};\n\nexport const UserList = ({ children, className, mobile }: UserListProps) => {\n  return (\n    <div className={clsx(\"UserList\", className, { UserList_mobile: mobile })}>\n      {children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { t } from \"../i18n\";\nimport { AppState } from \"../types\";\nimport { capitalizeString } from \"../utils\";\n\nconst LIBRARY_ICON = (\n  <svg viewBox=\"0 0 576 512\">\n    <path\n      fill=\"currentColor\"\n      d=\"M542.22 32.05c-54.8 3.11-163.72 14.43-230.96 55.59-4.64 2.84-7.27 7.89-7.27 13.17v363.87c0 11.55 12.63 18.85 23.28 13.49 69.18-34.82 169.23-44.32 218.7-46.92 16.89-.89 30.02-14.43 30.02-30.66V62.75c.01-17.71-15.35-31.74-33.77-30.7zM264.73 87.64C197.5 46.48 88.58 35.17 33.78 32.05 15.36 31.01 0 45.04 0 62.75V400.6c0 16.24 13.13 29.78 30.02 30.66 49.49 2.6 149.59 12.11 218.77 46.95 10.62 5.35 23.21-1.94 23.21-13.46V100.63c0-5.29-2.62-10.14-7.27-12.99z\"\n    ></path>\n  </svg>\n);\n\nexport const LibraryButton: React.FC<{\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n}> = ({ appState, setAppState }) => {\n  return (\n    <label\n      className={clsx(\n        \"ToolIcon ToolIcon_type_floating ToolIcon__library zen-mode-visibility\",\n        `ToolIcon_size_medium`,\n        {\n          \"zen-mode-visibility--hidden\": appState.zenModeEnabled,\n        },\n      )}\n      title={`${capitalizeString(t(\"toolBar.library\"))} — 9`}\n      style={{ marginInlineStart: \"var(--space-factor)\" }}\n    >\n      <input\n        className=\"ToolIcon_type_checkbox\"\n        type=\"checkbox\"\n        name=\"editor-library\"\n        onChange={(event) => {\n          setAppState({ isLibraryOpen: event.target.checked });\n        }}\n        checked={appState.isLibraryOpen}\n        aria-label={capitalizeString(t(\"toolBar.library\"))}\n        aria-keyshortcuts=\"9\"\n      />\n      <div className=\"ToolIcon__icon\">{LIBRARY_ICON}</div>\n    </label>\n  );\n};\n","import React from \"react\";\nimport { AppState } from \"../types\";\nimport { ActionManager } from \"../actions/manager\";\nimport { t } from \"../i18n\";\nimport Stack from \"./Stack\";\nimport { showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { Island } from \"./Island\";\nimport { HintViewer } from \"./HintViewer\";\nimport { calculateScrollCenter } from \"../scene\";\nimport { SelectedShapeActions, ShapesSwitcher } from \"./Actions\";\nimport { Section } from \"./Section\";\nimport CollabButton from \"./CollabButton\";\nimport { SCROLLBAR_WIDTH, SCROLLBAR_MARGIN } from \"../scene/scrollbars\";\nimport { LockButton } from \"./LockButton\";\nimport { UserList } from \"./UserList\";\nimport { BackgroundPickerAndDarkModeToggle } from \"./BackgroundPickerAndDarkModeToggle\";\nimport { LibraryButton } from \"./LibraryButton\";\n\ntype MobileMenuProps = {\n  appState: AppState;\n  actionManager: ActionManager;\n  renderJSONExportDialog: () => React.ReactNode;\n  renderImageExportDialog: () => React.ReactNode;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  libraryMenu: JSX.Element | null;\n  onCollabButtonClick?: () => void;\n  onLockToggle: () => void;\n  canvas: HTMLCanvasElement | null;\n  isCollaborating: boolean;\n  renderCustomFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  viewModeEnabled: boolean;\n  showThemeBtn: boolean;\n};\n\nexport const MobileMenu = ({\n  appState,\n  elements,\n  libraryMenu,\n  actionManager,\n  renderJSONExportDialog,\n  renderImageExportDialog,\n  setAppState,\n  onCollabButtonClick,\n  onLockToggle,\n  canvas,\n  isCollaborating,\n  renderCustomFooter,\n  viewModeEnabled,\n  showThemeBtn,\n}: MobileMenuProps) => {\n  const renderToolbar = () => {\n    return (\n      <FixedSideContainer side=\"top\" className=\"App-top-bar\">\n        <Section heading=\"shapes\">\n          {(heading) => (\n            <Stack.Col gap={4} align=\"center\">\n              <Stack.Row gap={1}>\n                <Island padding={1}>\n                  {heading}\n                  <Stack.Row gap={1}>\n                    <ShapesSwitcher\n                      canvas={canvas}\n                      elementType={appState.elementType}\n                      setAppState={setAppState}\n                    />\n                  </Stack.Row>\n                </Island>\n                <LockButton\n                  checked={appState.elementLocked}\n                  onChange={onLockToggle}\n                  title={t(\"toolBar.lock\")}\n                />\n                <LibraryButton appState={appState} setAppState={setAppState} />\n              </Stack.Row>\n              {libraryMenu}\n            </Stack.Col>\n          )}\n        </Section>\n        <HintViewer appState={appState} elements={elements} />\n      </FixedSideContainer>\n    );\n  };\n\n  const renderAppToolbar = () => {\n    if (viewModeEnabled) {\n      return (\n        <div className=\"App-toolbar-content\">\n          {actionManager.renderAction(\"toggleCanvasMenu\")}\n        </div>\n      );\n    }\n    return (\n      <div className=\"App-toolbar-content\">\n        {actionManager.renderAction(\"toggleCanvasMenu\")}\n        {actionManager.renderAction(\"toggleEditMenu\")}\n        {actionManager.renderAction(\"undo\")}\n        {actionManager.renderAction(\"redo\")}\n        {actionManager.renderAction(\n          appState.multiElement ? \"finalize\" : \"duplicateSelection\",\n        )}\n        {actionManager.renderAction(\"deleteSelectedElements\")}\n      </div>\n    );\n  };\n\n  const renderCanvasActions = () => {\n    if (viewModeEnabled) {\n      return (\n        <>\n          {renderJSONExportDialog()}\n          {renderImageExportDialog()}\n        </>\n      );\n    }\n    return (\n      <>\n        {actionManager.renderAction(\"clearCanvas\")}\n        {actionManager.renderAction(\"loadScene\")}\n        {renderJSONExportDialog()}\n        {renderImageExportDialog()}\n        {onCollabButtonClick && (\n          <CollabButton\n            isCollaborating={isCollaborating}\n            collaboratorCount={appState.collaborators.size}\n            onClick={onCollabButtonClick}\n          />\n        )}\n        {\n          <BackgroundPickerAndDarkModeToggle\n            actionManager={actionManager}\n            appState={appState}\n            setAppState={setAppState}\n            showThemeBtn={showThemeBtn}\n          />\n        }\n      </>\n    );\n  };\n  return (\n    <>\n      {!viewModeEnabled && renderToolbar()}\n      <div\n        className=\"App-bottom-bar\"\n        style={{\n          marginBottom: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginLeft: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n          marginRight: SCROLLBAR_WIDTH + SCROLLBAR_MARGIN * 2,\n        }}\n      >\n        <Island padding={0}>\n          {appState.openMenu === \"canvas\" ? (\n            <Section className=\"App-mobile-menu\" heading=\"canvasActions\">\n              <div className=\"panelColumn\">\n                <Stack.Col gap={4}>\n                  {renderCanvasActions()}\n                  {renderCustomFooter?.(true, appState)}\n                  {appState.collaborators.size > 0 && (\n                    <fieldset>\n                      <legend>{t(\"labels.collaborators\")}</legend>\n                      <UserList mobile>\n                        {Array.from(appState.collaborators)\n                          // Collaborator is either not initialized or is actually the current user.\n                          .filter(\n                            ([_, client]) => Object.keys(client).length !== 0,\n                          )\n                          .map(([clientId, client]) => (\n                            <React.Fragment key={clientId}>\n                              {actionManager.renderAction(\"goToCollaborator\", {\n                                id: clientId,\n                              })}\n                            </React.Fragment>\n                          ))}\n                      </UserList>\n                    </fieldset>\n                  )}\n                </Stack.Col>\n              </div>\n            </Section>\n          ) : appState.openMenu === \"shape\" &&\n            !viewModeEnabled &&\n            showSelectedShapeActions(appState, elements) ? (\n            <Section className=\"App-mobile-menu\" heading=\"selectedShapeActions\">\n              <SelectedShapeActions\n                appState={appState}\n                elements={elements}\n                renderAction={actionManager.renderAction}\n                elementType={appState.elementType}\n              />\n            </Section>\n          ) : null}\n          <footer className=\"App-toolbar\">\n            {renderAppToolbar()}\n            {appState.scrolledOutside && !appState.openMenu && (\n              <button\n                className=\"scroll-back-to-content\"\n                onClick={() => {\n                  setAppState({\n                    ...calculateScrollCenter(elements, appState, canvas),\n                  });\n                }}\n              >\n                {t(\"buttons.scrollBackToContent\")}\n              </button>\n            )}\n          </footer>\n        </Island>\n      </div>\n    </>\n  );\n};\n","import oc from \"open-color\";\nimport React, { useLayoutEffect, useRef, useState } from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport { ChartElements, renderSpreadsheet, Spreadsheet } from \"../charts\";\nimport { ChartType } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { exportToSvg } from \"../scene/export\";\nimport { AppState, LibraryItem } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport \"./PasteChartDialog.scss\";\n\ntype OnInsertChart = (chartType: ChartType, elements: ChartElements) => void;\n\nconst ChartPreviewBtn = (props: {\n  spreadsheet: Spreadsheet | null;\n  chartType: ChartType;\n  selected: boolean;\n  onClick: OnInsertChart;\n}) => {\n  const previewRef = useRef<HTMLDivElement | null>(null);\n  const [chartElements, setChartElements] = useState<ChartElements | null>(\n    null,\n  );\n\n  useLayoutEffect(() => {\n    if (!props.spreadsheet) {\n      return;\n    }\n\n    const elements = renderSpreadsheet(\n      props.chartType,\n      props.spreadsheet,\n      0,\n      0,\n    );\n    setChartElements(elements);\n    let svg: SVGSVGElement;\n    const previewNode = previewRef.current!;\n\n    (async () => {\n      svg = await exportToSvg(elements, {\n        exportBackground: false,\n        viewBackgroundColor: oc.white,\n      });\n\n      previewNode.appendChild(svg);\n\n      if (props.selected) {\n        (previewNode.parentNode as HTMLDivElement).focus();\n      }\n    })();\n\n    return () => {\n      previewNode.removeChild(svg);\n    };\n  }, [props.spreadsheet, props.chartType, props.selected]);\n\n  return (\n    <button\n      className=\"ChartPreview\"\n      onClick={() => {\n        if (chartElements) {\n          props.onClick(props.chartType, chartElements);\n        }\n      }}\n    >\n      <div ref={previewRef} />\n    </button>\n  );\n};\n\nexport const PasteChartDialog = ({\n  setAppState,\n  appState,\n  onClose,\n  onInsertChart,\n}: {\n  appState: AppState;\n  onClose: () => void;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  onInsertChart: (elements: LibraryItem) => void;\n}) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  const handleChartClick = (chartType: ChartType, elements: ChartElements) => {\n    onInsertChart(elements);\n    trackEvent(\"magic\", \"chart\", chartType);\n    setAppState({\n      currentChartType: chartType,\n      pasteDialog: {\n        shown: false,\n        data: null,\n      },\n    });\n  };\n\n  return (\n    <Dialog\n      small\n      onCloseRequest={handleClose}\n      title={t(\"labels.pasteCharts\")}\n      className={\"PasteChartDialog\"}\n      autofocus={false}\n    >\n      <div className={\"container\"}>\n        <ChartPreviewBtn\n          chartType=\"bar\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"bar\"}\n          onClick={handleChartClick}\n        />\n        <ChartPreviewBtn\n          chartType=\"line\"\n          spreadsheet={appState.pasteDialog.data}\n          selected={appState.currentChartType === \"line\"}\n          onClick={handleChartClick}\n        />\n      </div>\n    </Dialog>\n  );\n};\n","import React from \"react\";\nimport { t } from \"../i18n\";\nimport { isDarwin, isWindows } from \"../keys\";\nimport { Dialog } from \"./Dialog\";\nimport { getShortcutKey } from \"../utils\";\nimport \"./HelpDialog.scss\";\n\nconst Header = () => (\n  <div className=\"HelpDialog--header\">\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://github.com/excalidraw/excalidraw#documentation\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.documentation\")}\n    </a>\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://blog.excalidraw.com\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.blog\")}\n    </a>\n    <a\n      className=\"HelpDialog--btn\"\n      href=\"https://github.com/excalidraw/excalidraw/issues\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      {t(\"helpDialog.github\")}\n    </a>\n  </div>\n);\n\nconst Section = (props: { title: string; children: React.ReactNode }) => (\n  <>\n    <h3>{props.title}</h3>\n    {props.children}\n  </>\n);\n\nconst Columns = (props: { children: React.ReactNode }) => (\n  <div\n    style={{\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n    }}\n  >\n    {props.children}\n  </div>\n);\n\nconst Column = (props: { children: React.ReactNode }) => (\n  <div style={{ width: \"49%\" }}>{props.children}</div>\n);\n\nconst ShortcutIsland = (props: {\n  caption: string;\n  children: React.ReactNode;\n}) => (\n  <div className=\"HelpDialog--island\">\n    <h3 className=\"HelpDialog--island-title\">{props.caption}</h3>\n    {props.children}\n  </div>\n);\n\nconst Shortcut = (props: {\n  label: string;\n  shortcuts: string[];\n  isOr: boolean;\n}) => {\n  return (\n    <div className=\"HelpDialog--shortcut\">\n      <div\n        style={{\n          display: \"flex\",\n          margin: \"0\",\n          padding: \"4px 8px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            lineHeight: 1.4,\n          }}\n        >\n          {props.label}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flex: \"0 0 auto\",\n            justifyContent: \"flex-end\",\n            marginInlineStart: \"auto\",\n            minWidth: \"30%\",\n          }}\n        >\n          {props.shortcuts.map((shortcut, index) => (\n            <React.Fragment key={index}>\n              <ShortcutKey>{shortcut}</ShortcutKey>\n              {props.isOr &&\n                index !== props.shortcuts.length - 1 &&\n                t(\"helpDialog.or\")}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nShortcut.defaultProps = {\n  isOr: true,\n};\n\nconst ShortcutKey = (props: { children: React.ReactNode }) => (\n  <kbd className=\"HelpDialog--key\" {...props} />\n);\n\nexport const HelpDialog = ({ onClose }: { onClose?: () => void }) => {\n  const handleClose = React.useCallback(() => {\n    if (onClose) {\n      onClose();\n    }\n  }, [onClose]);\n\n  return (\n    <>\n      <Dialog\n        onCloseRequest={handleClose}\n        title={t(\"helpDialog.title\")}\n        className={\"HelpDialog\"}\n      >\n        <Header />\n        <Section title={t(\"helpDialog.shortcuts\")}>\n          <Columns>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.shapes\")}>\n                <Shortcut\n                  label={t(\"toolBar.selection\")}\n                  shortcuts={[\"V\", \"1\"]}\n                />\n                <Shortcut\n                  label={t(\"toolBar.rectangle\")}\n                  shortcuts={[\"R\", \"2\"]}\n                />\n                <Shortcut label={t(\"toolBar.diamond\")} shortcuts={[\"D\", \"3\"]} />\n                <Shortcut label={t(\"toolBar.ellipse\")} shortcuts={[\"E\", \"4\"]} />\n                <Shortcut label={t(\"toolBar.arrow\")} shortcuts={[\"A\", \"5\"]} />\n                <Shortcut label={t(\"toolBar.line\")} shortcuts={[\"P\", \"6\"]} />\n                <Shortcut\n                  label={t(\"toolBar.freedraw\")}\n                  shortcuts={[\"Shift+P\", \"7\"]}\n                />\n                <Shortcut label={t(\"toolBar.text\")} shortcuts={[\"T\", \"8\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.editSelectedShape\")}\n                  shortcuts={[\n                    getShortcutKey(\"Enter\"),\n                    t(\"helpDialog.doubleClick\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.textNewLine\")}\n                  shortcuts={[\n                    getShortcutKey(\"Enter\"),\n                    getShortcutKey(\"Shift+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.textFinish\")}\n                  shortcuts={[\n                    getShortcutKey(\"Esc\"),\n                    getShortcutKey(\"CtrlOrCmd+Enter\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedArrow\")}\n                  shortcuts={[\n                    \"A\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.curvedLine\")}\n                  shortcuts={[\n                    \"L\",\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                    t(\"helpDialog.click\"),\n                  ]}\n                  isOr={false}\n                />\n                <Shortcut label={t(\"toolBar.lock\")} shortcuts={[\"Q\"]} />\n                <Shortcut\n                  label={t(\"helpDialog.preventBinding\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd\")]}\n                />\n              </ShortcutIsland>\n              <ShortcutIsland caption={t(\"helpDialog.view\")}>\n                <Shortcut\n                  label={t(\"buttons.zoomIn\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd++\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.zoomOut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+-\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.resetZoom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+0\")]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToFit\")}\n                  shortcuts={[\"Shift+1\"]}\n                />\n                <Shortcut\n                  label={t(\"helpDialog.zoomToSelection\")}\n                  shortcuts={[\"Shift+2\"]}\n                />\n                <Shortcut label={t(\"buttons.fullScreen\")} shortcuts={[\"F\"]} />\n                <Shortcut\n                  label={t(\"buttons.zenMode\")}\n                  shortcuts={[getShortcutKey(\"Alt+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showGrid\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+'\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.viewMode\")}\n                  shortcuts={[getShortcutKey(\"Alt+R\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.toggleTheme\")}\n                  shortcuts={[getShortcutKey(\"Alt+Shift+D\")]}\n                />\n                <Shortcut\n                  label={t(\"stats.title\")}\n                  shortcuts={[getShortcutKey(\"Alt+/\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n            <Column>\n              <ShortcutIsland caption={t(\"helpDialog.editor\")}>\n                <Shortcut\n                  label={t(\"labels.selectAll\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+A\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.multiSelect\")}\n                  shortcuts={[getShortcutKey(`Shift+${t(\"helpDialog.click\")}`)]}\n                />\n                <Shortcut\n                  label={t(\"labels.moveCanvas\")}\n                  shortcuts={[\n                    getShortcutKey(`Space+${t(\"helpDialog.drag\")}`),\n                    getShortcutKey(`Wheel+${t(\"helpDialog.drag\")}`),\n                  ]}\n                  isOr={true}\n                />\n                <Shortcut\n                  label={t(\"labels.cut\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+X\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copy\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.paste\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyAsPng\")}\n                  shortcuts={[getShortcutKey(\"Shift+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.copyStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+C\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.pasteStyles\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Alt+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.delete\")}\n                  shortcuts={[getShortcutKey(\"Del\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendToBack\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+[\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+[\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringToFront\")}\n                  shortcuts={[\n                    isDarwin\n                      ? getShortcutKey(\"CtrlOrCmd+Alt+]\")\n                      : getShortcutKey(\"CtrlOrCmd+Shift+]\"),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"labels.sendBackward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+[\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.bringForward\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+]\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignTop\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Up\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignBottom\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Down\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignLeft\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Left\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.alignRight\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+Right\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.duplicateSelection\")}\n                  shortcuts={[\n                    getShortcutKey(\"CtrlOrCmd+D\"),\n                    getShortcutKey(`Alt+${t(\"helpDialog.drag\")}`),\n                  ]}\n                />\n                <Shortcut\n                  label={t(\"buttons.undo\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Z\")]}\n                />\n                <Shortcut\n                  label={t(\"buttons.redo\")}\n                  shortcuts={\n                    isWindows\n                      ? [\n                          getShortcutKey(\"CtrlOrCmd+Y\"),\n                          getShortcutKey(\"CtrlOrCmd+Shift+Z\"),\n                        ]\n                      : [getShortcutKey(\"CtrlOrCmd+Shift+Z\")]\n                  }\n                />\n                <Shortcut\n                  label={t(\"labels.group\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.ungroup\")}\n                  shortcuts={[getShortcutKey(\"CtrlOrCmd+Shift+G\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.flipHorizontal\")}\n                  shortcuts={[getShortcutKey(\"Shift+H\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.flipVertical\")}\n                  shortcuts={[getShortcutKey(\"Shift+V\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showStroke\")}\n                  shortcuts={[getShortcutKey(\"S\")]}\n                />\n                <Shortcut\n                  label={t(\"labels.showBackground\")}\n                  shortcuts={[getShortcutKey(\"G\")]}\n                />\n              </ShortcutIsland>\n            </Column>\n          </Columns>\n        </Section>\n      </Dialog>\n    </>\n  );\n};\n","import OpenColor from \"open-color\";\n\nimport \"./Card.scss\";\n\nexport const Card: React.FC<{\n  color: keyof OpenColor;\n}> = ({ children, color }) => {\n  return (\n    <div\n      className=\"Card\"\n      style={{\n        [\"--card-color\" as any]: OpenColor[color][7],\n        [\"--card-color-darker\" as any]: OpenColor[color][8],\n        [\"--card-color-darkest\" as any]: OpenColor[color][9],\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { ActionsManagerInterface } from \"../actions/types\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"./App\";\nimport { AppState, ExportOpts } from \"../types\";\nimport { Dialog } from \"./Dialog\";\nimport { exportFile, exportToFileIcon, link } from \"./icons\";\nimport { ToolButton } from \"./ToolButton\";\nimport { actionSaveFileToDisk } from \"../actions/actionExport\";\nimport { Card } from \"./Card\";\n\nimport \"./ExportDialog.scss\";\nimport { supported as fsSupported } from \"browser-fs-access\";\n\nexport type ExportCB = (\n  elements: readonly NonDeletedExcalidrawElement[],\n  scale?: number,\n) => void;\n\nconst JSONExportModal = ({\n  elements,\n  appState,\n  actionManager,\n  exportOpts,\n  canvas,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  actionManager: ActionsManagerInterface;\n  onCloseRequest: () => void;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n}) => {\n  const { onExportToBackend } = exportOpts;\n  return (\n    <div className=\"ExportDialog ExportDialog--json\">\n      <div className=\"ExportDialog-cards\">\n        {exportOpts.saveFileToDisk && (\n          <Card color=\"lime\">\n            <div className=\"Card-icon\">{exportToFileIcon}</div>\n            <h2>{t(\"exportDialog.disk_title\")}</h2>\n            <div className=\"Card-details\">\n              {t(\"exportDialog.disk_details\")}\n              {!fsSupported && actionManager.renderAction(\"changeProjectName\")}\n            </div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.disk_button\")}\n              aria-label={t(\"exportDialog.disk_button\")}\n              showAriaLabel={true}\n              onClick={() => {\n                actionManager.executeAction(actionSaveFileToDisk);\n              }}\n            />\n          </Card>\n        )}\n        {onExportToBackend && (\n          <Card color=\"pink\">\n            <div className=\"Card-icon\">{link}</div>\n            <h2>{t(\"exportDialog.link_title\")}</h2>\n            <div className=\"Card-details\">{t(\"exportDialog.link_details\")}</div>\n            <ToolButton\n              className=\"Card-button\"\n              type=\"button\"\n              title={t(\"exportDialog.link_button\")}\n              aria-label={t(\"exportDialog.link_button\")}\n              showAriaLabel={true}\n              onClick={() => onExportToBackend(elements, appState, canvas)}\n            />\n          </Card>\n        )}\n        {exportOpts.renderCustomUI &&\n          exportOpts.renderCustomUI(elements, appState, canvas)}\n      </div>\n    </div>\n  );\n};\n\nexport const JSONExportDialog = ({\n  elements,\n  appState,\n  actionManager,\n  exportOpts,\n  canvas,\n}: {\n  appState: AppState;\n  elements: readonly NonDeletedExcalidrawElement[];\n  actionManager: ActionsManagerInterface;\n  exportOpts: ExportOpts;\n  canvas: HTMLCanvasElement | null;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(false);\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n  }, []);\n\n  return (\n    <>\n      <ToolButton\n        onClick={() => {\n          setModalIsShown(true);\n        }}\n        data-testid=\"json-export-button\"\n        icon={exportFile}\n        type=\"button\"\n        aria-label={t(\"buttons.export\")}\n        showAriaLabel={useIsMobile()}\n        title={t(\"buttons.export\")}\n      />\n      {modalIsShown && (\n        <Dialog onCloseRequest={handleClose} title={t(\"buttons.export\")}>\n          <JSONExportModal\n            elements={elements}\n            appState={appState}\n            actionManager={actionManager}\n            onCloseRequest={handleClose}\n            exportOpts={exportOpts}\n            canvas={canvas}\n          />\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import clsx from \"clsx\";\nimport React, {\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { ActionManager } from \"../actions/manager\";\nimport { CLASSES } from \"../constants\";\nimport { exportCanvas } from \"../data\";\nimport { importLibraryFromJSON, saveLibraryAsJSON } from \"../data/json\";\nimport { isTextElement, showSelectedShapeActions } from \"../element\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { Language, t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { calculateScrollCenter, getSelectedElements } from \"../scene\";\nimport { ExportType } from \"../scene/types\";\nimport {\n  AppProps,\n  AppState,\n  ExcalidrawProps,\n  LibraryItem,\n  LibraryItems,\n} from \"../types\";\nimport { muteFSAbortError } from \"../utils\";\nimport { SelectedShapeActions, ShapesSwitcher, ZoomActions } from \"./Actions\";\nimport { BackgroundPickerAndDarkModeToggle } from \"./BackgroundPickerAndDarkModeToggle\";\nimport CollabButton from \"./CollabButton\";\nimport { ErrorDialog } from \"./ErrorDialog\";\nimport { ExportCB, ImageExportDialog } from \"./ImageExportDialog\";\nimport { FixedSideContainer } from \"./FixedSideContainer\";\nimport { HintViewer } from \"./HintViewer\";\nimport { exportFile, load, trash } from \"./icons\";\nimport { Island } from \"./Island\";\nimport \"./LayerUI.scss\";\nimport { LibraryUnit } from \"./LibraryUnit\";\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { LockButton } from \"./LockButton\";\nimport { MobileMenu } from \"./MobileMenu\";\nimport { PasteChartDialog } from \"./PasteChartDialog\";\nimport { Section } from \"./Section\";\nimport { HelpDialog } from \"./HelpDialog\";\nimport Stack from \"./Stack\";\nimport { ToolButton } from \"./ToolButton\";\nimport { Tooltip } from \"./Tooltip\";\nimport { UserList } from \"./UserList\";\nimport Library from \"../data/library\";\nimport { JSONExportDialog } from \"./JSONExportDialog\";\nimport { LibraryButton } from \"./LibraryButton\";\nimport { isImageFileHandle } from \"../data/blob\";\n\ninterface LayerUIProps {\n  actionManager: ActionManager;\n  appState: AppState;\n  canvas: HTMLCanvasElement | null;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onCollabButtonClick?: () => void;\n  onLockToggle: () => void;\n  onInsertElements: (elements: readonly NonDeletedExcalidrawElement[]) => void;\n  zenModeEnabled: boolean;\n  showExitZenModeBtn: boolean;\n  showThemeBtn: boolean;\n  toggleZenMode: () => void;\n  langCode: Language[\"code\"];\n  isCollaborating: boolean;\n  renderTopRightUI?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  renderCustomFooter?: (isMobile: boolean, appState: AppState) => JSX.Element;\n  viewModeEnabled: boolean;\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  UIOptions: AppProps[\"UIOptions\"];\n  focusContainer: () => void;\n  library: Library;\n  id: string;\n}\n\nconst useOnClickOutside = (\n  ref: RefObject<HTMLElement>,\n  cb: (event: MouseEvent) => void,\n) => {\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (!ref.current) {\n        return;\n      }\n\n      if (\n        event.target instanceof Element &&\n        (ref.current.contains(event.target) ||\n          !document.body.contains(event.target))\n      ) {\n        return;\n      }\n\n      cb(event);\n    };\n    document.addEventListener(\"pointerdown\", listener, false);\n\n    return () => {\n      document.removeEventListener(\"pointerdown\", listener);\n    };\n  }, [ref, cb]);\n};\n\nconst LibraryMenuItems = ({\n  libraryItems,\n  onRemoveFromLibrary,\n  onAddToLibrary,\n  onInsertShape,\n  pendingElements,\n  theme,\n  setAppState,\n  setLibraryItems,\n  libraryReturnUrl,\n  focusContainer,\n  library,\n  id,\n}: {\n  libraryItems: LibraryItems;\n  pendingElements: LibraryItem;\n  onRemoveFromLibrary: (index: number) => void;\n  onInsertShape: (elements: LibraryItem) => void;\n  onAddToLibrary: (elements: LibraryItem) => void;\n  theme: AppState[\"theme\"];\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  setLibraryItems: (library: LibraryItems) => void;\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  focusContainer: () => void;\n  library: Library;\n  id: string;\n}) => {\n  const isMobile = useIsMobile();\n  const numCells = libraryItems.length + (pendingElements.length > 0 ? 1 : 0);\n  const CELLS_PER_ROW = isMobile ? 4 : 6;\n  const numRows = Math.max(1, Math.ceil(numCells / CELLS_PER_ROW));\n  const rows = [];\n  let addedPendingElements = false;\n\n  const referrer =\n    libraryReturnUrl || window.location.origin + window.location.pathname;\n\n  rows.push(\n    <div className=\"layer-ui__library-header\" key=\"library-header\">\n      <ToolButton\n        key=\"import\"\n        type=\"button\"\n        title={t(\"buttons.load\")}\n        aria-label={t(\"buttons.load\")}\n        icon={load}\n        onClick={() => {\n          importLibraryFromJSON(library)\n            .then(() => {\n              // Close and then open to get the libraries updated\n              setAppState({ isLibraryOpen: false });\n              setAppState({ isLibraryOpen: true });\n            })\n            .catch(muteFSAbortError)\n            .catch((error) => {\n              setAppState({ errorMessage: error.message });\n            });\n        }}\n      />\n      {!!libraryItems.length && (\n        <>\n          <ToolButton\n            key=\"export\"\n            type=\"button\"\n            title={t(\"buttons.export\")}\n            aria-label={t(\"buttons.export\")}\n            icon={exportFile}\n            onClick={() => {\n              saveLibraryAsJSON(library)\n                .catch(muteFSAbortError)\n                .catch((error) => {\n                  setAppState({ errorMessage: error.message });\n                });\n            }}\n          />\n          <ToolButton\n            key=\"reset\"\n            type=\"button\"\n            title={t(\"buttons.resetLibrary\")}\n            aria-label={t(\"buttons.resetLibrary\")}\n            icon={trash}\n            onClick={() => {\n              if (window.confirm(t(\"alerts.resetLibrary\"))) {\n                library.resetLibrary();\n                setLibraryItems([]);\n                focusContainer();\n              }\n            }}\n          />\n        </>\n      )}\n      <a\n        href={`https://libraries.excalidraw.com?target=${\n          window.name || \"_blank\"\n        }&referrer=${referrer}&useHash=true&token=${id}&theme=${theme}`}\n        target=\"_excalidraw_libraries\"\n      >\n        {t(\"labels.libraries\")}\n      </a>\n    </div>,\n  );\n\n  for (let row = 0; row < numRows; row++) {\n    const y = CELLS_PER_ROW * row;\n    const children = [];\n    for (let x = 0; x < CELLS_PER_ROW; x++) {\n      const shouldAddPendingElements: boolean =\n        pendingElements.length > 0 &&\n        !addedPendingElements &&\n        y + x >= libraryItems.length;\n      addedPendingElements = addedPendingElements || shouldAddPendingElements;\n\n      children.push(\n        <Stack.Col key={x}>\n          <LibraryUnit\n            elements={libraryItems[y + x]}\n            pendingElements={\n              shouldAddPendingElements ? pendingElements : undefined\n            }\n            onRemoveFromLibrary={onRemoveFromLibrary.bind(null, y + x)}\n            onClick={\n              shouldAddPendingElements\n                ? onAddToLibrary.bind(null, pendingElements)\n                : onInsertShape.bind(null, libraryItems[y + x])\n            }\n          />\n        </Stack.Col>,\n      );\n    }\n    rows.push(\n      <Stack.Row align=\"center\" gap={1} key={row}>\n        {children}\n      </Stack.Row>,\n    );\n  }\n\n  return (\n    <Stack.Col align=\"start\" gap={1} className=\"layer-ui__library-items\">\n      {rows}\n    </Stack.Col>\n  );\n};\n\nconst LibraryMenu = ({\n  onClickOutside,\n  onInsertShape,\n  pendingElements,\n  onAddToLibrary,\n  theme,\n  setAppState,\n  libraryReturnUrl,\n  focusContainer,\n  library,\n  id,\n}: {\n  pendingElements: LibraryItem;\n  onClickOutside: (event: MouseEvent) => void;\n  onInsertShape: (elements: LibraryItem) => void;\n  onAddToLibrary: () => void;\n  theme: AppState[\"theme\"];\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  libraryReturnUrl: ExcalidrawProps[\"libraryReturnUrl\"];\n  focusContainer: () => void;\n  library: Library;\n  id: string;\n}) => {\n  const ref = useRef<HTMLDivElement | null>(null);\n  useOnClickOutside(ref, (event) => {\n    // If click on the library icon, do nothing.\n    if ((event.target as Element).closest(\".ToolIcon_type_button__library\")) {\n      return;\n    }\n    onClickOutside(event);\n  });\n\n  const [libraryItems, setLibraryItems] = useState<LibraryItems>([]);\n\n  const [loadingState, setIsLoading] = useState<\n    \"preloading\" | \"loading\" | \"ready\"\n  >(\"preloading\");\n\n  const loadingTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    Promise.race([\n      new Promise((resolve) => {\n        loadingTimerRef.current = setTimeout(() => {\n          resolve(\"loading\");\n        }, 100);\n      }),\n      library.loadLibrary().then((items) => {\n        setLibraryItems(items);\n        setIsLoading(\"ready\");\n      }),\n    ]).then((data) => {\n      if (data === \"loading\") {\n        setIsLoading(\"loading\");\n      }\n    });\n    return () => {\n      clearTimeout(loadingTimerRef.current!);\n    };\n  }, [library]);\n\n  const removeFromLibrary = useCallback(\n    async (indexToRemove) => {\n      const items = await library.loadLibrary();\n      const nextItems = items.filter((_, index) => index !== indexToRemove);\n      library.saveLibrary(nextItems).catch((error) => {\n        setLibraryItems(items);\n        setAppState({ errorMessage: t(\"alerts.errorRemovingFromLibrary\") });\n      });\n      setLibraryItems(nextItems);\n    },\n    [library, setAppState],\n  );\n\n  const addToLibrary = useCallback(\n    async (elements: LibraryItem) => {\n      const items = await library.loadLibrary();\n      const nextItems = [...items, elements];\n      onAddToLibrary();\n      library.saveLibrary(nextItems).catch((error) => {\n        setLibraryItems(items);\n        setAppState({ errorMessage: t(\"alerts.errorAddingToLibrary\") });\n      });\n      setLibraryItems(nextItems);\n    },\n    [onAddToLibrary, library, setAppState],\n  );\n\n  return loadingState === \"preloading\" ? null : (\n    <Island padding={1} ref={ref} className=\"layer-ui__library\">\n      {loadingState === \"loading\" ? (\n        <div className=\"layer-ui__library-message\">\n          {t(\"labels.libraryLoadingMessage\")}\n        </div>\n      ) : (\n        <LibraryMenuItems\n          libraryItems={libraryItems}\n          onRemoveFromLibrary={removeFromLibrary}\n          onAddToLibrary={addToLibrary}\n          onInsertShape={onInsertShape}\n          pendingElements={pendingElements}\n          setAppState={setAppState}\n          setLibraryItems={setLibraryItems}\n          libraryReturnUrl={libraryReturnUrl}\n          focusContainer={focusContainer}\n          library={library}\n          theme={theme}\n          id={id}\n        />\n      )}\n    </Island>\n  );\n};\n\nconst LayerUI = ({\n  actionManager,\n  appState,\n  setAppState,\n  canvas,\n  elements,\n  onCollabButtonClick,\n  onLockToggle,\n  onInsertElements,\n  zenModeEnabled,\n  showExitZenModeBtn,\n  showThemeBtn,\n  toggleZenMode,\n  isCollaborating,\n  renderTopRightUI,\n  renderCustomFooter,\n  viewModeEnabled,\n  libraryReturnUrl,\n  UIOptions,\n  focusContainer,\n  library,\n  id,\n}: LayerUIProps) => {\n  const isMobile = useIsMobile();\n\n  const renderJSONExportDialog = () => {\n    if (!UIOptions.canvasActions.export) {\n      return null;\n    }\n\n    return (\n      <JSONExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        exportOpts={UIOptions.canvasActions.export}\n        canvas={canvas}\n      />\n    );\n  };\n\n  const renderImageExportDialog = () => {\n    if (!UIOptions.canvasActions.saveAsImage) {\n      return null;\n    }\n\n    const createExporter = (type: ExportType): ExportCB => async (\n      exportedElements,\n    ) => {\n      const fileHandle = await exportCanvas(type, exportedElements, appState, {\n        exportBackground: appState.exportBackground,\n        name: appState.name,\n        viewBackgroundColor: appState.viewBackgroundColor,\n      })\n        .catch(muteFSAbortError)\n        .catch((error) => {\n          console.error(error);\n          setAppState({ errorMessage: error.message });\n        });\n\n      if (\n        appState.exportEmbedScene &&\n        fileHandle &&\n        isImageFileHandle(fileHandle)\n      ) {\n        setAppState({ fileHandle });\n      }\n    };\n\n    return (\n      <ImageExportDialog\n        elements={elements}\n        appState={appState}\n        actionManager={actionManager}\n        onExportToPng={createExporter(\"png\")}\n        onExportToSvg={createExporter(\"svg\")}\n        onExportToClipboard={createExporter(\"clipboard\")}\n      />\n    );\n  };\n\n  const Separator = () => {\n    return <div style={{ width: \".625em\" }} />;\n  };\n\n  const renderViewModeCanvasActions = () => {\n    return (\n      <Section\n        heading=\"canvasActions\"\n        className={clsx(\"zen-mode-transition\", {\n          \"transition-left\": zenModeEnabled,\n        })}\n      >\n        {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n        <Island padding={2} style={{ zIndex: 1 }}>\n          <Stack.Col gap={4}>\n            <Stack.Row gap={1} justifyContent=\"space-between\">\n              {renderJSONExportDialog()}\n              {renderImageExportDialog()}\n            </Stack.Row>\n          </Stack.Col>\n        </Island>\n      </Section>\n    );\n  };\n  const renderCanvasActions = () => (\n    <Section\n      heading=\"canvasActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      {/* the zIndex ensures this menu has higher stacking order,\n         see https://github.com/excalidraw/excalidraw/pull/1445 */}\n      <Island padding={2} style={{ zIndex: 1 }}>\n        <Stack.Col gap={4}>\n          <Stack.Row gap={1} justifyContent=\"space-between\">\n            {actionManager.renderAction(\"clearCanvas\")}\n            <Separator />\n            {actionManager.renderAction(\"loadScene\")}\n            {renderJSONExportDialog()}\n            {renderImageExportDialog()}\n            <Separator />\n            {onCollabButtonClick && (\n              <CollabButton\n                isCollaborating={isCollaborating}\n                collaboratorCount={appState.collaborators.size}\n                onClick={onCollabButtonClick}\n              />\n            )}\n          </Stack.Row>\n          <BackgroundPickerAndDarkModeToggle\n            actionManager={actionManager}\n            appState={appState}\n            setAppState={setAppState}\n            showThemeBtn={showThemeBtn}\n          />\n          {appState.fileHandle && (\n            <>{actionManager.renderAction(\"saveToActiveFile\")}</>\n          )}\n        </Stack.Col>\n      </Island>\n    </Section>\n  );\n\n  const renderSelectedShapeActions = () => (\n    <Section\n      heading=\"selectedShapeActions\"\n      className={clsx(\"zen-mode-transition\", {\n        \"transition-left\": zenModeEnabled,\n      })}\n    >\n      <Island\n        className={CLASSES.SHAPE_ACTIONS_MENU}\n        padding={2}\n        style={{\n          // we want to make sure this doesn't overflow so substracting 200\n          // which is approximately height of zoom footer and top left menu items with some buffer\n          // if active file name is displayed, subtracting 248 to account for its height\n          maxHeight: `${appState.height - (appState.fileHandle ? 248 : 200)}px`,\n        }}\n      >\n        <SelectedShapeActions\n          appState={appState}\n          elements={elements}\n          renderAction={actionManager.renderAction}\n          elementType={appState.elementType}\n        />\n      </Island>\n    </Section>\n  );\n\n  const closeLibrary = useCallback(\n    (event) => {\n      setAppState({ isLibraryOpen: false });\n    },\n    [setAppState],\n  );\n\n  const deselectItems = useCallback(() => {\n    setAppState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n    });\n  }, [setAppState]);\n\n  const libraryMenu = appState.isLibraryOpen ? (\n    <LibraryMenu\n      pendingElements={getSelectedElements(elements, appState)}\n      onClickOutside={closeLibrary}\n      onInsertShape={onInsertElements}\n      onAddToLibrary={deselectItems}\n      setAppState={setAppState}\n      libraryReturnUrl={libraryReturnUrl}\n      focusContainer={focusContainer}\n      library={library}\n      theme={appState.theme}\n      id={id}\n    />\n  ) : null;\n\n  const renderFixedSideContainer = () => {\n    const shouldRenderSelectedShapeActions = showSelectedShapeActions(\n      appState,\n      elements,\n    );\n\n    return (\n      <FixedSideContainer side=\"top\">\n        <div className=\"App-menu App-menu_top\">\n          <Stack.Col\n            gap={4}\n            className={clsx({ \"disable-pointerEvents\": zenModeEnabled })}\n          >\n            {viewModeEnabled\n              ? renderViewModeCanvasActions()\n              : renderCanvasActions()}\n            {shouldRenderSelectedShapeActions && renderSelectedShapeActions()}\n          </Stack.Col>\n          {!viewModeEnabled && (\n            <Section heading=\"shapes\">\n              {(heading) => (\n                <Stack.Col gap={4} align=\"start\">\n                  <Stack.Row gap={1}>\n                    <LockButton\n                      zenModeEnabled={zenModeEnabled}\n                      checked={appState.elementLocked}\n                      onChange={onLockToggle}\n                      title={t(\"toolBar.lock\")}\n                    />\n                    <Island\n                      padding={1}\n                      className={clsx({ \"zen-mode\": zenModeEnabled })}\n                    >\n                      <HintViewer appState={appState} elements={elements} />\n                      {heading}\n                      <Stack.Row gap={1}>\n                        <ShapesSwitcher\n                          canvas={canvas}\n                          elementType={appState.elementType}\n                          setAppState={setAppState}\n                        />\n                      </Stack.Row>\n                    </Island>\n                    <LibraryButton\n                      appState={appState}\n                      setAppState={setAppState}\n                    />\n                  </Stack.Row>\n                  {libraryMenu}\n                </Stack.Col>\n              )}\n            </Section>\n          )}\n          <div\n            className={clsx(\n              \"layer-ui__wrapper__top-right zen-mode-transition\",\n              {\n                \"transition-right\": zenModeEnabled,\n              },\n            )}\n          >\n            <UserList>\n              {appState.collaborators.size > 0 &&\n                Array.from(appState.collaborators)\n                  // Collaborator is either not initialized or is actually the current user.\n                  .filter(([_, client]) => Object.keys(client).length !== 0)\n                  .map(([clientId, client]) => (\n                    <Tooltip\n                      label={client.username || \"Unknown user\"}\n                      key={clientId}\n                    >\n                      {actionManager.renderAction(\"goToCollaborator\", {\n                        id: clientId,\n                      })}\n                    </Tooltip>\n                  ))}\n            </UserList>\n            {renderTopRightUI?.(isMobile, appState)}\n          </div>\n        </div>\n      </FixedSideContainer>\n    );\n  };\n\n  const renderBottomAppMenu = () => {\n    return (\n      <footer\n        role=\"contentinfo\"\n        className=\"layer-ui__wrapper__footer App-menu App-menu_bottom\"\n      >\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-left zen-mode-transition\",\n            {\n              \"layer-ui__wrapper__footer-left--transition-left\": zenModeEnabled,\n            },\n          )}\n        >\n          <Stack.Col gap={2}>\n            <Section heading=\"canvasActions\">\n              <Island padding={1}>\n                <ZoomActions\n                  renderAction={actionManager.renderAction}\n                  zoom={appState.zoom}\n                />\n              </Island>\n              {!viewModeEnabled && (\n                <div\n                  className={clsx(\"undo-redo-buttons zen-mode-transition\", {\n                    \"layer-ui__wrapper__footer-left--transition-bottom\": zenModeEnabled,\n                  })}\n                >\n                  {actionManager.renderAction(\"undo\", { size: \"small\" })}\n                  {actionManager.renderAction(\"redo\", { size: \"small\" })}\n                </div>\n              )}\n            </Section>\n          </Stack.Col>\n        </div>\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-center zen-mode-transition\",\n            {\n              \"layer-ui__wrapper__footer-left--transition-bottom\": zenModeEnabled,\n            },\n          )}\n        >\n          {renderCustomFooter?.(false, appState)}\n        </div>\n        <div\n          className={clsx(\n            \"layer-ui__wrapper__footer-right zen-mode-transition\",\n            {\n              \"transition-right disable-pointerEvents\": zenModeEnabled,\n            },\n          )}\n        >\n          {actionManager.renderAction(\"toggleShortcuts\")}\n        </div>\n        <button\n          className={clsx(\"disable-zen-mode\", {\n            \"disable-zen-mode--visible\": showExitZenModeBtn,\n          })}\n          onClick={toggleZenMode}\n        >\n          {t(\"buttons.exitZenMode\")}\n        </button>\n      </footer>\n    );\n  };\n\n  const dialogs = (\n    <>\n      {appState.isLoading && <LoadingMessage />}\n      {appState.errorMessage && (\n        <ErrorDialog\n          message={appState.errorMessage}\n          onClose={() => setAppState({ errorMessage: null })}\n        />\n      )}\n      {appState.showHelpDialog && (\n        <HelpDialog\n          onClose={() => {\n            setAppState({ showHelpDialog: false });\n          }}\n        />\n      )}\n      {appState.pasteDialog.shown && (\n        <PasteChartDialog\n          setAppState={setAppState}\n          appState={appState}\n          onInsertChart={onInsertElements}\n          onClose={() =>\n            setAppState({\n              pasteDialog: { shown: false, data: null },\n            })\n          }\n        />\n      )}\n    </>\n  );\n\n  return isMobile ? (\n    <>\n      {dialogs}\n      <MobileMenu\n        appState={appState}\n        elements={elements}\n        actionManager={actionManager}\n        libraryMenu={libraryMenu}\n        renderJSONExportDialog={renderJSONExportDialog}\n        renderImageExportDialog={renderImageExportDialog}\n        setAppState={setAppState}\n        onCollabButtonClick={onCollabButtonClick}\n        onLockToggle={onLockToggle}\n        canvas={canvas}\n        isCollaborating={isCollaborating}\n        renderCustomFooter={renderCustomFooter}\n        viewModeEnabled={viewModeEnabled}\n        showThemeBtn={showThemeBtn}\n      />\n    </>\n  ) : (\n    <div\n      className={clsx(\"layer-ui__wrapper\", {\n        \"disable-pointerEvents\":\n          appState.draggingElement ||\n          appState.resizingElement ||\n          (appState.editingElement && !isTextElement(appState.editingElement)),\n      })}\n    >\n      {dialogs}\n      {renderFixedSideContainer()}\n      {renderBottomAppMenu()}\n      {appState.scrolledOutside && (\n        <button\n          className=\"scroll-back-to-content\"\n          onClick={() => {\n            setAppState({\n              ...calculateScrollCenter(elements, appState, canvas),\n            });\n          }}\n        >\n          {t(\"buttons.scrollBackToContent\")}\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst areEqual = (prev: LayerUIProps, next: LayerUIProps) => {\n  const getNecessaryObj = (appState: AppState): Partial<AppState> => {\n    const {\n      suggestedBindings,\n      startBoundElement: boundElement,\n      ...ret\n    } = appState;\n    return ret;\n  };\n  const prevAppState = getNecessaryObj(prev.appState);\n  const nextAppState = getNecessaryObj(next.appState);\n\n  const keys = Object.keys(prevAppState) as (keyof Partial<AppState>)[];\n  return (\n    prev.renderCustomFooter === next.renderCustomFooter &&\n    prev.langCode === next.langCode &&\n    prev.elements === next.elements &&\n    keys.every((key) => prevAppState[key] === nextAppState[key])\n  );\n};\n\nexport default React.memo(LayerUI, areEqual);\n","import React from \"react\";\nimport { getCommonBounds } from \"../element/bounds\";\nimport { NonDeletedExcalidrawElement } from \"../element/types\";\nimport { t } from \"../i18n\";\nimport { useIsMobile } from \"../components/App\";\nimport { getTargetElements } from \"../scene\";\nimport { AppState, ExcalidrawProps } from \"../types\";\nimport { close } from \"./icons\";\nimport { Island } from \"./Island\";\nimport \"./Stats.scss\";\n\nexport const Stats = (props: {\n  appState: AppState;\n  setAppState: React.Component<any, AppState>[\"setState\"];\n  elements: readonly NonDeletedExcalidrawElement[];\n  onClose: () => void;\n  renderCustomStats: ExcalidrawProps[\"renderCustomStats\"];\n}) => {\n  const isMobile = useIsMobile();\n\n  const boundingBox = getCommonBounds(props.elements);\n  const selectedElements = getTargetElements(props.elements, props.appState);\n  const selectedBoundingBox = getCommonBounds(selectedElements);\n\n  if (isMobile && props.appState.openMenu) {\n    return null;\n  }\n\n  return (\n    <div className=\"Stats\">\n      <Island padding={2}>\n        <div className=\"close\" onClick={props.onClose}>\n          {close}\n        </div>\n        <h3>{t(\"stats.title\")}</h3>\n        <table>\n          <tbody>\n            <tr>\n              <th colSpan={2}>{t(\"stats.scene\")}</th>\n            </tr>\n            <tr>\n              <td>{t(\"stats.elements\")}</td>\n              <td>{props.elements.length}</td>\n            </tr>\n            <tr>\n              <td>{t(\"stats.width\")}</td>\n              <td>{Math.round(boundingBox[2]) - Math.round(boundingBox[0])}</td>\n            </tr>\n            <tr>\n              <td>{t(\"stats.height\")}</td>\n              <td>{Math.round(boundingBox[3]) - Math.round(boundingBox[1])}</td>\n            </tr>\n\n            {selectedElements.length === 1 && (\n              <tr>\n                <th colSpan={2}>{t(\"stats.element\")}</th>\n              </tr>\n            )}\n\n            {selectedElements.length > 1 && (\n              <>\n                <tr>\n                  <th colSpan={2}>{t(\"stats.selected\")}</th>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.elements\")}</td>\n                  <td>{selectedElements.length}</td>\n                </tr>\n              </>\n            )}\n            {selectedElements.length > 0 && (\n              <>\n                <tr>\n                  <td>{\"x\"}</td>\n                  <td>{Math.round(selectedBoundingBox[0])}</td>\n                </tr>\n                <tr>\n                  <td>{\"y\"}</td>\n                  <td>{Math.round(selectedBoundingBox[1])}</td>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.width\")}</td>\n                  <td>\n                    {Math.round(\n                      selectedBoundingBox[2] - selectedBoundingBox[0],\n                    )}\n                  </td>\n                </tr>\n                <tr>\n                  <td>{t(\"stats.height\")}</td>\n                  <td>\n                    {Math.round(\n                      selectedBoundingBox[3] - selectedBoundingBox[1],\n                    )}\n                  </td>\n                </tr>\n              </>\n            )}\n            {selectedElements.length === 1 && (\n              <tr>\n                <td>{t(\"stats.angle\")}</td>\n                <td>\n                  {`${Math.round(\n                    (selectedElements[0].angle * 180) / Math.PI,\n                  )}°`}\n                </td>\n              </tr>\n            )}\n            {props.renderCustomStats?.(props.elements, props.appState)}\n          </tbody>\n        </table>\n      </Island>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { TOAST_TIMEOUT } from \"../constants\";\nimport \"./Toast.scss\";\n\nexport const Toast = ({\n  message,\n  clearToast,\n}: {\n  message: string;\n  clearToast: () => void;\n}) => {\n  const timerRef = useRef<number>(0);\n\n  const scheduleTimeout = useCallback(\n    () =>\n      (timerRef.current = window.setTimeout(() => clearToast(), TOAST_TIMEOUT)),\n    [clearToast],\n  );\n\n  useEffect(() => {\n    scheduleTimeout();\n    return () => clearTimeout(timerRef.current);\n  }, [scheduleTimeout, message]);\n\n  return (\n    <div\n      className=\"Toast\"\n      onMouseEnter={() => clearTimeout(timerRef?.current)}\n      onMouseLeave={scheduleTimeout}\n    >\n      <p className=\"Toast__message\">{message}</p>\n    </div>\n  );\n};\n","import { CODES, KEYS } from \"../keys\";\nimport { register } from \"./register\";\nimport { trackEvent } from \"../analytics\";\n\nexport const actionToggleViewMode = register({\n  name: \"viewMode\",\n  perform(elements, appState) {\n    trackEvent(\"view\", \"mode\", \"view\");\n    return {\n      appState: {\n        ...appState,\n        viewModeEnabled: !this.checked!(appState),\n      },\n      commitToHistory: false,\n    };\n  },\n  checked: (appState) => appState.viewModeEnabled,\n  contextItemLabel: \"labels.viewMode\",\n  keyTest: (event) =>\n    !event[KEYS.CTRL_OR_CMD] && event.altKey && event.code === CODES.R,\n});\n","import React, { useContext } from \"react\";\nimport { RoughCanvas } from \"roughjs/bin/canvas\";\nimport rough from \"roughjs/bin/rough\";\nimport clsx from \"clsx\";\nimport { supported as fsSupported } from \"browser-fs-access\";\nimport { nanoid } from \"nanoid\";\n\nimport {\n  actionAddToLibrary,\n  actionBringForward,\n  actionBringToFront,\n  actionCopy,\n  actionCopyAsPng,\n  actionCopyAsSvg,\n  actionCopyStyles,\n  actionCut,\n  actionDeleteSelected,\n  actionDuplicateSelection,\n  actionFinalize,\n  actionFlipHorizontal,\n  actionFlipVertical,\n  actionGroup,\n  actionPasteStyles,\n  actionSelectAll,\n  actionSendBackward,\n  actionSendToBack,\n  actionToggleGridMode,\n  actionToggleStats,\n  actionToggleZenMode,\n  actionUngroup,\n} from \"../actions\";\nimport { createRedoAction, createUndoAction } from \"../actions/actionHistory\";\nimport { ActionManager } from \"../actions/manager\";\nimport { actions } from \"../actions/register\";\nimport { ActionResult } from \"../actions/types\";\nimport { trackEvent } from \"../analytics\";\nimport { getDefaultAppState } from \"../appState\";\nimport {\n  copyToClipboard,\n  parseClipboard,\n  probablySupportsClipboardBlob,\n  probablySupportsClipboardWriteText,\n} from \"../clipboard\";\nimport {\n  APP_NAME,\n  CURSOR_TYPE,\n  DEFAULT_UI_OPTIONS,\n  DEFAULT_VERTICAL_ALIGN,\n  DRAGGING_THRESHOLD,\n  ELEMENT_SHIFT_TRANSLATE_AMOUNT,\n  ELEMENT_TRANSLATE_AMOUNT,\n  ENV,\n  EVENT,\n  GRID_SIZE,\n  LINE_CONFIRM_THRESHOLD,\n  MIME_TYPES,\n  MQ_MAX_HEIGHT_LANDSCAPE,\n  MQ_MAX_WIDTH_LANDSCAPE,\n  MQ_MAX_WIDTH_PORTRAIT,\n  POINTER_BUTTON,\n  SCROLL_TIMEOUT,\n  TAP_TWICE_TIMEOUT,\n  TEXT_TO_CENTER_SNAP_THRESHOLD,\n  TOUCH_CTX_MENU_TIMEOUT,\n  URL_HASH_KEYS,\n  URL_QUERY_KEYS,\n  ZOOM_STEP,\n} from \"../constants\";\nimport { loadFromBlob } from \"../data\";\nimport { isValidLibrary } from \"../data/json\";\nimport Library from \"../data/library\";\nimport { restore, restoreElements } from \"../data/restore\";\nimport {\n  dragNewElement,\n  dragSelectedElements,\n  duplicateElement,\n  getCommonBounds,\n  getCursorForResizingElement,\n  getDragOffsetXY,\n  getElementWithTransformHandleType,\n  getNormalizedDimensions,\n  getPerfectElementSize,\n  getResizeArrowDirection,\n  getResizeOffsetXY,\n  getTransformHandleTypeFromCoords,\n  hitTest,\n  isHittingElementBoundingBoxWithoutHittingElement,\n  isInvisiblySmallElement,\n  isNonDeletedElement,\n  isTextElement,\n  newElement,\n  newLinearElement,\n  newTextElement,\n  textWysiwyg,\n  transformElements,\n  updateTextElement,\n} from \"../element\";\nimport {\n  bindOrUnbindSelectedElements,\n  fixBindingsAfterDeletion,\n  fixBindingsAfterDuplication,\n  getEligibleElementsForBinding,\n  getHoveredElementForBinding,\n  isBindingEnabled,\n  isLinearElementSimpleAndAlreadyBound,\n  maybeBindLinearElement,\n  shouldEnableBindingForPointerEvent,\n  unbindLinearElements,\n  updateBoundElements,\n} from \"../element/binding\";\nimport { LinearElementEditor } from \"../element/linearElementEditor\";\nimport { mutateElement } from \"../element/mutateElement\";\nimport { deepCopyElement, newFreeDrawElement } from \"../element/newElement\";\nimport {\n  isBindingElement,\n  isBindingElementType,\n  isLinearElement,\n  isLinearElementType,\n} from \"../element/typeChecks\";\nimport {\n  ExcalidrawBindableElement,\n  ExcalidrawElement,\n  ExcalidrawFreeDrawElement,\n  ExcalidrawGenericElement,\n  ExcalidrawLinearElement,\n  ExcalidrawTextElement,\n  NonDeleted,\n} from \"../element/types\";\nimport { getCenter, getDistance } from \"../gesture\";\nimport {\n  editGroupForSelectedElement,\n  getElementsInGroup,\n  getSelectedGroupIdForElement,\n  getSelectedGroupIds,\n  isElementInGroup,\n  isSelectedViaGroup,\n  selectGroupsForSelectedElements,\n} from \"../groups\";\nimport History from \"../history\";\nimport { defaultLang, getLanguage, languages, setLanguage, t } from \"../i18n\";\nimport {\n  CODES,\n  getResizeCenterPointKey,\n  getResizeWithSidesSameLengthKey,\n  getRotateWithDiscreteAngleKey,\n  isArrowKey,\n  KEYS,\n} from \"../keys\";\nimport { distance2d, getGridPoint, isPathALoop } from \"../math\";\nimport { renderScene } from \"../renderer\";\nimport { invalidateShapeForElement } from \"../renderer/renderElement\";\nimport {\n  calculateScrollCenter,\n  getElementContainingPosition,\n  getElementsAtPosition,\n  getElementsWithinSelection,\n  getNormalizedZoom,\n  getSelectedElements,\n  hasBackground,\n  isOverScrollBars,\n  isSomeElementSelected,\n} from \"../scene\";\nimport Scene from \"../scene/Scene\";\nimport { SceneState, ScrollBars } from \"../scene/types\";\nimport { getNewZoom } from \"../scene/zoom\";\nimport { findShapeByKey } from \"../shapes\";\nimport {\n  AppProps,\n  AppState,\n  ExcalidrawImperativeAPI,\n  Gesture,\n  GestureEvent,\n  LibraryItems,\n  PointerDownState,\n  SceneData,\n} from \"../types\";\nimport {\n  debounce,\n  distance,\n  getNearestScrollableContainer,\n  isInputLike,\n  isToolIcon,\n  isWritableElement,\n  resetCursor,\n  resolvablePromise,\n  sceneCoordsToViewportCoords,\n  setCursor,\n  setCursorForShape,\n  tupleToCoors,\n  viewportCoordsToSceneCoords,\n  withBatchedUpdates,\n} from \"../utils\";\nimport ContextMenu, { ContextMenuOption } from \"./ContextMenu\";\nimport LayerUI from \"./LayerUI\";\nimport { Stats } from \"./Stats\";\nimport { Toast } from \"./Toast\";\nimport { actionToggleViewMode } from \"../actions/actionToggleViewMode\";\n\nconst IsMobileContext = React.createContext(false);\nexport const useIsMobile = () => useContext(IsMobileContext);\nconst ExcalidrawContainerContext = React.createContext<{\n  container: HTMLDivElement | null;\n  id: string | null;\n}>({ container: null, id: null });\nexport const useExcalidrawContainer = () =>\n  useContext(ExcalidrawContainerContext);\n\nlet didTapTwice: boolean = false;\nlet tappedTwiceTimer = 0;\nlet cursorX = 0;\nlet cursorY = 0;\nlet isHoldingSpace: boolean = false;\nlet isPanning: boolean = false;\nlet isDraggingScrollBar: boolean = false;\nlet currentScrollBars: ScrollBars = { horizontal: null, vertical: null };\nlet touchTimeout = 0;\nlet invalidateContextMenu = false;\n\nlet lastPointerUp: ((event: any) => void) | null = null;\nconst gesture: Gesture = {\n  pointers: new Map(),\n  lastCenter: null,\n  initialDistance: null,\n  initialScale: null,\n};\n\nclass App extends React.Component<AppProps, AppState> {\n  canvas: HTMLCanvasElement | null = null;\n  rc: RoughCanvas | null = null;\n  unmounted: boolean = false;\n  actionManager: ActionManager;\n  isMobile = false;\n  detachIsMobileMqHandler?: () => void;\n\n  private excalidrawContainerRef = React.createRef<HTMLDivElement>();\n\n  public static defaultProps: Partial<AppProps> = {\n    // needed for tests to pass since we directly render App in many tests\n    UIOptions: DEFAULT_UI_OPTIONS,\n  };\n\n  private scene: Scene;\n  private resizeObserver: ResizeObserver | undefined;\n  private nearestScrollableContainer: HTMLElement | Document | undefined;\n  public library: Library;\n  public libraryItemsFromStorage: LibraryItems | undefined;\n  private id: string;\n  private history: History;\n  private excalidrawContainerValue: {\n    container: HTMLDivElement | null;\n    id: string;\n  };\n\n  constructor(props: AppProps) {\n    super(props);\n    const defaultAppState = getDefaultAppState();\n    const {\n      excalidrawRef,\n      viewModeEnabled = false,\n      zenModeEnabled = false,\n      gridModeEnabled = false,\n      theme = defaultAppState.theme,\n      name = defaultAppState.name,\n    } = props;\n    this.state = {\n      ...defaultAppState,\n      theme,\n      isLoading: true,\n      ...this.getCanvasOffsets(),\n      viewModeEnabled,\n      zenModeEnabled,\n      gridSize: gridModeEnabled ? GRID_SIZE : null,\n      name,\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n\n    this.id = nanoid();\n\n    if (excalidrawRef) {\n      const readyPromise =\n        (\"current\" in excalidrawRef && excalidrawRef.current?.readyPromise) ||\n        resolvablePromise<ExcalidrawImperativeAPI>();\n\n      const api: ExcalidrawImperativeAPI = {\n        ready: true,\n        readyPromise,\n        updateScene: this.updateScene,\n        resetScene: this.resetScene,\n        getSceneElementsIncludingDeleted: this.getSceneElementsIncludingDeleted,\n        history: {\n          clear: this.resetHistory,\n        },\n        scrollToContent: this.scrollToContent,\n        getSceneElements: this.getSceneElements,\n        getAppState: () => this.state,\n        refresh: this.refresh,\n        importLibrary: this.importLibraryFromUrl,\n        setToastMessage: this.setToastMessage,\n        id: this.id,\n      } as const;\n      if (typeof excalidrawRef === \"function\") {\n        excalidrawRef(api);\n      } else {\n        excalidrawRef.current = api;\n      }\n      readyPromise.resolve(api);\n    }\n\n    this.excalidrawContainerValue = {\n      container: this.excalidrawContainerRef.current,\n      id: this.id,\n    };\n\n    this.scene = new Scene();\n    this.library = new Library(this);\n    this.history = new History();\n    this.actionManager = new ActionManager(\n      this.syncActionResult,\n      () => this.state,\n      () => this.scene.getElementsIncludingDeleted(),\n      this,\n    );\n    this.actionManager.registerAll(actions);\n\n    this.actionManager.registerAction(createUndoAction(this.history));\n    this.actionManager.registerAction(createRedoAction(this.history));\n  }\n\n  private renderCanvas() {\n    const canvasScale = window.devicePixelRatio;\n    const {\n      width: canvasDOMWidth,\n      height: canvasDOMHeight,\n      viewModeEnabled,\n    } = this.state;\n    const canvasWidth = canvasDOMWidth * canvasScale;\n    const canvasHeight = canvasDOMHeight * canvasScale;\n    if (viewModeEnabled) {\n      return (\n        <canvas\n          className=\"excalidraw__canvas\"\n          style={{\n            width: canvasDOMWidth,\n            height: canvasDOMHeight,\n            cursor: CURSOR_TYPE.GRAB,\n          }}\n          width={canvasWidth}\n          height={canvasHeight}\n          ref={this.handleCanvasRef}\n          onContextMenu={this.handleCanvasContextMenu}\n          onPointerMove={this.handleCanvasPointerMove}\n          onPointerUp={this.removePointer}\n          onPointerCancel={this.removePointer}\n          onTouchMove={this.handleTouchMove}\n          onPointerDown={this.handleCanvasPointerDown}\n        >\n          {t(\"labels.drawingCanvas\")}\n        </canvas>\n      );\n    }\n    return (\n      <canvas\n        className=\"excalidraw__canvas\"\n        style={{\n          width: canvasDOMWidth,\n          height: canvasDOMHeight,\n        }}\n        width={canvasWidth}\n        height={canvasHeight}\n        ref={this.handleCanvasRef}\n        onContextMenu={this.handleCanvasContextMenu}\n        onPointerDown={this.handleCanvasPointerDown}\n        onDoubleClick={this.handleCanvasDoubleClick}\n        onPointerMove={this.handleCanvasPointerMove}\n        onPointerUp={this.removePointer}\n        onPointerCancel={this.removePointer}\n        onTouchMove={this.handleTouchMove}\n      >\n        {t(\"labels.drawingCanvas\")}\n      </canvas>\n    );\n  }\n\n  public render() {\n    const { zenModeEnabled, viewModeEnabled } = this.state;\n\n    const {\n      onCollabButtonClick,\n      renderTopRightUI,\n      renderFooter,\n      renderCustomStats,\n    } = this.props;\n\n    return (\n      <div\n        className={clsx(\"excalidraw excalidraw-container\", {\n          \"excalidraw--view-mode\": viewModeEnabled,\n          \"excalidraw--mobile\": this.isMobile,\n        })}\n        ref={this.excalidrawContainerRef}\n        onDrop={this.handleAppOnDrop}\n        tabIndex={0}\n        onKeyDown={\n          this.props.handleKeyboardGlobally ? undefined : this.onKeyDown\n        }\n      >\n        <ExcalidrawContainerContext.Provider\n          value={this.excalidrawContainerValue}\n        >\n          <IsMobileContext.Provider value={this.isMobile}>\n            <LayerUI\n              canvas={this.canvas}\n              appState={this.state}\n              setAppState={this.setAppState}\n              actionManager={this.actionManager}\n              elements={this.scene.getElements()}\n              onCollabButtonClick={onCollabButtonClick}\n              onLockToggle={this.toggleLock}\n              onInsertElements={(elements) =>\n                this.addElementsFromPasteOrLibrary({\n                  elements,\n                  position: \"center\",\n                })\n              }\n              zenModeEnabled={zenModeEnabled}\n              toggleZenMode={this.toggleZenMode}\n              langCode={getLanguage().code}\n              isCollaborating={this.props.isCollaborating || false}\n              renderTopRightUI={renderTopRightUI}\n              renderCustomFooter={renderFooter}\n              viewModeEnabled={viewModeEnabled}\n              showExitZenModeBtn={\n                typeof this.props?.zenModeEnabled === \"undefined\" &&\n                zenModeEnabled\n              }\n              showThemeBtn={\n                typeof this.props?.theme === \"undefined\" &&\n                this.props.UIOptions.canvasActions.theme\n              }\n              libraryReturnUrl={this.props.libraryReturnUrl}\n              UIOptions={this.props.UIOptions}\n              focusContainer={this.focusContainer}\n              library={this.library}\n              id={this.id}\n            />\n            <div className=\"excalidraw-textEditorContainer\" />\n            <div className=\"excalidraw-contextMenuContainer\" />\n            {this.state.showStats && (\n              <Stats\n                appState={this.state}\n                setAppState={this.setAppState}\n                elements={this.scene.getElements()}\n                onClose={this.toggleStats}\n                renderCustomStats={renderCustomStats}\n              />\n            )}\n            {this.state.toastMessage !== null && (\n              <Toast\n                message={this.state.toastMessage}\n                clearToast={this.clearToast}\n              />\n            )}\n            <main>{this.renderCanvas()}</main>\n          </IsMobileContext.Provider>\n        </ExcalidrawContainerContext.Provider>\n      </div>\n    );\n  }\n\n  public focusContainer = () => {\n    if (this.props.autoFocus) {\n      this.excalidrawContainerRef.current?.focus();\n    }\n  };\n\n  public getSceneElementsIncludingDeleted = () => {\n    return this.scene.getElementsIncludingDeleted();\n  };\n\n  public getSceneElements = () => {\n    return this.scene.getElements();\n  };\n\n  private syncActionResult = withBatchedUpdates(\n    (actionResult: ActionResult) => {\n      if (this.unmounted || actionResult === false) {\n        return;\n      }\n\n      let editingElement: AppState[\"editingElement\"] | null = null;\n      if (actionResult.elements) {\n        actionResult.elements.forEach((element) => {\n          if (\n            this.state.editingElement?.id === element.id &&\n            this.state.editingElement !== element &&\n            isNonDeletedElement(element)\n          ) {\n            editingElement = element;\n          }\n        });\n        this.scene.replaceAllElements(actionResult.elements);\n        if (actionResult.commitToHistory) {\n          this.history.resumeRecording();\n        }\n      }\n\n      if (actionResult.appState || editingElement) {\n        if (actionResult.commitToHistory) {\n          this.history.resumeRecording();\n        }\n\n        let viewModeEnabled = actionResult?.appState?.viewModeEnabled || false;\n        let zenModeEnabled = actionResult?.appState?.zenModeEnabled || false;\n        let gridSize = actionResult?.appState?.gridSize || null;\n        let theme = actionResult?.appState?.theme || \"light\";\n        let name = actionResult?.appState?.name ?? this.state.name;\n        if (typeof this.props.viewModeEnabled !== \"undefined\") {\n          viewModeEnabled = this.props.viewModeEnabled;\n        }\n\n        if (typeof this.props.zenModeEnabled !== \"undefined\") {\n          zenModeEnabled = this.props.zenModeEnabled;\n        }\n\n        if (typeof this.props.gridModeEnabled !== \"undefined\") {\n          gridSize = this.props.gridModeEnabled ? GRID_SIZE : null;\n        }\n\n        if (typeof this.props.theme !== \"undefined\") {\n          theme = this.props.theme;\n        }\n\n        if (typeof this.props.name !== \"undefined\") {\n          name = this.props.name;\n        }\n        this.setState(\n          (state) => {\n            // using Object.assign instead of spread to fool TS 4.2.2+ into\n            // regarding the resulting type as not containing undefined\n            // (which the following expression will never contain)\n            return Object.assign(actionResult.appState || {}, {\n              editingElement:\n                editingElement || actionResult.appState?.editingElement || null,\n              viewModeEnabled,\n              zenModeEnabled,\n              gridSize,\n              theme,\n              name,\n            });\n          },\n          () => {\n            if (actionResult.syncHistory) {\n              this.history.setCurrentState(\n                this.state,\n                this.scene.getElementsIncludingDeleted(),\n              );\n            }\n          },\n        );\n      }\n    },\n  );\n\n  // Lifecycle\n\n  private onBlur = withBatchedUpdates(() => {\n    isHoldingSpace = false;\n    this.setState({ isBindingEnabled: true });\n  });\n\n  private onUnload = () => {\n    this.onBlur();\n  };\n\n  private disableEvent: EventHandlerNonNull = (event) => {\n    event.preventDefault();\n  };\n\n  private onFontLoaded = () => {\n    this.scene.getElementsIncludingDeleted().forEach((element) => {\n      if (isTextElement(element)) {\n        invalidateShapeForElement(element);\n      }\n    });\n    this.onSceneUpdated();\n  };\n\n  private importLibraryFromUrl = async (url: string, token?: string | null) => {\n    if (window.location.hash.includes(URL_HASH_KEYS.addLibrary)) {\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      hash.delete(URL_HASH_KEYS.addLibrary);\n      window.history.replaceState({}, APP_NAME, `#${hash.toString()}`);\n    } else if (window.location.search.includes(URL_QUERY_KEYS.addLibrary)) {\n      const query = new URLSearchParams(window.location.search);\n      query.delete(URL_QUERY_KEYS.addLibrary);\n      window.history.replaceState({}, APP_NAME, `?${query.toString()}`);\n    }\n\n    try {\n      const request = await fetch(decodeURIComponent(url));\n      const blob = await request.blob();\n      const json = JSON.parse(await blob.text());\n      if (!isValidLibrary(json)) {\n        throw new Error();\n      }\n      if (\n        token === this.id ||\n        window.confirm(\n          t(\"alerts.confirmAddLibrary\", { numShapes: json.library.length }),\n        )\n      ) {\n        await this.library.importLibrary(blob);\n        // hack to rerender the library items after import\n        if (this.state.isLibraryOpen) {\n          this.setState({ isLibraryOpen: false });\n        }\n        this.setState({ isLibraryOpen: true });\n      }\n    } catch (error) {\n      window.alert(t(\"alerts.errorLoadingLibrary\"));\n      console.error(error);\n    } finally {\n      this.focusContainer();\n    }\n  };\n\n  private resetHistory = () => {\n    this.history.clear();\n  };\n\n  /**\n   * Resets scene & history.\n   * ! Do not use to clear scene user action !\n   */\n  private resetScene = withBatchedUpdates(\n    (opts?: { resetLoadingState: boolean }) => {\n      this.scene.replaceAllElements([]);\n      this.setState((state) => ({\n        ...getDefaultAppState(),\n        isLoading: opts?.resetLoadingState ? false : state.isLoading,\n        theme: this.state.theme,\n      }));\n      this.resetHistory();\n    },\n  );\n\n  private initializeScene = async () => {\n    if (\"launchQueue\" in window && \"LaunchParams\" in window) {\n      (window as any).launchQueue.setConsumer(\n        async (launchParams: { files: any[] }) => {\n          if (!launchParams.files.length) {\n            return;\n          }\n          const fileHandle = launchParams.files[0];\n          const blob: Blob = await fileHandle.getFile();\n          blob.handle = fileHandle;\n          loadFromBlob(\n            blob,\n            this.state,\n            this.scene.getElementsIncludingDeleted(),\n          )\n            .then(({ elements, appState }) =>\n              this.syncActionResult({\n                elements,\n                appState: {\n                  ...(appState || this.state),\n                  isLoading: false,\n                },\n                commitToHistory: true,\n              }),\n            )\n            .catch((error) => {\n              this.setState({ isLoading: false, errorMessage: error.message });\n            });\n        },\n      );\n    }\n\n    if (!this.state.isLoading) {\n      this.setState({ isLoading: true });\n    }\n    let initialData = null;\n    try {\n      initialData = (await this.props.initialData) || null;\n      if (initialData?.libraryItems) {\n        this.libraryItemsFromStorage = initialData.libraryItems;\n      }\n    } catch (error) {\n      console.error(error);\n      initialData = {\n        appState: {\n          errorMessage:\n            error.message ||\n            \"Encountered an error during importing or restoring scene data\",\n        },\n      };\n    }\n\n    const scene = restore(initialData, null, null);\n    scene.appState = {\n      ...scene.appState,\n      isLoading: false,\n    };\n    if (initialData?.scrollToContent) {\n      scene.appState = {\n        ...scene.appState,\n        ...calculateScrollCenter(\n          scene.elements,\n          {\n            ...scene.appState,\n            width: this.state.width,\n            height: this.state.height,\n            offsetTop: this.state.offsetTop,\n            offsetLeft: this.state.offsetLeft,\n          },\n          null,\n        ),\n      };\n    }\n\n    this.resetHistory();\n    this.syncActionResult({\n      ...scene,\n      commitToHistory: true,\n    });\n\n    const libraryUrl =\n      // current\n      new URLSearchParams(window.location.hash.slice(1)).get(\n        URL_HASH_KEYS.addLibrary,\n      ) ||\n      // legacy, kept for compat reasons\n      new URLSearchParams(window.location.search).get(\n        URL_QUERY_KEYS.addLibrary,\n      );\n\n    if (libraryUrl) {\n      await this.importLibraryFromUrl(libraryUrl);\n    }\n  };\n\n  public async componentDidMount() {\n    this.excalidrawContainerValue.container = this.excalidrawContainerRef.current;\n\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      const setState = this.setState.bind(this);\n      Object.defineProperties(window.h, {\n        state: {\n          configurable: true,\n          get: () => {\n            return this.state;\n          },\n        },\n        setState: {\n          configurable: true,\n          value: (...args: Parameters<typeof setState>) => {\n            return this.setState(...args);\n          },\n        },\n        app: {\n          configurable: true,\n          value: this,\n        },\n        history: {\n          configurable: true,\n          value: this.history,\n        },\n      });\n    }\n\n    this.scene.addCallback(this.onSceneUpdated);\n    this.addEventListeners();\n\n    if (this.excalidrawContainerRef.current) {\n      this.focusContainer();\n    }\n\n    if (\"ResizeObserver\" in window && this.excalidrawContainerRef?.current) {\n      this.resizeObserver = new ResizeObserver(() => {\n        // compute isMobile state\n        // ---------------------------------------------------------------------\n        const {\n          width,\n          height,\n        } = this.excalidrawContainerRef.current!.getBoundingClientRect();\n        this.isMobile =\n          width < MQ_MAX_WIDTH_PORTRAIT ||\n          (height < MQ_MAX_HEIGHT_LANDSCAPE && width < MQ_MAX_WIDTH_LANDSCAPE);\n        // refresh offsets\n        // ---------------------------------------------------------------------\n        this.updateDOMRect();\n      });\n      this.resizeObserver?.observe(this.excalidrawContainerRef.current);\n    } else if (window.matchMedia) {\n      const mediaQuery = window.matchMedia(\n        `(max-width: ${MQ_MAX_WIDTH_PORTRAIT}px), (max-height: ${MQ_MAX_HEIGHT_LANDSCAPE}px) and (max-width: ${MQ_MAX_WIDTH_LANDSCAPE}px)`,\n      );\n      const handler = () => (this.isMobile = mediaQuery.matches);\n      mediaQuery.addListener(handler);\n      this.detachIsMobileMqHandler = () => mediaQuery.removeListener(handler);\n    }\n\n    const searchParams = new URLSearchParams(window.location.search.slice(1));\n\n    if (searchParams.has(\"web-share-target\")) {\n      // Obtain a file that was shared via the Web Share Target API.\n      this.restoreFileFromShare();\n    } else {\n      this.updateDOMRect(this.initializeScene);\n    }\n  }\n\n  public componentWillUnmount() {\n    this.resizeObserver?.disconnect();\n    this.unmounted = true;\n    this.removeEventListeners();\n    this.scene.destroy();\n    clearTimeout(touchTimeout);\n    touchTimeout = 0;\n  }\n\n  private onResize = withBatchedUpdates(() => {\n    this.scene\n      .getElementsIncludingDeleted()\n      .forEach((element) => invalidateShapeForElement(element));\n    this.setState({});\n  });\n\n  private removeEventListeners() {\n    document.removeEventListener(EVENT.POINTER_UP, this.removePointer);\n    document.removeEventListener(EVENT.COPY, this.onCopy);\n    document.removeEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.removeEventListener(EVENT.CUT, this.onCut);\n    this.nearestScrollableContainer?.removeEventListener(\n      EVENT.SCROLL,\n      this.onScroll,\n    );\n    document.removeEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    document.removeEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n      false,\n    );\n    document.removeEventListener(EVENT.KEYUP, this.onKeyUp);\n    window.removeEventListener(EVENT.RESIZE, this.onResize, false);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.removeEventListener(EVENT.BLUR, this.onBlur, false);\n    window.removeEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.removeEventListener(EVENT.DROP, this.disableEvent, false);\n\n    document.removeEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.removeEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n\n    this.detachIsMobileMqHandler?.();\n  }\n\n  private addEventListeners() {\n    this.removeEventListeners();\n    document.addEventListener(EVENT.POINTER_UP, this.removePointer); // #3553\n    document.addEventListener(EVENT.COPY, this.onCopy);\n    if (this.props.handleKeyboardGlobally) {\n      document.addEventListener(EVENT.KEYDOWN, this.onKeyDown, false);\n    }\n    document.addEventListener(EVENT.KEYUP, this.onKeyUp, { passive: true });\n    document.addEventListener(\n      EVENT.MOUSE_MOVE,\n      this.updateCurrentCursorPosition,\n    );\n    // rerender text elements on font load to fix #637 && #1553\n    document.fonts?.addEventListener?.(\"loadingdone\", this.onFontLoaded);\n    // Safari-only desktop pinch zoom\n    document.addEventListener(\n      EVENT.GESTURE_START,\n      this.onGestureStart as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_CHANGE,\n      this.onGestureChange as any,\n      false,\n    );\n    document.addEventListener(\n      EVENT.GESTURE_END,\n      this.onGestureEnd as any,\n      false,\n    );\n    if (this.state.viewModeEnabled) {\n      return;\n    }\n\n    document.addEventListener(EVENT.PASTE, this.pasteFromClipboard);\n    document.addEventListener(EVENT.CUT, this.onCut);\n    if (this.props.detectScroll) {\n      this.nearestScrollableContainer = getNearestScrollableContainer(\n        this.excalidrawContainerRef.current!,\n      );\n      this.nearestScrollableContainer.addEventListener(\n        EVENT.SCROLL,\n        this.onScroll,\n      );\n    }\n    window.addEventListener(EVENT.RESIZE, this.onResize, false);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload, false);\n    window.addEventListener(EVENT.BLUR, this.onBlur, false);\n    window.addEventListener(EVENT.DRAG_OVER, this.disableEvent, false);\n    window.addEventListener(EVENT.DROP, this.disableEvent, false);\n  }\n\n  componentDidUpdate(prevProps: AppProps, prevState: AppState) {\n    if (prevProps.langCode !== this.props.langCode) {\n      this.updateLanguage();\n    }\n\n    if (prevProps.viewModeEnabled !== this.props.viewModeEnabled) {\n      this.setState({ viewModeEnabled: !!this.props.viewModeEnabled });\n    }\n\n    if (prevState.viewModeEnabled !== this.state.viewModeEnabled) {\n      this.addEventListeners();\n      this.deselectElements();\n    }\n\n    if (prevProps.zenModeEnabled !== this.props.zenModeEnabled) {\n      this.setState({ zenModeEnabled: !!this.props.zenModeEnabled });\n    }\n\n    if (prevProps.theme !== this.props.theme && this.props.theme) {\n      this.setState({ theme: this.props.theme });\n    }\n\n    if (prevProps.gridModeEnabled !== this.props.gridModeEnabled) {\n      this.setState({\n        gridSize: this.props.gridModeEnabled ? GRID_SIZE : null,\n      });\n    }\n\n    if (this.props.name && prevProps.name !== this.props.name) {\n      this.setState({\n        name: this.props.name,\n      });\n    }\n\n    this.excalidrawContainerRef.current?.classList.toggle(\n      \"theme--dark\",\n      this.state.theme === \"dark\",\n    );\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.selectedElementIds[this.state.editingLinearElement.elementId]\n    ) {\n      // defer so that the commitToHistory flag isn't reset via current update\n      setTimeout(() => {\n        this.actionManager.executeAction(actionFinalize);\n      });\n    }\n    const { multiElement } = prevState;\n    if (\n      prevState.elementType !== this.state.elementType &&\n      multiElement != null &&\n      isBindingEnabled(this.state) &&\n      isBindingElement(multiElement)\n    ) {\n      maybeBindLinearElement(\n        multiElement,\n        this.state,\n        this.scene,\n        tupleToCoors(\n          LinearElementEditor.getPointAtIndexGlobalCoordinates(\n            multiElement,\n            -1,\n          ),\n        ),\n      );\n    }\n\n    const cursorButton: {\n      [id: string]: string | undefined;\n    } = {};\n    const pointerViewportCoords: SceneState[\"remotePointerViewportCoords\"] = {};\n    const remoteSelectedElementIds: SceneState[\"remoteSelectedElementIds\"] = {};\n    const pointerUsernames: { [id: string]: string } = {};\n    const pointerUserStates: { [id: string]: string } = {};\n    this.state.collaborators.forEach((user, socketId) => {\n      if (user.selectedElementIds) {\n        for (const id of Object.keys(user.selectedElementIds)) {\n          if (!(id in remoteSelectedElementIds)) {\n            remoteSelectedElementIds[id] = [];\n          }\n          remoteSelectedElementIds[id].push(socketId);\n        }\n      }\n      if (!user.pointer) {\n        return;\n      }\n      if (user.username) {\n        pointerUsernames[socketId] = user.username;\n      }\n      if (user.userState) {\n        pointerUserStates[socketId] = user.userState;\n      }\n      pointerViewportCoords[socketId] = sceneCoordsToViewportCoords(\n        {\n          sceneX: user.pointer.x,\n          sceneY: user.pointer.y,\n        },\n        this.state,\n      );\n      cursorButton[socketId] = user.button;\n    });\n    const elements = this.scene.getElements();\n    const { atLeastOneVisibleElement, scrollBars } = renderScene(\n      elements.filter((element) => {\n        // don't render text element that's being currently edited (it's\n        // rendered on remote only)\n        return (\n          !this.state.editingElement ||\n          this.state.editingElement.type !== \"text\" ||\n          element.id !== this.state.editingElement.id\n        );\n      }),\n      this.state,\n      this.state.selectionElement,\n      window.devicePixelRatio,\n      this.rc!,\n      this.canvas!,\n      {\n        scrollX: this.state.scrollX,\n        scrollY: this.state.scrollY,\n        viewBackgroundColor: this.state.viewBackgroundColor,\n        zoom: this.state.zoom,\n        remotePointerViewportCoords: pointerViewportCoords,\n        remotePointerButton: cursorButton,\n        remoteSelectedElementIds,\n        remotePointerUsernames: pointerUsernames,\n        remotePointerUserStates: pointerUserStates,\n        shouldCacheIgnoreZoom: this.state.shouldCacheIgnoreZoom,\n      },\n      {\n        renderOptimizations: true,\n        renderScrollbars: !this.isMobile,\n      },\n    );\n    if (scrollBars) {\n      currentScrollBars = scrollBars;\n    }\n    const scrolledOutside =\n      // hide when editing text\n      this.state.editingElement?.type === \"text\"\n        ? false\n        : !atLeastOneVisibleElement && elements.length > 0;\n    if (this.state.scrolledOutside !== scrolledOutside) {\n      this.setState({ scrolledOutside });\n    }\n\n    this.history.record(this.state, this.scene.getElementsIncludingDeleted());\n\n    // Do not notify consumers if we're still loading the scene. Among other\n    // potential issues, this fixes a case where the tab isn't focused during\n    // init, which would trigger onChange with empty elements, which would then\n    // override whatever is in localStorage currently.\n    if (!this.state.isLoading) {\n      this.props.onChange?.(\n        this.scene.getElementsIncludingDeleted(),\n        this.state,\n      );\n    }\n  }\n\n  private onScroll = debounce(() => {\n    const { offsetTop, offsetLeft } = this.getCanvasOffsets();\n    this.setState((state) => {\n      if (state.offsetLeft === offsetLeft && state.offsetTop === offsetTop) {\n        return null;\n      }\n      return { offsetTop, offsetLeft };\n    });\n  }, SCROLL_TIMEOUT);\n\n  // Copy/paste\n\n  private onCut = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.cutAll();\n    event.preventDefault();\n  });\n\n  private onCopy = withBatchedUpdates((event: ClipboardEvent) => {\n    const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n      document.activeElement,\n    );\n    if (!isExcalidrawActive || isWritableElement(event.target)) {\n      return;\n    }\n    this.copyAll();\n    event.preventDefault();\n  });\n\n  private cutAll = () => {\n    this.copyAll();\n    this.actionManager.executeAction(actionDeleteSelected);\n  };\n\n  private copyAll = () => {\n    copyToClipboard(this.scene.getElements(), this.state);\n  };\n\n  private static resetTapTwice() {\n    didTapTwice = false;\n  }\n\n  private onTapStart = (event: TouchEvent) => {\n    if (!didTapTwice) {\n      didTapTwice = true;\n      clearTimeout(tappedTwiceTimer);\n      tappedTwiceTimer = window.setTimeout(\n        App.resetTapTwice,\n        TAP_TWICE_TIMEOUT,\n      );\n      return;\n    }\n    // insert text only if we tapped twice with a single finger\n    // event.touches.length === 1 will also prevent inserting text when user's zooming\n    if (didTapTwice && event.touches.length === 1) {\n      const [touch] = event.touches;\n      // @ts-ignore\n      this.handleCanvasDoubleClick({\n        clientX: touch.clientX,\n        clientY: touch.clientY,\n      });\n      didTapTwice = false;\n      clearTimeout(tappedTwiceTimer);\n    }\n    event.preventDefault();\n    if (event.touches.length === 2) {\n      this.setState({\n        selectedElementIds: {},\n      });\n    }\n  };\n\n  private onTapEnd = (event: TouchEvent) => {\n    if (event.touches.length > 0) {\n      this.setState({\n        previousSelectedElementIds: {},\n        selectedElementIds: this.state.previousSelectedElementIds,\n      });\n    }\n  };\n\n  private pasteFromClipboard = withBatchedUpdates(\n    async (event: ClipboardEvent | null) => {\n      // #686\n      const target = document.activeElement;\n      const isExcalidrawActive = this.excalidrawContainerRef.current?.contains(\n        target,\n      );\n      if (!isExcalidrawActive) {\n        return;\n      }\n\n      const elementUnderCursor = document.elementFromPoint(cursorX, cursorY);\n      if (\n        // if no ClipboardEvent supplied, assume we're pasting via contextMenu\n        // thus these checks don't make sense\n        event &&\n        (!(elementUnderCursor instanceof HTMLCanvasElement) ||\n          isWritableElement(target))\n      ) {\n        return;\n      }\n      const data = await parseClipboard(event);\n      if (this.props.onPaste) {\n        if (await this.props.onPaste(data, event)) {\n          return;\n        }\n      }\n      if (data.errorMessage) {\n        this.setState({ errorMessage: data.errorMessage });\n      } else if (data.spreadsheet) {\n        this.setState({\n          pasteDialog: {\n            data: data.spreadsheet,\n            shown: true,\n          },\n        });\n      } else if (data.elements) {\n        this.addElementsFromPasteOrLibrary({\n          elements: data.elements,\n          position: \"cursor\",\n        });\n      } else if (data.text) {\n        this.addTextFromPaste(data.text);\n      }\n      this.selectShapeTool(\"selection\");\n      event?.preventDefault();\n    },\n  );\n\n  private addElementsFromPasteOrLibrary = (opts: {\n    elements: readonly ExcalidrawElement[];\n    position: { clientX: number; clientY: number } | \"cursor\" | \"center\";\n  }) => {\n    const elements = restoreElements(opts.elements, null);\n    const [minX, minY, maxX, maxY] = getCommonBounds(elements);\n\n    const elementsCenterX = distance(minX, maxX) / 2;\n    const elementsCenterY = distance(minY, maxY) / 2;\n\n    const clientX =\n      typeof opts.position === \"object\"\n        ? opts.position.clientX\n        : opts.position === \"cursor\"\n        ? cursorX\n        : this.state.width / 2 + this.state.offsetLeft;\n    const clientY =\n      typeof opts.position === \"object\"\n        ? opts.position.clientY\n        : opts.position === \"cursor\"\n        ? cursorY\n        : this.state.height / 2 + this.state.offsetTop;\n\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX, clientY },\n      this.state,\n    );\n\n    const dx = x - elementsCenterX;\n    const dy = y - elementsCenterY;\n    const groupIdMap = new Map();\n\n    const [gridX, gridY] = getGridPoint(dx, dy, this.state.gridSize);\n\n    const oldIdToDuplicatedId = new Map();\n    const newElements = elements.map((element) => {\n      const newElement = duplicateElement(\n        this.state.editingGroupId,\n        groupIdMap,\n        element,\n        {\n          x: element.x + gridX - minX,\n          y: element.y + gridY - minY,\n        },\n      );\n      oldIdToDuplicatedId.set(element.id, newElement.id);\n      return newElement;\n    });\n    const nextElements = [\n      ...this.scene.getElementsIncludingDeleted(),\n      ...newElements,\n    ];\n    fixBindingsAfterDuplication(nextElements, elements, oldIdToDuplicatedId);\n\n    this.scene.replaceAllElements(nextElements);\n    this.history.resumeRecording();\n    this.setState(\n      selectGroupsForSelectedElements(\n        {\n          ...this.state,\n          isLibraryOpen: false,\n          selectedElementIds: newElements.reduce((map, element) => {\n            map[element.id] = true;\n            return map;\n          }, {} as any),\n          selectedGroupIds: {},\n        },\n        this.scene.getElements(),\n      ),\n    );\n    this.selectShapeTool(\"selection\");\n  };\n\n  private addTextFromPaste(text: any) {\n    const { x, y } = viewportCoordsToSceneCoords(\n      { clientX: cursorX, clientY: cursorY },\n      this.state,\n    );\n\n    const element = newTextElement({\n      x,\n      y,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemStrokeSharpness,\n      text,\n      fontSize: this.state.currentItemFontSize,\n      fontFamily: this.state.currentItemFontFamily,\n      textAlign: this.state.currentItemTextAlign,\n      verticalAlign: DEFAULT_VERTICAL_ALIGN,\n    });\n\n    this.scene.replaceAllElements([\n      ...this.scene.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({ selectedElementIds: { [element.id]: true } });\n    this.history.resumeRecording();\n  }\n\n  // Collaboration\n\n  setAppState = (obj: any) => {\n    this.setState(obj);\n  };\n\n  removePointer = (event: React.PointerEvent<HTMLElement> | PointerEvent) => {\n    // remove touch handler for context menu on touch devices\n    if (event.pointerType === \"touch\" && touchTimeout) {\n      clearTimeout(touchTimeout);\n      touchTimeout = 0;\n      invalidateContextMenu = false;\n    }\n\n    gesture.pointers.delete(event.pointerId);\n  };\n\n  toggleLock = () => {\n    this.setState((prevState) => {\n      return {\n        elementLocked: !prevState.elementLocked,\n        elementType: prevState.elementLocked\n          ? \"selection\"\n          : prevState.elementType,\n      };\n    });\n  };\n\n  toggleZenMode = () => {\n    this.actionManager.executeAction(actionToggleZenMode);\n  };\n\n  toggleStats = () => {\n    if (!this.state.showStats) {\n      trackEvent(\"dialog\", \"stats\");\n    }\n    this.actionManager.executeAction(actionToggleStats);\n  };\n\n  scrollToContent = (\n    target:\n      | ExcalidrawElement\n      | readonly ExcalidrawElement[] = this.scene.getElements(),\n  ) => {\n    this.setState({\n      ...calculateScrollCenter(\n        Array.isArray(target) ? target : [target],\n        this.state,\n        this.canvas,\n      ),\n    });\n  };\n\n  clearToast = () => {\n    this.setState({ toastMessage: null });\n  };\n\n  setToastMessage = (toastMessage: string) => {\n    this.setState({ toastMessage });\n  };\n\n  restoreFileFromShare = async () => {\n    try {\n      const webShareTargetCache = await caches.open(\"web-share-target\");\n\n      const file = await webShareTargetCache.match(\"shared-file\");\n      if (file) {\n        const blob = await file.blob();\n        this.loadFileToCanvas(blob);\n        await webShareTargetCache.delete(\"shared-file\");\n        window.history.replaceState(null, APP_NAME, window.location.pathname);\n      }\n    } catch (error) {\n      this.setState({ errorMessage: error.message });\n    }\n  };\n\n  public updateScene = withBatchedUpdates(\n    <K extends keyof AppState>(sceneData: {\n      elements?: SceneData[\"elements\"];\n      appState?: Pick<AppState, K> | null;\n      collaborators?: SceneData[\"collaborators\"];\n      commitToHistory?: SceneData[\"commitToHistory\"];\n    }) => {\n      if (sceneData.commitToHistory) {\n        this.history.resumeRecording();\n      }\n\n      if (sceneData.appState) {\n        this.setState(sceneData.appState);\n      }\n\n      if (sceneData.elements) {\n        this.scene.replaceAllElements(sceneData.elements);\n      }\n\n      if (sceneData.collaborators) {\n        this.setState({ collaborators: sceneData.collaborators });\n      }\n    },\n  );\n\n  private onSceneUpdated = () => {\n    this.setState({});\n  };\n\n  private updateCurrentCursorPosition = withBatchedUpdates(\n    (event: MouseEvent) => {\n      cursorX = event.clientX;\n      cursorY = event.clientY;\n    },\n  );\n\n  // Input handling\n\n  private onKeyDown = withBatchedUpdates(\n    (event: React.KeyboardEvent | KeyboardEvent) => {\n      // normalize `event.key` when CapsLock is pressed #2372\n      if (\n        \"Proxy\" in window &&\n        ((!event.shiftKey && /^[A-Z]$/.test(event.key)) ||\n          (event.shiftKey && /^[a-z]$/.test(event.key)))\n      ) {\n        event = new Proxy(event, {\n          get(ev: any, prop) {\n            const value = ev[prop];\n            if (typeof value === \"function\") {\n              // fix for Proxies hijacking `this`\n              return value.bind(ev);\n            }\n            return prop === \"key\"\n              ? // CapsLock inverts capitalization based on ShiftKey, so invert\n                // it back\n                event.shiftKey\n                ? ev.key.toUpperCase()\n                : ev.key.toLowerCase()\n              : value;\n          },\n        });\n      }\n\n      if (\n        (isWritableElement(event.target) && event.key !== KEYS.ESCAPE) ||\n        // case: using arrows to move between buttons\n        (isArrowKey(event.key) && isInputLike(event.target))\n      ) {\n        return;\n      }\n\n      if (event.key === KEYS.QUESTION_MARK) {\n        this.setState({\n          showHelpDialog: true,\n        });\n      }\n\n      if (this.actionManager.handleKeyDown(event)) {\n        return;\n      }\n\n      if (this.state.viewModeEnabled) {\n        return;\n      }\n\n      if (event[KEYS.CTRL_OR_CMD] && this.state.isBindingEnabled) {\n        this.setState({ isBindingEnabled: false });\n      }\n\n      if (event.code === CODES.NINE) {\n        this.setState({ isLibraryOpen: !this.state.isLibraryOpen });\n      }\n\n      if (isArrowKey(event.key)) {\n        const step =\n          (this.state.gridSize &&\n            (event.shiftKey\n              ? ELEMENT_TRANSLATE_AMOUNT\n              : this.state.gridSize)) ||\n          (event.shiftKey\n            ? ELEMENT_SHIFT_TRANSLATE_AMOUNT\n            : ELEMENT_TRANSLATE_AMOUNT);\n\n        const selectedElements = this.scene\n          .getElements()\n          .filter((element) => this.state.selectedElementIds[element.id]);\n\n        let offsetX = 0;\n        let offsetY = 0;\n\n        if (event.key === KEYS.ARROW_LEFT) {\n          offsetX = -step;\n        } else if (event.key === KEYS.ARROW_RIGHT) {\n          offsetX = step;\n        } else if (event.key === KEYS.ARROW_UP) {\n          offsetY = -step;\n        } else if (event.key === KEYS.ARROW_DOWN) {\n          offsetY = step;\n        }\n\n        selectedElements.forEach((element) => {\n          mutateElement(element, {\n            x: element.x + offsetX,\n            y: element.y + offsetY,\n          });\n\n          updateBoundElements(element, {\n            simultaneouslyUpdated: selectedElements,\n          });\n        });\n\n        this.maybeSuggestBindingForAll(selectedElements);\n\n        event.preventDefault();\n      } else if (event.key === KEYS.ENTER) {\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0])\n        ) {\n          if (\n            !this.state.editingLinearElement ||\n            this.state.editingLinearElement.elementId !== selectedElements[0].id\n          ) {\n            this.history.resumeRecording();\n            this.setState({\n              editingLinearElement: new LinearElementEditor(\n                selectedElements[0],\n                this.scene,\n              ),\n            });\n          }\n        } else if (\n          selectedElements.length === 1 &&\n          !isLinearElement(selectedElements[0])\n        ) {\n          const selectedElement = selectedElements[0];\n          this.startTextEditing({\n            sceneX: selectedElement.x + selectedElement.width / 2,\n            sceneY: selectedElement.y + selectedElement.height / 2,\n          });\n          event.preventDefault();\n          return;\n        }\n      } else if (\n        !event.ctrlKey &&\n        !event.altKey &&\n        !event.metaKey &&\n        this.state.draggingElement === null\n      ) {\n        const shape = findShapeByKey(event.key);\n        if (shape) {\n          this.selectShapeTool(shape);\n        } else if (event.key === KEYS.Q) {\n          this.toggleLock();\n        }\n      }\n      if (event.key === KEYS.SPACE && gesture.pointers.size === 0) {\n        isHoldingSpace = true;\n        setCursor(this.canvas, CURSOR_TYPE.GRABBING);\n      }\n\n      if (event.key === KEYS.G || event.key === KEYS.S) {\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n        if (\n          this.state.elementType === \"selection\" &&\n          !selectedElements.length\n        ) {\n          return;\n        }\n\n        if (\n          event.key === KEYS.G &&\n          (hasBackground(this.state.elementType) ||\n            selectedElements.some((element) => hasBackground(element.type)))\n        ) {\n          this.setState({ openPopup: \"backgroundColorPicker\" });\n        }\n        if (event.key === KEYS.S) {\n          this.setState({ openPopup: \"strokeColorPicker\" });\n        }\n      }\n    },\n  );\n\n  private onKeyUp = withBatchedUpdates((event: KeyboardEvent) => {\n    if (event.key === KEYS.SPACE) {\n      if (this.state.viewModeEnabled) {\n        setCursor(this.canvas, CURSOR_TYPE.GRAB);\n      } else if (this.state.elementType === \"selection\") {\n        resetCursor(this.canvas);\n      } else {\n        setCursorForShape(this.canvas, this.state.elementType);\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n      }\n      isHoldingSpace = false;\n    }\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.isBindingEnabled) {\n      this.setState({ isBindingEnabled: true });\n    }\n    if (isArrowKey(event.key)) {\n      const selectedElements = getSelectedElements(\n        this.scene.getElements(),\n        this.state,\n      );\n      isBindingEnabled(this.state)\n        ? bindOrUnbindSelectedElements(selectedElements)\n        : unbindLinearElements(selectedElements);\n      this.setState({ suggestedBindings: [] });\n    }\n  });\n\n  private selectShapeTool(elementType: AppState[\"elementType\"]) {\n    if (!isHoldingSpace) {\n      setCursorForShape(this.canvas, elementType);\n    }\n    if (isToolIcon(document.activeElement)) {\n      this.focusContainer();\n    }\n    if (!isLinearElementType(elementType)) {\n      this.setState({ suggestedBindings: [] });\n    }\n    if (elementType !== \"selection\") {\n      this.setState({\n        elementType,\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    } else {\n      this.setState({ elementType });\n    }\n  }\n\n  private onGestureStart = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      selectedElementIds: {},\n    });\n    gesture.initialScale = this.state.zoom.value;\n  });\n\n  private onGestureChange = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n\n    // onGestureChange only has zoom factor but not the center.\n    // If we're on iPad or iPhone, then we recognize multi-touch and will\n    // zoom in at the right location on the touchMove handler already.\n    // On Macbook, we don't have those events so will zoom in at the\n    // current location instead.\n    if (gesture.pointers.size === 2) {\n      return;\n    }\n\n    const initialScale = gesture.initialScale;\n    if (initialScale) {\n      this.setState(({ zoom, offsetLeft, offsetTop }) => ({\n        zoom: getNewZoom(\n          getNormalizedZoom(initialScale * event.scale),\n          zoom,\n          { left: offsetLeft, top: offsetTop },\n          { x: cursorX, y: cursorY },\n        ),\n      }));\n    }\n  });\n\n  private onGestureEnd = withBatchedUpdates((event: GestureEvent) => {\n    event.preventDefault();\n    this.setState({\n      previousSelectedElementIds: {},\n      selectedElementIds: this.state.previousSelectedElementIds,\n    });\n    gesture.initialScale = null;\n  });\n\n  private handleTextWysiwyg(\n    element: ExcalidrawTextElement,\n    {\n      isExistingElement = false,\n    }: {\n      isExistingElement?: boolean;\n    },\n  ) {\n    const updateElement = (text: string, isDeleted = false) => {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted().map((_element) => {\n          if (_element.id === element.id && isTextElement(_element)) {\n            return updateTextElement(_element, {\n              text,\n              isDeleted,\n            });\n          }\n          return _element;\n        }),\n      ]);\n    };\n\n    textWysiwyg({\n      id: element.id,\n      appState: this.state,\n      canvas: this.canvas,\n      getViewportCoords: (x, y) => {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          {\n            sceneX: x,\n            sceneY: y,\n          },\n          this.state,\n        );\n        return [\n          viewportX - this.state.offsetLeft,\n          viewportY - this.state.offsetTop,\n        ];\n      },\n      onChange: withBatchedUpdates((text) => {\n        updateElement(text);\n        if (isNonDeletedElement(element)) {\n          updateBoundElements(element);\n        }\n      }),\n      onSubmit: withBatchedUpdates(({ text, viaKeyboard }) => {\n        const isDeleted = !text.trim();\n        updateElement(text, isDeleted);\n        // select the created text element only if submitting via keyboard\n        // (when submitting via click it should act as signal to deselect)\n        if (!isDeleted && viaKeyboard) {\n          this.setState((prevState) => ({\n            selectedElementIds: {\n              ...prevState.selectedElementIds,\n              [element.id]: true,\n            },\n          }));\n        }\n        if (isDeleted) {\n          fixBindingsAfterDeletion(this.scene.getElements(), [element]);\n        }\n        if (!isDeleted || isExistingElement) {\n          this.history.resumeRecording();\n        }\n\n        this.setState({\n          draggingElement: null,\n          editingElement: null,\n        });\n        if (this.state.elementLocked) {\n          setCursorForShape(this.canvas, this.state.elementType);\n        }\n\n        this.focusContainer();\n      }),\n      element,\n      excalidrawContainer: this.excalidrawContainerRef.current,\n    });\n    // deselect all other elements when inserting text\n    this.deselectElements();\n\n    // do an initial update to re-initialize element position since we were\n    // modifying element's x/y for sake of editor (case: syncing to remote)\n    updateElement(element.text);\n  }\n\n  private deselectElements() {\n    this.setState({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      editingGroupId: null,\n    });\n  }\n\n  private getTextElementAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawTextElement> | null {\n    const element = this.getElementAtPosition(x, y);\n\n    if (element && isTextElement(element) && !element.isDeleted) {\n      return element;\n    }\n    return null;\n  }\n\n  private getElementAtPosition(\n    x: number,\n    y: number,\n    opts?: {\n      /** if true, returns the first selected element (with highest z-index)\n        of all hit elements */\n      preferSelected?: boolean;\n    },\n  ): NonDeleted<ExcalidrawElement> | null {\n    const allHitElements = this.getElementsAtPosition(x, y);\n    if (allHitElements.length > 1) {\n      if (opts?.preferSelected) {\n        for (let index = allHitElements.length - 1; index > -1; index--) {\n          if (this.state.selectedElementIds[allHitElements[index].id]) {\n            return allHitElements[index];\n          }\n        }\n      }\n      const elementWithHighestZIndex =\n        allHitElements[allHitElements.length - 1];\n      // If we're hitting element with highest z-index only on its bounding box\n      // while also hitting other element figure, the latter should be considered.\n      return isHittingElementBoundingBoxWithoutHittingElement(\n        elementWithHighestZIndex,\n        this.state,\n        x,\n        y,\n      )\n        ? allHitElements[allHitElements.length - 2]\n        : elementWithHighestZIndex;\n    }\n    if (allHitElements.length === 1) {\n      return allHitElements[0];\n    }\n    return null;\n  }\n\n  private getElementsAtPosition(\n    x: number,\n    y: number,\n  ): NonDeleted<ExcalidrawElement>[] {\n    return getElementsAtPosition(this.scene.getElements(), (element) =>\n      hitTest(element, this.state, x, y),\n    );\n  }\n\n  private startTextEditing = ({\n    sceneX,\n    sceneY,\n    insertAtParentCenter = true,\n  }: {\n    /** X position to insert text at */\n    sceneX: number;\n    /** Y position to insert text at */\n    sceneY: number;\n    /** whether to attempt to insert at element center if applicable */\n    insertAtParentCenter?: boolean;\n  }) => {\n    const existingTextElement = this.getTextElementAtPosition(sceneX, sceneY);\n\n    const parentCenterPosition =\n      insertAtParentCenter &&\n      this.getTextWysiwygSnappedToCenterPosition(\n        sceneX,\n        sceneY,\n        this.state,\n        this.canvas,\n        window.devicePixelRatio,\n      );\n\n    const element = existingTextElement\n      ? existingTextElement\n      : newTextElement({\n          x: parentCenterPosition\n            ? parentCenterPosition.elementCenterX\n            : sceneX,\n          y: parentCenterPosition\n            ? parentCenterPosition.elementCenterY\n            : sceneY,\n          strokeColor: this.state.currentItemStrokeColor,\n          backgroundColor: this.state.currentItemBackgroundColor,\n          fillStyle: this.state.currentItemFillStyle,\n          strokeWidth: this.state.currentItemStrokeWidth,\n          strokeStyle: this.state.currentItemStrokeStyle,\n          roughness: this.state.currentItemRoughness,\n          opacity: this.state.currentItemOpacity,\n          strokeSharpness: this.state.currentItemStrokeSharpness,\n          text: \"\",\n          fontSize: this.state.currentItemFontSize,\n          fontFamily: this.state.currentItemFontFamily,\n          textAlign: parentCenterPosition\n            ? \"center\"\n            : this.state.currentItemTextAlign,\n          verticalAlign: parentCenterPosition\n            ? \"middle\"\n            : DEFAULT_VERTICAL_ALIGN,\n        });\n\n    this.setState({ editingElement: element });\n\n    if (existingTextElement) {\n      // if text element is no longer centered to a container, reset\n      // verticalAlign to default because it's currently internal-only\n      if (!parentCenterPosition || element.textAlign !== \"center\") {\n        mutateElement(element, { verticalAlign: DEFAULT_VERTICAL_ALIGN });\n      }\n    } else {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n\n      // case: creating new text not centered to parent elemenent → offset Y\n      // so that the text is centered to cursor position\n      if (!parentCenterPosition) {\n        mutateElement(element, {\n          y: element.y - element.baseline / 2,\n        });\n      }\n    }\n\n    this.setState({\n      editingElement: element,\n    });\n\n    this.handleTextWysiwyg(element, {\n      isExistingElement: !!existingTextElement,\n    });\n  };\n\n  private handleCanvasDoubleClick = (\n    event: React.MouseEvent<HTMLCanvasElement>,\n  ) => {\n    // case: double-clicking with arrow/line tool selected would both create\n    // text and enter multiElement mode\n    if (this.state.multiElement) {\n      return;\n    }\n    // we should only be able to double click when mode is selection\n    if (this.state.elementType !== \"selection\") {\n      return;\n    }\n\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n\n    if (selectedElements.length === 1 && isLinearElement(selectedElements[0])) {\n      if (\n        !this.state.editingLinearElement ||\n        this.state.editingLinearElement.elementId !== selectedElements[0].id\n      ) {\n        this.history.resumeRecording();\n        this.setState({\n          editingLinearElement: new LinearElementEditor(\n            selectedElements[0],\n            this.scene,\n          ),\n        });\n      }\n      return;\n    }\n\n    resetCursor(this.canvas);\n\n    const { x: sceneX, y: sceneY } = viewportCoordsToSceneCoords(\n      event,\n      this.state,\n    );\n\n    const selectedGroupIds = getSelectedGroupIds(this.state);\n\n    if (selectedGroupIds.length > 0) {\n      const hitElement = this.getElementAtPosition(sceneX, sceneY);\n\n      const selectedGroupId =\n        hitElement &&\n        getSelectedGroupIdForElement(hitElement, this.state.selectedGroupIds);\n\n      if (selectedGroupId) {\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              editingGroupId: selectedGroupId,\n              selectedElementIds: { [hitElement!.id]: true },\n              selectedGroupIds: {},\n            },\n            this.scene.getElements(),\n          ),\n        );\n        return;\n      }\n    }\n\n    resetCursor(this.canvas);\n    if (!event[KEYS.CTRL_OR_CMD] && !this.state.viewModeEnabled) {\n      this.startTextEditing({\n        sceneX,\n        sceneY,\n        insertAtParentCenter: !event.altKey,\n      });\n    }\n  };\n\n  private handleCanvasPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    this.savePointer(event.clientX, event.clientY, this.state.cursorButton);\n\n    if (gesture.pointers.has(event.pointerId)) {\n      gesture.pointers.set(event.pointerId, {\n        x: event.clientX,\n        y: event.clientY,\n      });\n    }\n\n    const initialScale = gesture.initialScale;\n    if (\n      gesture.pointers.size === 2 &&\n      gesture.lastCenter &&\n      initialScale &&\n      gesture.initialDistance\n    ) {\n      const center = getCenter(gesture.pointers);\n      const deltaX = center.x - gesture.lastCenter.x;\n      const deltaY = center.y - gesture.lastCenter.y;\n      gesture.lastCenter = center;\n\n      const distance = getDistance(Array.from(gesture.pointers.values()));\n      const scaleFactor = distance / gesture.initialDistance;\n\n      this.setState(({ zoom, scrollX, scrollY, offsetLeft, offsetTop }) => ({\n        scrollX: scrollX + deltaX / zoom.value,\n        scrollY: scrollY + deltaY / zoom.value,\n        zoom: getNewZoom(\n          getNormalizedZoom(initialScale * scaleFactor),\n          zoom,\n          { left: offsetLeft, top: offsetTop },\n          center,\n        ),\n        shouldCacheIgnoreZoom: true,\n      }));\n      this.resetShouldCacheIgnoreZoomDebounced();\n    } else {\n      gesture.lastCenter = gesture.initialDistance = gesture.initialScale = null;\n    }\n\n    if (isHoldingSpace || isPanning || isDraggingScrollBar) {\n      return;\n    }\n\n    const isPointerOverScrollBars = isOverScrollBars(\n      currentScrollBars,\n      event.clientX - this.state.offsetLeft,\n      event.clientY - this.state.offsetTop,\n    );\n    const isOverScrollBar = isPointerOverScrollBars.isOverEither;\n    if (!this.state.draggingElement && !this.state.multiElement) {\n      if (isOverScrollBar) {\n        resetCursor(this.canvas);\n      } else {\n        setCursorForShape(this.canvas, this.state.elementType);\n      }\n    }\n\n    const scenePointer = viewportCoordsToSceneCoords(event, this.state);\n    const { x: scenePointerX, y: scenePointerY } = scenePointer;\n\n    if (\n      this.state.editingLinearElement &&\n      !this.state.editingLinearElement.isDragging\n    ) {\n      const editingLinearElement = LinearElementEditor.handlePointerMove(\n        event,\n        scenePointerX,\n        scenePointerY,\n        this.state.editingLinearElement,\n        this.state.gridSize,\n      );\n      if (editingLinearElement !== this.state.editingLinearElement) {\n        this.setState({ editingLinearElement });\n      }\n      if (editingLinearElement.lastUncommittedPoint != null) {\n        this.maybeSuggestBindingAtCursor(scenePointer);\n      } else {\n        this.setState({ suggestedBindings: [] });\n      }\n    }\n\n    if (isBindingElementType(this.state.elementType)) {\n      // Hovering with a selected tool or creating new linear element via click\n      // and point\n      const { draggingElement } = this.state;\n      if (isBindingElement(draggingElement)) {\n        this.maybeSuggestBindingForLinearElementAtCursor(\n          draggingElement,\n          \"end\",\n          scenePointer,\n          this.state.startBoundElement,\n        );\n      } else {\n        this.maybeSuggestBindingAtCursor(scenePointer);\n      }\n    }\n\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n      const { x: rx, y: ry } = multiElement;\n\n      const { points, lastCommittedPoint } = multiElement;\n      const lastPoint = points[points.length - 1];\n\n      setCursorForShape(this.canvas, this.state.elementType);\n\n      if (lastPoint === lastCommittedPoint) {\n        // if we haven't yet created a temp point and we're beyond commit-zone\n        // threshold, add a point\n        if (\n          distance2d(\n            scenePointerX - rx,\n            scenePointerY - ry,\n            lastPoint[0],\n            lastPoint[1],\n          ) >= LINE_CONFIRM_THRESHOLD\n        ) {\n          mutateElement(multiElement, {\n            points: [...points, [scenePointerX - rx, scenePointerY - ry]],\n          });\n        } else {\n          setCursor(this.canvas, CURSOR_TYPE.POINTER);\n          // in this branch, we're inside the commit zone, and no uncommitted\n          // point exists. Thus do nothing (don't add/remove points).\n        }\n      } else if (\n        points.length > 2 &&\n        lastCommittedPoint &&\n        distance2d(\n          scenePointerX - rx,\n          scenePointerY - ry,\n          lastCommittedPoint[0],\n          lastCommittedPoint[1],\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        setCursor(this.canvas, CURSOR_TYPE.POINTER);\n        mutateElement(multiElement, {\n          points: points.slice(0, -1),\n        });\n      } else {\n        if (isPathALoop(points, this.state.zoom.value)) {\n          setCursor(this.canvas, CURSOR_TYPE.POINTER);\n        }\n        // update last uncommitted point\n        mutateElement(multiElement, {\n          points: [\n            ...points.slice(0, -1),\n            [scenePointerX - rx, scenePointerY - ry],\n          ],\n        });\n      }\n\n      return;\n    }\n\n    const hasDeselectedButton = Boolean(event.buttons);\n    if (\n      hasDeselectedButton ||\n      (this.state.elementType !== \"selection\" &&\n        this.state.elementType !== \"text\")\n    ) {\n      return;\n    }\n\n    const elements = this.scene.getElements();\n\n    const selectedElements = getSelectedElements(elements, this.state);\n    if (\n      selectedElements.length === 1 &&\n      !isOverScrollBar &&\n      !this.state.editingLinearElement\n    ) {\n      const elementWithTransformHandleType = getElementWithTransformHandleType(\n        elements,\n        this.state,\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (\n        elementWithTransformHandleType &&\n        elementWithTransformHandleType.transformHandleType\n      ) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement(elementWithTransformHandleType),\n        );\n        return;\n      }\n    } else if (selectedElements.length > 1 && !isOverScrollBar) {\n      const transformHandleType = getTransformHandleTypeFromCoords(\n        getCommonBounds(selectedElements),\n        scenePointerX,\n        scenePointerY,\n        this.state.zoom,\n        event.pointerType,\n      );\n      if (transformHandleType) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement({\n            transformHandleType,\n          }),\n        );\n        return;\n      }\n    }\n\n    const hitElement = this.getElementAtPosition(\n      scenePointer.x,\n      scenePointer.y,\n    );\n    if (this.state.elementType === \"text\") {\n      setCursor(\n        this.canvas,\n        isTextElement(hitElement) ? CURSOR_TYPE.TEXT : CURSOR_TYPE.CROSSHAIR,\n      );\n    } else if (this.state.viewModeEnabled) {\n      setCursor(this.canvas, CURSOR_TYPE.GRAB);\n    } else if (isOverScrollBar) {\n      setCursor(this.canvas, CURSOR_TYPE.AUTO);\n    } else if (\n      // if using cmd/ctrl, we're not dragging\n      !event[KEYS.CTRL_OR_CMD] &&\n      (hitElement ||\n        this.isHittingCommonBoundingBoxOfSelectedElements(\n          scenePointer,\n          selectedElements,\n        ))\n    ) {\n      setCursor(this.canvas, CURSOR_TYPE.MOVE);\n    } else {\n      setCursor(this.canvas, CURSOR_TYPE.AUTO);\n    }\n  };\n\n  // set touch moving for mobile context menu\n  private handleTouchMove = (event: React.TouchEvent<HTMLCanvasElement>) => {\n    invalidateContextMenu = true;\n  };\n\n  private handleCanvasPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    // remove any active selection when we start to interact with canvas\n    // (mainly, we care about removing selection outside the component which\n    //  would prevent our copy handling otherwise)\n    const selection = document.getSelection();\n    if (selection?.anchorNode) {\n      selection.removeAllRanges();\n    }\n\n    this.maybeOpenContextMenuAfterPointerDownOnTouchDevices(event);\n    this.maybeCleanupAfterMissingPointerUp(event);\n\n    if (isPanning) {\n      return;\n    }\n\n    this.setState({\n      lastPointerDownWith: event.pointerType,\n      cursorButton: \"down\",\n    });\n    this.savePointer(event.clientX, event.clientY, \"down\");\n\n    if (this.handleCanvasPanUsingWheelOrSpaceDrag(event)) {\n      return;\n    }\n\n    // only handle left mouse button or touch\n    if (\n      event.button !== POINTER_BUTTON.MAIN &&\n      event.button !== POINTER_BUTTON.TOUCH\n    ) {\n      return;\n    }\n\n    this.updateGestureOnPointerDown(event);\n\n    // don't select while panning\n    if (gesture.pointers.size > 1) {\n      return;\n    }\n\n    // State for the duration of a pointer interaction, which starts with a\n    // pointerDown event, ends with a pointerUp event (or another pointerDown)\n    const pointerDownState = this.initialPointerDownState(event);\n\n    if (this.handleDraggingScrollBar(event, pointerDownState)) {\n      return;\n    }\n\n    this.clearSelectionIfNotUsingSelection();\n    this.updateBindingEnabledOnPointerMove(event);\n\n    if (this.handleSelectionOnPointerDown(event, pointerDownState)) {\n      return;\n    }\n\n    if (this.state.elementType === \"text\") {\n      this.handleTextOnPointerDown(event, pointerDownState);\n      return;\n    } else if (\n      this.state.elementType === \"arrow\" ||\n      this.state.elementType === \"line\"\n    ) {\n      this.handleLinearElementOnPointerDown(\n        event,\n        this.state.elementType,\n        pointerDownState,\n      );\n    } else if (this.state.elementType === \"freedraw\") {\n      this.handleFreeDrawElementOnPointerDown(\n        event,\n        this.state.elementType,\n        pointerDownState,\n      );\n    } else {\n      this.createGenericElementOnPointerDown(\n        this.state.elementType,\n        pointerDownState,\n      );\n    }\n\n    const onPointerMove = this.onPointerMoveFromPointerDownHandler(\n      pointerDownState,\n    );\n\n    const onPointerUp = this.onPointerUpFromPointerDownHandler(\n      pointerDownState,\n    );\n\n    const onKeyDown = this.onKeyDownFromPointerDownHandler(pointerDownState);\n    const onKeyUp = this.onKeyUpFromPointerDownHandler(pointerDownState);\n\n    lastPointerUp = onPointerUp;\n\n    if (!this.state.viewModeEnabled) {\n      window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n      window.addEventListener(EVENT.KEYDOWN, onKeyDown);\n      window.addEventListener(EVENT.KEYUP, onKeyUp);\n      pointerDownState.eventListeners.onMove = onPointerMove;\n      pointerDownState.eventListeners.onUp = onPointerUp;\n      pointerDownState.eventListeners.onKeyUp = onKeyUp;\n      pointerDownState.eventListeners.onKeyDown = onKeyDown;\n    }\n  };\n\n  private maybeOpenContextMenuAfterPointerDownOnTouchDevices = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void => {\n    // deal with opening context menu on touch devices\n    if (event.pointerType === \"touch\") {\n      invalidateContextMenu = false;\n\n      if (touchTimeout) {\n        // If there's already a touchTimeout, this means that there's another\n        // touch down and we are doing another touch, so we shouldn't open the\n        // context menu.\n        invalidateContextMenu = true;\n      } else {\n        // open the context menu with the first touch's clientX and clientY\n        // if the touch is not moving\n        touchTimeout = window.setTimeout(() => {\n          touchTimeout = 0;\n          if (!invalidateContextMenu) {\n            this.handleCanvasContextMenu(event);\n          }\n        }, TOUCH_CTX_MENU_TIMEOUT);\n      }\n    }\n  };\n\n  private maybeCleanupAfterMissingPointerUp(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    if (lastPointerUp !== null) {\n      // Unfortunately, sometimes we don't get a pointerup after a pointerdown,\n      // this can happen when a contextual menu or alert is triggered. In order to avoid\n      // being in a weird state, we clean up on the next pointerdown\n      lastPointerUp(event);\n    }\n  }\n\n  // Returns whether the event is a panning\n  private handleCanvasPanUsingWheelOrSpaceDrag = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): boolean => {\n    if (\n      !(\n        gesture.pointers.size === 0 &&\n        (event.button === POINTER_BUTTON.WHEEL ||\n          (event.button === POINTER_BUTTON.MAIN && isHoldingSpace) ||\n          this.state.viewModeEnabled)\n      )\n    ) {\n      return false;\n    }\n    isPanning = true;\n\n    let nextPastePrevented = false;\n    const isLinux = /Linux/.test(window.navigator.platform);\n\n    setCursor(this.canvas, CURSOR_TYPE.GRABBING);\n    let { clientX: lastX, clientY: lastY } = event;\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      const deltaX = lastX - event.clientX;\n      const deltaY = lastY - event.clientY;\n      lastX = event.clientX;\n      lastY = event.clientY;\n\n      /*\n       * Prevent paste event if we move while middle clicking on Linux.\n       * See issue #1383.\n       */\n      if (\n        isLinux &&\n        !nextPastePrevented &&\n        (Math.abs(deltaX) > 1 || Math.abs(deltaY) > 1)\n      ) {\n        nextPastePrevented = true;\n\n        /* Prevent the next paste event */\n        const preventNextPaste = (event: ClipboardEvent) => {\n          document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n          event.stopPropagation();\n        };\n\n        /*\n         * Reenable next paste in case of disabled middle click paste for\n         * any reason:\n         * - rigth click paste\n         * - empty clipboard\n         */\n        const enableNextPaste = () => {\n          setTimeout(() => {\n            document.body.removeEventListener(EVENT.PASTE, preventNextPaste);\n            window.removeEventListener(EVENT.POINTER_UP, enableNextPaste);\n          }, 100);\n        };\n\n        document.body.addEventListener(EVENT.PASTE, preventNextPaste);\n        window.addEventListener(EVENT.POINTER_UP, enableNextPaste);\n      }\n\n      this.setState({\n        scrollX: this.state.scrollX - deltaX / this.state.zoom.value,\n        scrollY: this.state.scrollY - deltaY / this.state.zoom.value,\n      });\n    });\n    const teardown = withBatchedUpdates(\n      (lastPointerUp = () => {\n        lastPointerUp = null;\n        isPanning = false;\n        if (!isHoldingSpace) {\n          if (this.state.viewModeEnabled) {\n            setCursor(this.canvas, CURSOR_TYPE.GRAB);\n          } else {\n            setCursorForShape(this.canvas, this.state.elementType);\n          }\n        }\n        this.setState({\n          cursorButton: \"up\",\n        });\n        this.savePointer(event.clientX, event.clientY, \"up\");\n        window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n        window.removeEventListener(EVENT.POINTER_UP, teardown);\n        window.removeEventListener(EVENT.BLUR, teardown);\n      }),\n    );\n    window.addEventListener(EVENT.BLUR, teardown);\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove, {\n      passive: true,\n    });\n    window.addEventListener(EVENT.POINTER_UP, teardown);\n    return true;\n  };\n\n  private updateGestureOnPointerDown(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): void {\n    gesture.pointers.set(event.pointerId, {\n      x: event.clientX,\n      y: event.clientY,\n    });\n\n    if (gesture.pointers.size === 2) {\n      gesture.lastCenter = getCenter(gesture.pointers);\n      gesture.initialScale = this.state.zoom.value;\n      gesture.initialDistance = getDistance(\n        Array.from(gesture.pointers.values()),\n      );\n    }\n  }\n\n  private initialPointerDownState(\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ): PointerDownState {\n    const origin = viewportCoordsToSceneCoords(event, this.state);\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n    const [minX, minY, maxX, maxY] = getCommonBounds(selectedElements);\n\n    return {\n      origin,\n      withCmdOrCtrl: event[KEYS.CTRL_OR_CMD],\n      originInGrid: tupleToCoors(\n        getGridPoint(origin.x, origin.y, this.state.gridSize),\n      ),\n      scrollbars: isOverScrollBars(\n        currentScrollBars,\n        event.clientX - this.state.offsetLeft,\n        event.clientY - this.state.offsetTop,\n      ),\n      // we need to duplicate because we'll be updating this state\n      lastCoords: { ...origin },\n      originalElements: this.scene.getElements().reduce((acc, element) => {\n        acc.set(element.id, deepCopyElement(element));\n        return acc;\n      }, new Map() as PointerDownState[\"originalElements\"]),\n      resize: {\n        handleType: false,\n        isResizing: false,\n        offset: { x: 0, y: 0 },\n        arrowDirection: \"origin\",\n        center: { x: (maxX + minX) / 2, y: (maxY + minY) / 2 },\n      },\n      hit: {\n        element: null,\n        allHitElements: [],\n        wasAddedToSelection: false,\n        hasBeenDuplicated: false,\n        hasHitCommonBoundingBoxOfSelectedElements: this.isHittingCommonBoundingBoxOfSelectedElements(\n          origin,\n          selectedElements,\n        ),\n      },\n      drag: {\n        hasOccurred: false,\n        offset: null,\n      },\n      eventListeners: {\n        onMove: null,\n        onUp: null,\n        onKeyUp: null,\n        onKeyDown: null,\n      },\n    };\n  }\n\n  // Returns whether the event is a dragging a scrollbar\n  private handleDraggingScrollBar(\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (\n      !(pointerDownState.scrollbars.isOverEither && !this.state.multiElement)\n    ) {\n      return false;\n    }\n    isDraggingScrollBar = true;\n    pointerDownState.lastCoords.x = event.clientX;\n    pointerDownState.lastCoords.y = event.clientY;\n    const onPointerMove = withBatchedUpdates((event: PointerEvent) => {\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      this.handlePointerMoveOverScrollbars(event, pointerDownState);\n    });\n\n    const onPointerUp = withBatchedUpdates(() => {\n      isDraggingScrollBar = false;\n      setCursorForShape(this.canvas, this.state.elementType);\n      lastPointerUp = null;\n      this.setState({\n        cursorButton: \"up\",\n      });\n      this.savePointer(event.clientX, event.clientY, \"up\");\n      window.removeEventListener(EVENT.POINTER_MOVE, onPointerMove);\n      window.removeEventListener(EVENT.POINTER_UP, onPointerUp);\n    });\n\n    lastPointerUp = onPointerUp;\n\n    window.addEventListener(EVENT.POINTER_MOVE, onPointerMove);\n    window.addEventListener(EVENT.POINTER_UP, onPointerUp);\n    return true;\n  }\n\n  private clearSelectionIfNotUsingSelection = (): void => {\n    if (this.state.elementType !== \"selection\") {\n      this.setState({\n        selectedElementIds: {},\n        selectedGroupIds: {},\n        editingGroupId: null,\n      });\n    }\n  };\n\n  /**\n   * @returns whether the pointer event has been completely handled\n   */\n  private handleSelectionOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): boolean => {\n    if (this.state.elementType === \"selection\") {\n      const elements = this.scene.getElements();\n      const selectedElements = getSelectedElements(elements, this.state);\n      if (selectedElements.length === 1 && !this.state.editingLinearElement) {\n        const elementWithTransformHandleType = getElementWithTransformHandleType(\n          elements,\n          this.state,\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n        );\n        if (elementWithTransformHandleType != null) {\n          this.setState({\n            resizingElement: elementWithTransformHandleType.element,\n          });\n          pointerDownState.resize.handleType =\n            elementWithTransformHandleType.transformHandleType;\n        }\n      } else if (selectedElements.length > 1) {\n        pointerDownState.resize.handleType = getTransformHandleTypeFromCoords(\n          getCommonBounds(selectedElements),\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n          this.state.zoom,\n          event.pointerType,\n        );\n      }\n      if (pointerDownState.resize.handleType) {\n        setCursor(\n          this.canvas,\n          getCursorForResizingElement({\n            transformHandleType: pointerDownState.resize.handleType,\n          }),\n        );\n        pointerDownState.resize.isResizing = true;\n        pointerDownState.resize.offset = tupleToCoors(\n          getResizeOffsetXY(\n            pointerDownState.resize.handleType,\n            selectedElements,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n        if (\n          selectedElements.length === 1 &&\n          isLinearElement(selectedElements[0]) &&\n          selectedElements[0].points.length === 2\n        ) {\n          pointerDownState.resize.arrowDirection = getResizeArrowDirection(\n            pointerDownState.resize.handleType,\n            selectedElements[0],\n          );\n        }\n      } else {\n        if (this.state.editingLinearElement) {\n          const ret = LinearElementEditor.handlePointerDown(\n            event,\n            this.state,\n            (appState) => this.setState(appState),\n            this.history,\n            pointerDownState.origin,\n          );\n          if (ret.hitElement) {\n            pointerDownState.hit.element = ret.hitElement;\n          }\n          if (ret.didAddPoint) {\n            return true;\n          }\n        }\n\n        // hitElement may already be set above, so check first\n        pointerDownState.hit.element =\n          pointerDownState.hit.element ??\n          this.getElementAtPosition(\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          );\n\n        // For overlapped elements one position may hit\n        // multiple elements\n        pointerDownState.hit.allHitElements = this.getElementsAtPosition(\n          pointerDownState.origin.x,\n          pointerDownState.origin.y,\n        );\n\n        const hitElement = pointerDownState.hit.element;\n        const someHitElementIsSelected = pointerDownState.hit.allHitElements.some(\n          (element) => this.isASelectedElement(element),\n        );\n        if (\n          (hitElement === null || !someHitElementIsSelected) &&\n          !event.shiftKey &&\n          !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n        ) {\n          this.clearSelection(hitElement);\n        }\n\n        // If we click on something\n        if (hitElement != null) {\n          // on CMD/CTRL, drill down to hit element regardless of groups etc.\n          if (event[KEYS.CTRL_OR_CMD]) {\n            if (!this.state.selectedElementIds[hitElement.id]) {\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n            this.setState((prevState) => ({\n              ...editGroupForSelectedElement(prevState, hitElement),\n              previousSelectedElementIds: this.state.selectedElementIds,\n            }));\n            // mark as not completely handled so as to allow dragging etc.\n            return false;\n          }\n\n          // deselect if item is selected\n          // if shift is not clicked, this will always return true\n          // otherwise, it will trigger selection based on current\n          // state of the box\n          if (!this.state.selectedElementIds[hitElement.id]) {\n            // if we are currently editing a group, exiting editing mode and deselect the group.\n            if (\n              this.state.editingGroupId &&\n              !isElementInGroup(hitElement, this.state.editingGroupId)\n            ) {\n              this.setState({\n                selectedElementIds: {},\n                selectedGroupIds: {},\n                editingGroupId: null,\n              });\n            }\n\n            // Add hit element to selection. At this point if we're not holding\n            // SHIFT the previously selected element(s) were deselected above\n            // (make sure you use setState updater to use latest state)\n            if (\n              !someHitElementIsSelected &&\n              !pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n            ) {\n              this.setState((prevState) => {\n                return selectGroupsForSelectedElements(\n                  {\n                    ...prevState,\n                    selectedElementIds: {\n                      ...prevState.selectedElementIds,\n                      [hitElement.id]: true,\n                    },\n                  },\n                  this.scene.getElements(),\n                );\n              });\n              pointerDownState.hit.wasAddedToSelection = true;\n            }\n          }\n        }\n\n        this.setState({\n          previousSelectedElementIds: this.state.selectedElementIds,\n        });\n      }\n    }\n    return false;\n  };\n\n  private isASelectedElement(hitElement: ExcalidrawElement | null): boolean {\n    return hitElement != null && this.state.selectedElementIds[hitElement.id];\n  }\n\n  private isHittingCommonBoundingBoxOfSelectedElements(\n    point: Readonly<{ x: number; y: number }>,\n    selectedElements: readonly ExcalidrawElement[],\n  ): boolean {\n    if (selectedElements.length < 2) {\n      return false;\n    }\n\n    // How many pixels off the shape boundary we still consider a hit\n    const threshold = 10 / this.state.zoom.value;\n    const [x1, y1, x2, y2] = getCommonBounds(selectedElements);\n    return (\n      point.x > x1 - threshold &&\n      point.x < x2 + threshold &&\n      point.y > y1 - threshold &&\n      point.y < y2 + threshold\n    );\n  }\n\n  private handleTextOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    pointerDownState: PointerDownState,\n  ): void => {\n    // if we're currently still editing text, clicking outside\n    // should only finalize it, not create another (irrespective\n    // of state.elementLocked)\n    if (this.state.editingElement?.type === \"text\") {\n      return;\n    }\n\n    this.startTextEditing({\n      sceneX: pointerDownState.origin.x,\n      sceneY: pointerDownState.origin.y,\n      insertAtParentCenter: !event.altKey,\n    });\n\n    resetCursor(this.canvas);\n    if (!this.state.elementLocked) {\n      this.setState({\n        elementType: \"selection\",\n      });\n    }\n  };\n\n  private handleFreeDrawElementOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    elementType: ExcalidrawFreeDrawElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ) => {\n    // Begin a mark capture. This does not have to update state yet.\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      null,\n    );\n\n    const element = newFreeDrawElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemLinearStrokeSharpness,\n      simulatePressure: event.pressure === 0.5,\n    });\n\n    this.setState((prevState) => ({\n      selectedElementIds: {\n        ...prevState.selectedElementIds,\n        [element.id]: false,\n      },\n    }));\n\n    const pressures = element.simulatePressure\n      ? element.pressures\n      : [...element.pressures, event.pressure];\n\n    mutateElement(element, {\n      points: [[0, 0]],\n      pressures,\n    });\n\n    const boundElement = getHoveredElementForBinding(\n      pointerDownState.origin,\n      this.scene,\n    );\n    this.scene.replaceAllElements([\n      ...this.scene.getElementsIncludingDeleted(),\n      element,\n    ]);\n    this.setState({\n      draggingElement: element,\n      editingElement: element,\n      startBoundElement: boundElement,\n      suggestedBindings: [],\n    });\n  };\n\n  private handleLinearElementOnPointerDown = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n    elementType: ExcalidrawLinearElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    if (this.state.multiElement) {\n      const { multiElement } = this.state;\n\n      // finalize if completing a loop\n      if (\n        multiElement.type === \"line\" &&\n        isPathALoop(multiElement.points, this.state.zoom.value)\n      ) {\n        mutateElement(multiElement, {\n          lastCommittedPoint:\n            multiElement.points[multiElement.points.length - 1],\n        });\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      const { x: rx, y: ry, lastCommittedPoint } = multiElement;\n\n      // clicking inside commit zone → finalize arrow\n      if (\n        multiElement.points.length > 1 &&\n        lastCommittedPoint &&\n        distance2d(\n          pointerDownState.origin.x - rx,\n          pointerDownState.origin.y - ry,\n          lastCommittedPoint[0],\n          lastCommittedPoint[1],\n        ) < LINE_CONFIRM_THRESHOLD\n      ) {\n        this.actionManager.executeAction(actionFinalize);\n        return;\n      }\n\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [multiElement.id]: true,\n        },\n      }));\n      // clicking outside commit zone → update reference for last committed\n      // point\n      mutateElement(multiElement, {\n        lastCommittedPoint: multiElement.points[multiElement.points.length - 1],\n      });\n      setCursor(this.canvas, CURSOR_TYPE.POINTER);\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        this.state.gridSize,\n      );\n\n      /* If arrow is pre-arrowheads, it will have undefined for both start and end arrowheads.\n      If so, we want it to be null for start and \"arrow\" for end. If the linear item is not\n      an arrow, we want it to be null for both. Otherwise, we want it to use the\n      values from appState. */\n\n      const { currentItemStartArrowhead, currentItemEndArrowhead } = this.state;\n      const [startArrowhead, endArrowhead] =\n        elementType === \"arrow\"\n          ? [currentItemStartArrowhead, currentItemEndArrowhead]\n          : [null, null];\n\n      const element = newLinearElement({\n        type: elementType,\n        x: gridX,\n        y: gridY,\n        strokeColor: this.state.currentItemStrokeColor,\n        backgroundColor: this.state.currentItemBackgroundColor,\n        fillStyle: this.state.currentItemFillStyle,\n        strokeWidth: this.state.currentItemStrokeWidth,\n        strokeStyle: this.state.currentItemStrokeStyle,\n        roughness: this.state.currentItemRoughness,\n        opacity: this.state.currentItemOpacity,\n        strokeSharpness: this.state.currentItemLinearStrokeSharpness,\n        startArrowhead,\n        endArrowhead,\n      });\n      this.setState((prevState) => ({\n        selectedElementIds: {\n          ...prevState.selectedElementIds,\n          [element.id]: false,\n        },\n      }));\n      mutateElement(element, {\n        points: [...element.points, [0, 0]],\n      });\n      const boundElement = getHoveredElementForBinding(\n        pointerDownState.origin,\n        this.scene,\n      );\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        draggingElement: element,\n        editingElement: element,\n        startBoundElement: boundElement,\n        suggestedBindings: [],\n      });\n    }\n  };\n\n  private createGenericElementOnPointerDown = (\n    elementType: ExcalidrawGenericElement[\"type\"],\n    pointerDownState: PointerDownState,\n  ): void => {\n    const [gridX, gridY] = getGridPoint(\n      pointerDownState.origin.x,\n      pointerDownState.origin.y,\n      this.state.gridSize,\n    );\n    const element = newElement({\n      type: elementType,\n      x: gridX,\n      y: gridY,\n      strokeColor: this.state.currentItemStrokeColor,\n      backgroundColor: this.state.currentItemBackgroundColor,\n      fillStyle: this.state.currentItemFillStyle,\n      strokeWidth: this.state.currentItemStrokeWidth,\n      strokeStyle: this.state.currentItemStrokeStyle,\n      roughness: this.state.currentItemRoughness,\n      opacity: this.state.currentItemOpacity,\n      strokeSharpness: this.state.currentItemStrokeSharpness,\n    });\n\n    if (element.type === \"selection\") {\n      this.setState({\n        selectionElement: element,\n        draggingElement: element,\n      });\n    } else {\n      this.scene.replaceAllElements([\n        ...this.scene.getElementsIncludingDeleted(),\n        element,\n      ]);\n      this.setState({\n        multiElement: null,\n        draggingElement: element,\n        editingElement: element,\n      });\n    }\n  };\n\n  private onKeyDownFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onKeyUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: KeyboardEvent) => void {\n    return withBatchedUpdates((event: KeyboardEvent) => {\n      // Prevents focus from escaping excalidraw tab\n      event.key === KEYS.ALT && event.preventDefault();\n      if (this.maybeHandleResize(pointerDownState, event)) {\n        return;\n      }\n      this.maybeDragNewGenericElement(pointerDownState, event);\n    });\n  }\n\n  private onPointerMoveFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((event: PointerEvent) => {\n      // We need to initialize dragOffsetXY only after we've updated\n      // `state.selectedElementIds` on pointerDown. Doing it here in pointerMove\n      // event handler should hopefully ensure we're already working with\n      // the updated state.\n      if (pointerDownState.drag.offset === null) {\n        pointerDownState.drag.offset = tupleToCoors(\n          getDragOffsetXY(\n            getSelectedElements(this.scene.getElements(), this.state),\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ),\n        );\n      }\n\n      const target = event.target;\n      if (!(target instanceof HTMLElement)) {\n        return;\n      }\n\n      if (this.handlePointerMoveOverScrollbars(event, pointerDownState)) {\n        return;\n      }\n\n      const pointerCoords = viewportCoordsToSceneCoords(event, this.state);\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        this.state.gridSize,\n      );\n\n      // for arrows/lines, don't start dragging until a given threshold\n      // to ensure we don't create a 2-point arrow by mistake when\n      // user clicks mouse in a way that it moves a tiny bit (thus\n      // triggering pointermove)\n      if (\n        !pointerDownState.drag.hasOccurred &&\n        (this.state.elementType === \"arrow\" ||\n          this.state.elementType === \"line\")\n      ) {\n        if (\n          distance2d(\n            pointerCoords.x,\n            pointerCoords.y,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          ) < DRAGGING_THRESHOLD\n        ) {\n          return;\n        }\n      }\n\n      if (pointerDownState.resize.isResizing) {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        if (this.maybeHandleResize(pointerDownState, event)) {\n          return true;\n        }\n      }\n\n      if (this.state.editingLinearElement) {\n        const didDrag = LinearElementEditor.handlePointDragging(\n          this.state,\n          (appState) => this.setState(appState),\n          pointerCoords.x,\n          pointerCoords.y,\n          (element, startOrEnd) => {\n            this.maybeSuggestBindingForLinearElementAtCursor(\n              element,\n              startOrEnd,\n              pointerCoords,\n            );\n          },\n        );\n\n        if (didDrag) {\n          pointerDownState.lastCoords.x = pointerCoords.x;\n          pointerDownState.lastCoords.y = pointerCoords.y;\n          return;\n        }\n      }\n\n      const hasHitASelectedElement = pointerDownState.hit.allHitElements.some(\n        (element) => this.isASelectedElement(element),\n      );\n\n      if (\n        hasHitASelectedElement ||\n        pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements\n      ) {\n        // Marking that click was used for dragging to check\n        // if elements should be deselected on pointerup\n        pointerDownState.drag.hasOccurred = true;\n        const selectedElements = getSelectedElements(\n          this.scene.getElements(),\n          this.state,\n        );\n        // prevent dragging even if we're no longer holding cmd/ctrl otherwise\n        // it would have weird results (stuff jumping all over the screen)\n        if (selectedElements.length > 0 && !pointerDownState.withCmdOrCtrl) {\n          const [dragX, dragY] = getGridPoint(\n            pointerCoords.x - pointerDownState.drag.offset.x,\n            pointerCoords.y - pointerDownState.drag.offset.y,\n            this.state.gridSize,\n          );\n\n          const [dragDistanceX, dragDistanceY] = [\n            Math.abs(pointerCoords.x - pointerDownState.origin.x),\n            Math.abs(pointerCoords.y - pointerDownState.origin.y),\n          ];\n\n          // We only drag in one direction if shift is pressed\n          const lockDirection = event.shiftKey;\n\n          dragSelectedElements(\n            pointerDownState,\n            selectedElements,\n            dragX,\n            dragY,\n            this.scene,\n            lockDirection,\n            dragDistanceX,\n            dragDistanceY,\n          );\n          this.maybeSuggestBindingForAll(selectedElements);\n\n          // We duplicate the selected element if alt is pressed on pointer move\n          if (event.altKey && !pointerDownState.hit.hasBeenDuplicated) {\n            // Move the currently selected elements to the top of the z index stack, and\n            // put the duplicates where the selected elements used to be.\n            // (the origin point where the dragging started)\n\n            pointerDownState.hit.hasBeenDuplicated = true;\n\n            const nextElements = [];\n            const elementsToAppend = [];\n            const groupIdMap = new Map();\n            const oldIdToDuplicatedId = new Map();\n            const hitElement = pointerDownState.hit.element;\n            for (const element of this.scene.getElementsIncludingDeleted()) {\n              if (\n                this.state.selectedElementIds[element.id] ||\n                // case: the state.selectedElementIds might not have been\n                // updated yet by the time this mousemove event is fired\n                (element.id === hitElement?.id &&\n                  pointerDownState.hit.wasAddedToSelection)\n              ) {\n                const duplicatedElement = duplicateElement(\n                  this.state.editingGroupId,\n                  groupIdMap,\n                  element,\n                );\n                const [originDragX, originDragY] = getGridPoint(\n                  pointerDownState.origin.x - pointerDownState.drag.offset.x,\n                  pointerDownState.origin.y - pointerDownState.drag.offset.y,\n                  this.state.gridSize,\n                );\n                mutateElement(duplicatedElement, {\n                  x: duplicatedElement.x + (originDragX - dragX),\n                  y: duplicatedElement.y + (originDragY - dragY),\n                });\n                nextElements.push(duplicatedElement);\n                elementsToAppend.push(element);\n                oldIdToDuplicatedId.set(element.id, duplicatedElement.id);\n              } else {\n                nextElements.push(element);\n              }\n            }\n            const nextSceneElements = [...nextElements, ...elementsToAppend];\n            fixBindingsAfterDuplication(\n              nextSceneElements,\n              elementsToAppend,\n              oldIdToDuplicatedId,\n              \"duplicatesServeAsOld\",\n            );\n            this.scene.replaceAllElements(nextSceneElements);\n          }\n          return;\n        }\n      }\n\n      // It is very important to read this.state within each move event,\n      // otherwise we would read a stale one!\n      const draggingElement = this.state.draggingElement;\n      if (!draggingElement) {\n        return;\n      }\n\n      if (draggingElement.type === \"freedraw\") {\n        const points = draggingElement.points;\n        const dx = pointerCoords.x - draggingElement.x;\n        const dy = pointerCoords.y - draggingElement.y;\n\n        const pressures = draggingElement.simulatePressure\n          ? draggingElement.pressures\n          : [...draggingElement.pressures, event.pressure];\n\n        mutateElement(draggingElement, {\n          points: [...points, [dx, dy]],\n          pressures,\n        });\n      } else if (isLinearElement(draggingElement)) {\n        pointerDownState.drag.hasOccurred = true;\n        const points = draggingElement.points;\n        let dx = gridX - draggingElement.x;\n        let dy = gridY - draggingElement.y;\n\n        if (getRotateWithDiscreteAngleKey(event) && points.length === 2) {\n          ({ width: dx, height: dy } = getPerfectElementSize(\n            this.state.elementType,\n            dx,\n            dy,\n          ));\n        }\n\n        if (points.length === 1) {\n          mutateElement(draggingElement, { points: [...points, [dx, dy]] });\n        } else if (points.length > 1) {\n          mutateElement(draggingElement, {\n            points: [...points.slice(0, -1), [dx, dy]],\n          });\n        }\n\n        if (isBindingElement(draggingElement)) {\n          // When creating a linear element by dragging\n          this.maybeSuggestBindingForLinearElementAtCursor(\n            draggingElement,\n            \"end\",\n            pointerCoords,\n            this.state.startBoundElement,\n          );\n        }\n      } else {\n        pointerDownState.lastCoords.x = pointerCoords.x;\n        pointerDownState.lastCoords.y = pointerCoords.y;\n        this.maybeDragNewGenericElement(pointerDownState, event);\n      }\n\n      if (this.state.elementType === \"selection\") {\n        const elements = this.scene.getElements();\n        if (!event.shiftKey && isSomeElementSelected(elements, this.state)) {\n          if (pointerDownState.withCmdOrCtrl && pointerDownState.hit.element) {\n            this.setState((prevState) =>\n              selectGroupsForSelectedElements(\n                {\n                  ...prevState,\n                  selectedElementIds: {\n                    [pointerDownState.hit.element!.id]: true,\n                  },\n                },\n                this.scene.getElements(),\n              ),\n            );\n          } else {\n            this.setState({\n              selectedElementIds: {},\n              selectedGroupIds: {},\n              editingGroupId: null,\n            });\n          }\n        }\n        const elementsWithinSelection = getElementsWithinSelection(\n          elements,\n          draggingElement,\n        );\n        this.setState((prevState) =>\n          selectGroupsForSelectedElements(\n            {\n              ...prevState,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                ...elementsWithinSelection.reduce((map, element) => {\n                  map[element.id] = true;\n                  return map;\n                }, {} as any),\n                ...(pointerDownState.hit.element\n                  ? {\n                      // if using ctrl/cmd, select the hitElement only if we\n                      // haven't box-selected anything else\n                      [pointerDownState.hit.element\n                        .id]: !elementsWithinSelection.length,\n                    }\n                  : null),\n              },\n            },\n            this.scene.getElements(),\n          ),\n        );\n      }\n    });\n  }\n\n  // Returns whether the pointer move happened over either scrollbar\n  private handlePointerMoveOverScrollbars(\n    event: PointerEvent,\n    pointerDownState: PointerDownState,\n  ): boolean {\n    if (pointerDownState.scrollbars.isOverHorizontal) {\n      const x = event.clientX;\n      const dx = x - pointerDownState.lastCoords.x;\n      this.setState({\n        scrollX: this.state.scrollX - dx / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.x = x;\n      return true;\n    }\n\n    if (pointerDownState.scrollbars.isOverVertical) {\n      const y = event.clientY;\n      const dy = y - pointerDownState.lastCoords.y;\n      this.setState({\n        scrollY: this.state.scrollY - dy / this.state.zoom.value,\n      });\n      pointerDownState.lastCoords.y = y;\n      return true;\n    }\n    return false;\n  }\n\n  private onPointerUpFromPointerDownHandler(\n    pointerDownState: PointerDownState,\n  ): (event: PointerEvent) => void {\n    return withBatchedUpdates((childEvent: PointerEvent) => {\n      const {\n        draggingElement,\n        resizingElement,\n        multiElement,\n        elementType,\n        elementLocked,\n        isResizing,\n        isRotating,\n      } = this.state;\n\n      this.setState({\n        isResizing: false,\n        isRotating: false,\n        resizingElement: null,\n        selectionElement: null,\n        cursorButton: \"up\",\n        // text elements are reset on finalize, and resetting on pointerup\n        // may cause issues with double taps\n        editingElement:\n          multiElement || isTextElement(this.state.editingElement)\n            ? this.state.editingElement\n            : null,\n      });\n\n      this.savePointer(childEvent.clientX, childEvent.clientY, \"up\");\n\n      // Handle end of dragging a point of a linear element, might close a loop\n      // and sets binding element\n      if (this.state.editingLinearElement) {\n        const editingLinearElement = LinearElementEditor.handlePointerUp(\n          childEvent,\n          this.state.editingLinearElement,\n          this.state,\n        );\n        if (editingLinearElement !== this.state.editingLinearElement) {\n          this.setState({\n            editingLinearElement,\n            suggestedBindings: [],\n          });\n        }\n      }\n\n      lastPointerUp = null;\n\n      window.removeEventListener(\n        EVENT.POINTER_MOVE,\n        pointerDownState.eventListeners.onMove!,\n      );\n      window.removeEventListener(\n        EVENT.POINTER_UP,\n        pointerDownState.eventListeners.onUp!,\n      );\n      window.removeEventListener(\n        EVENT.KEYDOWN,\n        pointerDownState.eventListeners.onKeyDown!,\n      );\n      window.removeEventListener(\n        EVENT.KEYUP,\n        pointerDownState.eventListeners.onKeyUp!,\n      );\n\n      if (draggingElement?.type === \"freedraw\") {\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        const points = draggingElement.points;\n        let dx = pointerCoords.x - draggingElement.x;\n        let dy = pointerCoords.y - draggingElement.y;\n\n        // Allows dots to avoid being flagged as infinitely small\n        if (dx === points[0][0] && dy === points[0][1]) {\n          dy += 0.0001;\n          dx += 0.0001;\n        }\n\n        const pressures = draggingElement.simulatePressure\n          ? []\n          : [...draggingElement.pressures, childEvent.pressure];\n\n        mutateElement(draggingElement, {\n          points: [...points, [dx, dy]],\n          pressures,\n        });\n\n        this.actionManager.executeAction(actionFinalize);\n\n        return;\n      }\n\n      if (isLinearElement(draggingElement)) {\n        if (draggingElement!.points.length > 1) {\n          this.history.resumeRecording();\n        }\n        const pointerCoords = viewportCoordsToSceneCoords(\n          childEvent,\n          this.state,\n        );\n\n        if (\n          !pointerDownState.drag.hasOccurred &&\n          draggingElement &&\n          !multiElement\n        ) {\n          mutateElement(draggingElement, {\n            points: [\n              ...draggingElement.points,\n              [\n                pointerCoords.x - draggingElement.x,\n                pointerCoords.y - draggingElement.y,\n              ],\n            ],\n          });\n          this.setState({\n            multiElement: draggingElement,\n            editingElement: this.state.draggingElement,\n          });\n        } else if (pointerDownState.drag.hasOccurred && !multiElement) {\n          if (\n            isBindingEnabled(this.state) &&\n            isBindingElement(draggingElement)\n          ) {\n            maybeBindLinearElement(\n              draggingElement,\n              this.state,\n              this.scene,\n              pointerCoords,\n            );\n          }\n          this.setState({ suggestedBindings: [], startBoundElement: null });\n          if (!elementLocked) {\n            resetCursor(this.canvas);\n            this.setState((prevState) => ({\n              draggingElement: null,\n              elementType: \"selection\",\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          } else {\n            this.setState((prevState) => ({\n              draggingElement: null,\n              selectedElementIds: {\n                ...prevState.selectedElementIds,\n                [this.state.draggingElement!.id]: true,\n              },\n            }));\n          }\n        }\n        return;\n      }\n\n      if (\n        elementType !== \"selection\" &&\n        draggingElement &&\n        isInvisiblySmallElement(draggingElement)\n      ) {\n        // remove invisible element which was added in onPointerDown\n        this.scene.replaceAllElements(\n          this.scene.getElementsIncludingDeleted().slice(0, -1),\n        );\n        this.setState({\n          draggingElement: null,\n        });\n        return;\n      }\n\n      if (draggingElement) {\n        mutateElement(\n          draggingElement,\n          getNormalizedDimensions(draggingElement),\n        );\n      }\n\n      if (resizingElement) {\n        this.history.resumeRecording();\n      }\n\n      if (resizingElement && isInvisiblySmallElement(resizingElement)) {\n        this.scene.replaceAllElements(\n          this.scene\n            .getElementsIncludingDeleted()\n            .filter((el) => el.id !== resizingElement.id),\n        );\n      }\n\n      // Code below handles selection when element(s) weren't\n      // drag or added to selection on pointer down phase.\n      const hitElement = pointerDownState.hit.element;\n      if (\n        hitElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !pointerDownState.hit.wasAddedToSelection\n      ) {\n        if (childEvent.shiftKey) {\n          if (this.state.selectedElementIds[hitElement.id]) {\n            if (isSelectedViaGroup(this.state, hitElement)) {\n              // We want to unselect all groups hitElement is part of\n              // as well as all elements that are part of the groups\n              // hitElement is part of\n              const idsOfSelectedElementsThatAreInGroups = hitElement.groupIds\n                .flatMap((groupId) =>\n                  getElementsInGroup(this.scene.getElements(), groupId),\n                )\n                .map((element) => ({ [element.id]: false }))\n                .reduce((prevId, acc) => ({ ...prevId, ...acc }), {});\n\n              this.setState((_prevState) => ({\n                selectedGroupIds: {\n                  ..._prevState.selectedElementIds,\n                  ...hitElement.groupIds\n                    .map((gId) => ({ [gId]: false }))\n                    .reduce((prev, acc) => ({ ...prev, ...acc }), {}),\n                },\n                selectedElementIds: {\n                  ..._prevState.selectedElementIds,\n                  ...idsOfSelectedElementsThatAreInGroups,\n                },\n              }));\n            } else {\n              // remove element from selection while\n              // keeping prev elements selected\n              this.setState((prevState) =>\n                selectGroupsForSelectedElements(\n                  {\n                    ...prevState,\n                    selectedElementIds: {\n                      ...prevState.selectedElementIds,\n                      [hitElement!.id]: false,\n                    },\n                  },\n                  this.scene.getElements(),\n                ),\n              );\n            }\n          } else {\n            // add element to selection while\n            // keeping prev elements selected\n            this.setState((_prevState) => ({\n              selectedElementIds: {\n                ..._prevState.selectedElementIds,\n                [hitElement!.id]: true,\n              },\n            }));\n          }\n        } else {\n          this.setState((prevState) => ({\n            ...selectGroupsForSelectedElements(\n              {\n                ...prevState,\n                selectedElementIds: { [hitElement.id]: true },\n              },\n              this.scene.getElements(),\n            ),\n          }));\n        }\n      }\n\n      if (\n        !this.state.editingLinearElement &&\n        !pointerDownState.drag.hasOccurred &&\n        !this.state.isResizing &&\n        ((hitElement &&\n          isHittingElementBoundingBoxWithoutHittingElement(\n            hitElement,\n            this.state,\n            pointerDownState.origin.x,\n            pointerDownState.origin.y,\n          )) ||\n          (!hitElement &&\n            pointerDownState.hit.hasHitCommonBoundingBoxOfSelectedElements))\n      ) {\n        // Deselect selected elements\n        this.setState({\n          selectedElementIds: {},\n          selectedGroupIds: {},\n          editingGroupId: null,\n        });\n\n        return;\n      }\n\n      if (!elementLocked && elementType !== \"freedraw\" && draggingElement) {\n        this.setState((prevState) => ({\n          selectedElementIds: {\n            ...prevState.selectedElementIds,\n            [draggingElement.id]: true,\n          },\n        }));\n      }\n\n      if (\n        elementType !== \"selection\" ||\n        isSomeElementSelected(this.scene.getElements(), this.state)\n      ) {\n        this.history.resumeRecording();\n      }\n\n      if (pointerDownState.drag.hasOccurred || isResizing || isRotating) {\n        (isBindingEnabled(this.state)\n          ? bindOrUnbindSelectedElements\n          : unbindLinearElements)(\n          getSelectedElements(this.scene.getElements(), this.state),\n        );\n      }\n\n      if (!elementLocked && elementType !== \"freedraw\") {\n        resetCursor(this.canvas);\n        this.setState({\n          draggingElement: null,\n          suggestedBindings: [],\n          elementType: \"selection\",\n        });\n      } else {\n        this.setState({\n          draggingElement: null,\n          suggestedBindings: [],\n        });\n      }\n    });\n  }\n\n  private updateBindingEnabledOnPointerMove = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    const shouldEnableBinding = shouldEnableBindingForPointerEvent(event);\n    if (this.state.isBindingEnabled !== shouldEnableBinding) {\n      this.setState({ isBindingEnabled: shouldEnableBinding });\n    }\n  };\n\n  private maybeSuggestBindingAtCursor = (pointerCoords: {\n    x: number;\n    y: number;\n  }): void => {\n    const hoveredBindableElement = getHoveredElementForBinding(\n      pointerCoords,\n      this.scene,\n    );\n    this.setState({\n      suggestedBindings:\n        hoveredBindableElement != null ? [hoveredBindableElement] : [],\n    });\n  };\n\n  private maybeSuggestBindingForLinearElementAtCursor = (\n    linearElement: NonDeleted<ExcalidrawLinearElement>,\n    startOrEnd: \"start\" | \"end\",\n    pointerCoords: {\n      x: number;\n      y: number;\n    },\n    // During line creation the start binding hasn't been written yet\n    // into `linearElement`\n    oppositeBindingBoundElement?: ExcalidrawBindableElement | null,\n  ): void => {\n    const hoveredBindableElement = getHoveredElementForBinding(\n      pointerCoords,\n      this.scene,\n    );\n    this.setState({\n      suggestedBindings:\n        hoveredBindableElement != null &&\n        !isLinearElementSimpleAndAlreadyBound(\n          linearElement,\n          oppositeBindingBoundElement?.id,\n          hoveredBindableElement,\n        )\n          ? [hoveredBindableElement]\n          : [],\n    });\n  };\n\n  private maybeSuggestBindingForAll(\n    selectedElements: NonDeleted<ExcalidrawElement>[],\n  ): void {\n    const suggestedBindings = getEligibleElementsForBinding(selectedElements);\n    this.setState({ suggestedBindings });\n  }\n\n  private clearSelection(hitElement: ExcalidrawElement | null): void {\n    this.setState((prevState) => ({\n      selectedElementIds: {},\n      selectedGroupIds: {},\n      // Continue editing the same group if the user selected a different\n      // element from it\n      editingGroupId:\n        prevState.editingGroupId &&\n        hitElement != null &&\n        isElementInGroup(hitElement, prevState.editingGroupId)\n          ? prevState.editingGroupId\n          : null,\n    }));\n    this.setState({\n      selectedElementIds: {},\n      previousSelectedElementIds: this.state.selectedElementIds,\n    });\n  }\n\n  private handleCanvasRef = (canvas: HTMLCanvasElement) => {\n    // canvas is null when unmounting\n    if (canvas !== null) {\n      this.canvas = canvas;\n      this.rc = rough.canvas(this.canvas);\n\n      this.canvas.addEventListener(EVENT.WHEEL, this.handleWheel, {\n        passive: false,\n      });\n      this.canvas.addEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas.addEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    } else {\n      this.canvas?.removeEventListener(EVENT.WHEEL, this.handleWheel);\n      this.canvas?.removeEventListener(EVENT.TOUCH_START, this.onTapStart);\n      this.canvas?.removeEventListener(EVENT.TOUCH_END, this.onTapEnd);\n    }\n  };\n\n  private handleAppOnDrop = async (event: React.DragEvent<HTMLDivElement>) => {\n    try {\n      const file = event.dataTransfer.files[0];\n      if (file?.type === \"image/png\" || file?.type === \"image/svg+xml\") {\n        if (fsSupported) {\n          try {\n            // This will only work as of Chrome 86,\n            // but can be safely ignored on older releases.\n            const item = event.dataTransfer.items[0];\n            (file as any).handle = await (item as any).getAsFileSystemHandle();\n          } catch (error) {\n            console.warn(error.name, error.message);\n          }\n        }\n\n        const { elements, appState } = await loadFromBlob(\n          file,\n          this.state,\n          this.scene.getElementsIncludingDeleted(),\n        );\n        this.syncActionResult({\n          elements,\n          appState: {\n            ...(appState || this.state),\n            isLoading: false,\n          },\n          commitToHistory: true,\n        });\n        return;\n      }\n    } catch (error) {\n      return this.setState({\n        isLoading: false,\n        errorMessage: error.message,\n      });\n    }\n\n    const libraryShapes = event.dataTransfer.getData(MIME_TYPES.excalidrawlib);\n    if (libraryShapes !== \"\") {\n      this.addElementsFromPasteOrLibrary({\n        elements: JSON.parse(libraryShapes),\n        position: event,\n      });\n      return;\n    }\n\n    const file = event.dataTransfer?.files[0];\n    if (\n      file?.type === MIME_TYPES.excalidrawlib ||\n      file?.name?.endsWith(\".excalidrawlib\")\n    ) {\n      this.library\n        .importLibrary(file)\n        .then(() => {\n          // Close and then open to get the libraries updated\n          this.setState({ isLibraryOpen: false });\n          this.setState({ isLibraryOpen: true });\n        })\n        .catch((error) =>\n          this.setState({ isLoading: false, errorMessage: error.message }),\n        );\n      // default: assume an Excalidraw file regardless of extension/MimeType\n    } else {\n      this.setState({ isLoading: true });\n      if (fsSupported) {\n        try {\n          // This will only work as of Chrome 86,\n          // but can be safely ignored on older releases.\n          const item = event.dataTransfer.items[0];\n          (file as any).handle = await (item as any).getAsFileSystemHandle();\n        } catch (error) {\n          console.warn(error.name, error.message);\n        }\n      }\n      await this.loadFileToCanvas(file);\n    }\n  };\n\n  loadFileToCanvas = (file: Blob) => {\n    loadFromBlob(file, this.state, this.scene.getElementsIncludingDeleted())\n      .then(({ elements, appState }) =>\n        this.syncActionResult({\n          elements,\n          appState: {\n            ...(appState || this.state),\n            isLoading: false,\n          },\n          commitToHistory: true,\n        }),\n      )\n      .catch((error) => {\n        this.setState({ isLoading: false, errorMessage: error.message });\n      });\n  };\n\n  private handleCanvasContextMenu = (\n    event: React.PointerEvent<HTMLCanvasElement>,\n  ) => {\n    event.preventDefault();\n\n    const { x, y } = viewportCoordsToSceneCoords(event, this.state);\n    const element = this.getElementAtPosition(x, y, { preferSelected: true });\n\n    const type = element ? \"element\" : \"canvas\";\n\n    const container = this.excalidrawContainerRef.current!;\n    const {\n      top: offsetTop,\n      left: offsetLeft,\n    } = container.getBoundingClientRect();\n    const left = event.clientX - offsetLeft;\n    const top = event.clientY - offsetTop;\n\n    if (element && !this.state.selectedElementIds[element.id]) {\n      this.setState({ selectedElementIds: { [element.id]: true } }, () => {\n        this._openContextMenu({ top, left }, type);\n      });\n    } else {\n      this._openContextMenu({ top, left }, type);\n    }\n  };\n\n  private maybeDragNewGenericElement = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): void => {\n    const draggingElement = this.state.draggingElement;\n    const pointerCoords = pointerDownState.lastCoords;\n    if (!draggingElement) {\n      return;\n    }\n    if (draggingElement.type === \"selection\") {\n      dragNewElement(\n        draggingElement,\n        this.state.elementType,\n        pointerDownState.origin.x,\n        pointerDownState.origin.y,\n        pointerCoords.x,\n        pointerCoords.y,\n        distance(pointerDownState.origin.x, pointerCoords.x),\n        distance(pointerDownState.origin.y, pointerCoords.y),\n        getResizeWithSidesSameLengthKey(event),\n        getResizeCenterPointKey(event),\n      );\n    } else {\n      const [gridX, gridY] = getGridPoint(\n        pointerCoords.x,\n        pointerCoords.y,\n        this.state.gridSize,\n      );\n      dragNewElement(\n        draggingElement,\n        this.state.elementType,\n        pointerDownState.originInGrid.x,\n        pointerDownState.originInGrid.y,\n        gridX,\n        gridY,\n        distance(pointerDownState.originInGrid.x, gridX),\n        distance(pointerDownState.originInGrid.y, gridY),\n        getResizeWithSidesSameLengthKey(event),\n        getResizeCenterPointKey(event),\n      );\n      this.maybeSuggestBindingForAll([draggingElement]);\n    }\n  };\n\n  private maybeHandleResize = (\n    pointerDownState: PointerDownState,\n    event: MouseEvent | KeyboardEvent,\n  ): boolean => {\n    const selectedElements = getSelectedElements(\n      this.scene.getElements(),\n      this.state,\n    );\n    const transformHandleType = pointerDownState.resize.handleType;\n    this.setState({\n      // TODO: rename this state field to \"isScaling\" to distinguish\n      // it from the generic \"isResizing\" which includes scaling and\n      // rotating\n      isResizing: transformHandleType && transformHandleType !== \"rotation\",\n      isRotating: transformHandleType === \"rotation\",\n    });\n    const pointerCoords = pointerDownState.lastCoords;\n    const [resizeX, resizeY] = getGridPoint(\n      pointerCoords.x - pointerDownState.resize.offset.x,\n      pointerCoords.y - pointerDownState.resize.offset.y,\n      this.state.gridSize,\n    );\n    if (\n      transformElements(\n        pointerDownState,\n        transformHandleType,\n        selectedElements,\n        pointerDownState.resize.arrowDirection,\n        getRotateWithDiscreteAngleKey(event),\n        getResizeCenterPointKey(event),\n        getResizeWithSidesSameLengthKey(event),\n        resizeX,\n        resizeY,\n        pointerDownState.resize.center.x,\n        pointerDownState.resize.center.y,\n      )\n    ) {\n      this.maybeSuggestBindingForAll(selectedElements);\n      return true;\n    }\n    return false;\n  };\n\n  /** @private use this.handleCanvasContextMenu */\n  private _openContextMenu = (\n    {\n      left,\n      top,\n    }: {\n      left: number;\n      top: number;\n    },\n    type: \"canvas\" | \"element\",\n  ) => {\n    const maybeGroupAction = actionGroup.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeUngroupAction = actionUngroup.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeFlipHorizontal = actionFlipHorizontal.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const maybeFlipVertical = actionFlipVertical.contextItemPredicate!(\n      this.actionManager.getElementsIncludingDeleted(),\n      this.actionManager.getAppState(),\n    );\n\n    const separator = \"separator\";\n\n    const elements = this.scene.getElements();\n\n    const options: ContextMenuOption[] = [];\n    if (probablySupportsClipboardBlob && elements.length > 0) {\n      options.push(actionCopyAsPng);\n    }\n\n    if (probablySupportsClipboardWriteText && elements.length > 0) {\n      options.push(actionCopyAsSvg);\n    }\n    if (type === \"canvas\") {\n      const viewModeOptions = [\n        ...options,\n        typeof this.props.gridModeEnabled === \"undefined\" &&\n          actionToggleGridMode,\n        typeof this.props.zenModeEnabled === \"undefined\" && actionToggleZenMode,\n        typeof this.props.viewModeEnabled === \"undefined\" &&\n          actionToggleViewMode,\n        actionToggleStats,\n      ];\n\n      ContextMenu.push({\n        options: viewModeOptions,\n        top,\n        left,\n        actionManager: this.actionManager,\n        appState: this.state,\n        container: this.excalidrawContainerRef.current!,\n      });\n\n      if (this.state.viewModeEnabled) {\n        return;\n      }\n\n      ContextMenu.push({\n        options: [\n          this.isMobile &&\n            navigator.clipboard && {\n              name: \"paste\",\n              perform: (elements, appStates) => {\n                this.pasteFromClipboard(null);\n                return {\n                  commitToHistory: false,\n                };\n              },\n              contextItemLabel: \"labels.paste\",\n            },\n          this.isMobile && navigator.clipboard && separator,\n          probablySupportsClipboardBlob &&\n            elements.length > 0 &&\n            actionCopyAsPng,\n          probablySupportsClipboardWriteText &&\n            elements.length > 0 &&\n            actionCopyAsSvg,\n          ((probablySupportsClipboardBlob && elements.length > 0) ||\n            (probablySupportsClipboardWriteText && elements.length > 0)) &&\n            separator,\n          actionSelectAll,\n          separator,\n          typeof this.props.gridModeEnabled === \"undefined\" &&\n            actionToggleGridMode,\n          typeof this.props.zenModeEnabled === \"undefined\" &&\n            actionToggleZenMode,\n          typeof this.props.viewModeEnabled === \"undefined\" &&\n            actionToggleViewMode,\n          actionToggleStats,\n        ],\n        top,\n        left,\n        actionManager: this.actionManager,\n        appState: this.state,\n        container: this.excalidrawContainerRef.current!,\n      });\n      return;\n    }\n\n    if (this.state.viewModeEnabled) {\n      ContextMenu.push({\n        options: [navigator.clipboard && actionCopy, ...options],\n        top,\n        left,\n        actionManager: this.actionManager,\n        appState: this.state,\n        container: this.excalidrawContainerRef.current!,\n      });\n      return;\n    }\n\n    ContextMenu.push({\n      options: [\n        this.isMobile && actionCut,\n        this.isMobile && navigator.clipboard && actionCopy,\n        this.isMobile &&\n          navigator.clipboard && {\n            name: \"paste\",\n            perform: (elements, appStates) => {\n              this.pasteFromClipboard(null);\n              return {\n                commitToHistory: false,\n              };\n            },\n            contextItemLabel: \"labels.paste\",\n          },\n        this.isMobile && separator,\n        ...options,\n        separator,\n        actionCopyStyles,\n        actionPasteStyles,\n        separator,\n        maybeGroupAction && actionGroup,\n        maybeUngroupAction && actionUngroup,\n        (maybeGroupAction || maybeUngroupAction) && separator,\n        actionAddToLibrary,\n        separator,\n        actionSendBackward,\n        actionBringForward,\n        actionSendToBack,\n        actionBringToFront,\n        separator,\n        maybeFlipHorizontal && actionFlipHorizontal,\n        maybeFlipVertical && actionFlipVertical,\n        (maybeFlipHorizontal || maybeFlipVertical) && separator,\n        actionDuplicateSelection,\n        actionDeleteSelected,\n      ],\n      top,\n      left,\n      actionManager: this.actionManager,\n      appState: this.state,\n      container: this.excalidrawContainerRef.current!,\n    });\n  };\n\n  private handleWheel = withBatchedUpdates((event: WheelEvent) => {\n    event.preventDefault();\n\n    if (isPanning) {\n      return;\n    }\n\n    const { deltaX, deltaY } = event;\n    const { selectedElementIds, previousSelectedElementIds } = this.state;\n    // note that event.ctrlKey is necessary to handle pinch zooming\n    if (event.metaKey || event.ctrlKey) {\n      const sign = Math.sign(deltaY);\n      const MAX_STEP = 10;\n      let delta = Math.abs(deltaY);\n      if (delta > MAX_STEP) {\n        delta = MAX_STEP;\n      }\n      delta *= sign;\n      if (Object.keys(previousSelectedElementIds).length !== 0) {\n        setTimeout(() => {\n          this.setState({\n            selectedElementIds: previousSelectedElementIds,\n            previousSelectedElementIds: {},\n          });\n        }, 1000);\n      }\n\n      let newZoom = this.state.zoom.value - delta / 100;\n      // increase zoom steps the more zoomed-in we are (applies to >100% only)\n      newZoom += Math.log10(Math.max(1, this.state.zoom.value)) * -sign;\n      // round to nearest step\n      newZoom = Math.round(newZoom * ZOOM_STEP * 100) / (ZOOM_STEP * 100);\n\n      this.setState(({ zoom, offsetLeft, offsetTop }) => ({\n        zoom: getNewZoom(\n          getNormalizedZoom(newZoom),\n          zoom,\n          { left: offsetLeft, top: offsetTop },\n          {\n            x: cursorX,\n            y: cursorY,\n          },\n        ),\n        selectedElementIds: {},\n        previousSelectedElementIds:\n          Object.keys(selectedElementIds).length !== 0\n            ? selectedElementIds\n            : previousSelectedElementIds,\n        shouldCacheIgnoreZoom: true,\n      }));\n      this.resetShouldCacheIgnoreZoomDebounced();\n      return;\n    }\n\n    // scroll horizontally when shift pressed\n    if (event.shiftKey) {\n      this.setState(({ zoom, scrollX }) => ({\n        // on Mac, shift+wheel tends to result in deltaX\n        scrollX: scrollX - (deltaY || deltaX) / zoom.value,\n      }));\n      return;\n    }\n\n    this.setState(({ zoom, scrollX, scrollY }) => ({\n      scrollX: scrollX - deltaX / zoom.value,\n      scrollY: scrollY - deltaY / zoom.value,\n    }));\n  });\n\n  private getTextWysiwygSnappedToCenterPosition(\n    x: number,\n    y: number,\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n    scale: number,\n  ) {\n    const elementClickedInside = getElementContainingPosition(\n      this.scene\n        .getElementsIncludingDeleted()\n        .filter((element) => !isTextElement(element)),\n      x,\n      y,\n    );\n    if (elementClickedInside) {\n      const elementCenterX =\n        elementClickedInside.x + elementClickedInside.width / 2;\n      const elementCenterY =\n        elementClickedInside.y + elementClickedInside.height / 2;\n      const distanceToCenter = Math.hypot(\n        x - elementCenterX,\n        y - elementCenterY,\n      );\n      const isSnappedToCenter =\n        distanceToCenter < TEXT_TO_CENTER_SNAP_THRESHOLD;\n      if (isSnappedToCenter) {\n        const { x: viewportX, y: viewportY } = sceneCoordsToViewportCoords(\n          { sceneX: elementCenterX, sceneY: elementCenterY },\n          appState,\n        );\n        return { viewportX, viewportY, elementCenterX, elementCenterY };\n      }\n    }\n  }\n\n  private savePointer = (x: number, y: number, button: \"up\" | \"down\") => {\n    if (!x || !y) {\n      return;\n    }\n    const pointer = viewportCoordsToSceneCoords(\n      { clientX: x, clientY: y },\n      this.state,\n    );\n\n    if (isNaN(pointer.x) || isNaN(pointer.y)) {\n      // sometimes the pointer goes off screen\n    }\n\n    this.props.onPointerUpdate?.({\n      pointer,\n      button,\n      pointersMap: gesture.pointers,\n    });\n  };\n\n  private resetShouldCacheIgnoreZoomDebounced = debounce(() => {\n    if (!this.unmounted) {\n      this.setState({ shouldCacheIgnoreZoom: false });\n    }\n  }, 300);\n\n  private updateDOMRect = (cb?: () => void) => {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const {\n        width,\n        height,\n        left: offsetLeft,\n        top: offsetTop,\n      } = excalidrawContainer.getBoundingClientRect();\n      const {\n        width: currentWidth,\n        height: currentHeight,\n        offsetTop: currentOffsetTop,\n        offsetLeft: currentOffsetLeft,\n      } = this.state;\n\n      if (\n        width === currentWidth &&\n        height === currentHeight &&\n        offsetLeft === currentOffsetLeft &&\n        offsetTop === currentOffsetTop\n      ) {\n        if (cb) {\n          cb();\n        }\n        return;\n      }\n\n      this.setState(\n        {\n          width,\n          height,\n          offsetLeft,\n          offsetTop,\n        },\n        () => {\n          cb && cb();\n        },\n      );\n    }\n  };\n\n  public refresh = () => {\n    this.setState({ ...this.getCanvasOffsets() });\n  };\n\n  private getCanvasOffsets(): Pick<AppState, \"offsetTop\" | \"offsetLeft\"> {\n    if (this.excalidrawContainerRef?.current) {\n      const excalidrawContainer = this.excalidrawContainerRef.current;\n      const { left, top } = excalidrawContainer.getBoundingClientRect();\n      return {\n        offsetLeft: left,\n        offsetTop: top,\n      };\n    }\n    return {\n      offsetLeft: 0,\n      offsetTop: 0,\n    };\n  }\n\n  private async updateLanguage() {\n    const currentLang =\n      languages.find((lang) => lang.code === this.props.langCode) ||\n      defaultLang;\n    await setLanguage(currentLang);\n    this.setAppState({});\n  }\n}\n\n// -----------------------------------------------------------------------------\n// TEST HOOKS\n// -----------------------------------------------------------------------------\n\ndeclare global {\n  interface Window {\n    h: {\n      elements: readonly ExcalidrawElement[];\n      state: AppState;\n      setState: React.Component<any, AppState>[\"setState\"];\n      app: InstanceType<typeof App>;\n      history: History;\n    };\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.h = window.h || ({} as Window[\"h\"]);\n\n  Object.defineProperties(window.h, {\n    elements: {\n      configurable: true,\n      get() {\n        return this.app.scene.getElementsIncludingDeleted();\n      },\n      set(elements: ExcalidrawElement[]) {\n        return this.app.scene.replaceAllElements(elements);\n      },\n    },\n  });\n}\nexport default App;\n","import \"./Modal.scss\";\n\nimport React, { useState, useLayoutEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport clsx from \"clsx\";\nimport { KEYS } from \"../keys\";\nimport { useExcalidrawContainer, useIsMobile } from \"./App\";\nimport { AppState } from \"../types\";\n\nexport const Modal = (props: {\n  className?: string;\n  children: React.ReactNode;\n  maxWidth?: number;\n  onCloseRequest(): void;\n  labelledBy: string;\n  theme?: AppState[\"theme\"];\n}) => {\n  const { theme = \"light\" } = props;\n  const modalRoot = useBodyRoot(theme);\n\n  if (!modalRoot) {\n    return null;\n  }\n\n  const handleKeydown = (event: React.KeyboardEvent) => {\n    if (event.key === KEYS.ESCAPE) {\n      event.nativeEvent.stopImmediatePropagation();\n      event.stopPropagation();\n      props.onCloseRequest();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={clsx(\"Modal\", props.className)}\n      role=\"dialog\"\n      aria-modal=\"true\"\n      onKeyDown={handleKeydown}\n      aria-labelledby={props.labelledBy}\n    >\n      <div className=\"Modal__background\" onClick={props.onCloseRequest}></div>\n      <div\n        className=\"Modal__content\"\n        style={{ \"--max-width\": `${props.maxWidth}px` }}\n        tabIndex={0}\n      >\n        {props.children}\n      </div>\n    </div>,\n    modalRoot,\n  );\n};\n\nconst useBodyRoot = (theme: AppState[\"theme\"]) => {\n  const [div, setDiv] = useState<HTMLDivElement | null>(null);\n\n  const isMobile = useIsMobile();\n  const isMobileRef = useRef(isMobile);\n  isMobileRef.current = isMobile;\n\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  useLayoutEffect(() => {\n    if (div) {\n      div.classList.toggle(\"excalidraw--mobile\", isMobile);\n    }\n  }, [div, isMobile]);\n\n  useLayoutEffect(() => {\n    const isDarkTheme =\n      !!excalidrawContainer?.classList.contains(\"theme--dark\") ||\n      theme === \"dark\";\n    const div = document.createElement(\"div\");\n\n    div.classList.add(\"excalidraw\", \"excalidraw-modal-container\");\n    div.classList.toggle(\"excalidraw--mobile\", isMobileRef.current);\n\n    if (isDarkTheme) {\n      div.classList.add(\"theme--dark\");\n      div.classList.add(\"theme--dark-background-none\");\n    }\n    document.body.appendChild(div);\n\n    setDiv(div);\n\n    return () => {\n      document.body.removeChild(div);\n    };\n  }, [excalidrawContainer, theme]);\n\n  return div;\n};\n","import clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useCallbackRefState } from \"../hooks/useCallbackRefState\";\nimport { t } from \"../i18n\";\nimport { useExcalidrawContainer, useIsMobile } from \"../components/App\";\nimport { KEYS } from \"../keys\";\nimport \"./Dialog.scss\";\nimport { back, close } from \"./icons\";\nimport { Island } from \"./Island\";\nimport { Modal } from \"./Modal\";\nimport { AppState } from \"../types\";\n\nexport const Dialog = (props: {\n  children: React.ReactNode;\n  className?: string;\n  small?: boolean;\n  onCloseRequest(): void;\n  title: React.ReactNode;\n  autofocus?: boolean;\n  theme?: AppState[\"theme\"];\n}) => {\n  const [islandNode, setIslandNode] = useCallbackRefState<HTMLDivElement>();\n  const [lastActiveElement] = useState(document.activeElement);\n  const { id } = useExcalidrawContainer();\n\n  useEffect(() => {\n    if (!islandNode) {\n      return;\n    }\n\n    const focusableElements = queryFocusableElements(islandNode);\n\n    if (focusableElements.length > 0 && props.autofocus !== false) {\n      // If there's an element other than close, focus it.\n      (focusableElements[1] || focusableElements[0]).focus();\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === KEYS.TAB) {\n        const focusableElements = queryFocusableElements(islandNode);\n        const { activeElement } = document;\n        const currentIndex = focusableElements.findIndex(\n          (element) => element === activeElement,\n        );\n\n        if (currentIndex === 0 && event.shiftKey) {\n          focusableElements[focusableElements.length - 1].focus();\n          event.preventDefault();\n        } else if (\n          currentIndex === focusableElements.length - 1 &&\n          !event.shiftKey\n        ) {\n          focusableElements[0].focus();\n          event.preventDefault();\n        }\n      }\n    };\n\n    islandNode.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => islandNode.removeEventListener(\"keydown\", handleKeyDown);\n  }, [islandNode, props.autofocus]);\n\n  const queryFocusableElements = (node: HTMLElement) => {\n    const focusableElements = node.querySelectorAll<HTMLElement>(\n      \"button, a, input, select, textarea, div[tabindex]\",\n    );\n\n    return focusableElements ? Array.from(focusableElements) : [];\n  };\n\n  const onClose = () => {\n    (lastActiveElement as HTMLElement).focus();\n    props.onCloseRequest();\n  };\n\n  return (\n    <Modal\n      className={clsx(\"Dialog\", props.className)}\n      labelledBy=\"dialog-title\"\n      maxWidth={props.small ? 550 : 800}\n      onCloseRequest={onClose}\n      theme={props.theme}\n    >\n      <Island ref={setIslandNode}>\n        <h2 id={`${id}-dialog-title`} className=\"Dialog__title\">\n          <span className=\"Dialog__titleContent\">{props.title}</span>\n          <button\n            className=\"Modal__close\"\n            onClick={onClose}\n            aria-label={t(\"buttons.close\")}\n          >\n            {useIsMobile() ? back : close}\n          </button>\n        </h2>\n        <div className=\"Dialog__content\">{props.children}</div>\n      </Island>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport { t } from \"../i18n\";\n\nimport { Dialog } from \"./Dialog\";\nimport { useExcalidrawContainer } from \"./App\";\n\nexport const ErrorDialog = ({\n  message,\n  onClose,\n}: {\n  message: string;\n  onClose?: () => void;\n}) => {\n  const [modalIsShown, setModalIsShown] = useState(!!message);\n  const { container: excalidrawContainer } = useExcalidrawContainer();\n\n  const handleClose = React.useCallback(() => {\n    setModalIsShown(false);\n\n    if (onClose) {\n      onClose();\n    }\n    // TODO: Fix the A11y issues so this is never needed since we should always focus on last active element\n    excalidrawContainer?.focus();\n  }, [onClose, excalidrawContainer]);\n\n  return (\n    <>\n      {modalIsShown && (\n        <Dialog\n          small\n          onCloseRequest={handleClose}\n          title={t(\"errorDialog.title\")}\n        >\n          <div style={{ whiteSpace: \"pre-wrap\" }}>{message}</div>\n        </Dialog>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport * as Sentry from \"@sentry/browser\";\nimport { t } from \"../i18n\";\n\ninterface TopErrorBoundaryState {\n  hasError: boolean;\n  sentryEventId: string;\n  localStorage: string;\n}\n\nexport class TopErrorBoundary extends React.Component<\n  any,\n  TopErrorBoundaryState\n> {\n  state: TopErrorBoundaryState = {\n    hasError: false,\n    sentryEventId: \"\",\n    localStorage: \"\",\n  };\n\n  render() {\n    return this.state.hasError ? this.errorSplash() : this.props.children;\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    const _localStorage: any = {};\n    for (const [key, value] of Object.entries({ ...localStorage })) {\n      try {\n        _localStorage[key] = JSON.parse(value);\n      } catch (error) {\n        _localStorage[key] = value;\n      }\n    }\n\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo);\n      const eventId = Sentry.captureException(error);\n\n      this.setState((state) => ({\n        hasError: true,\n        sentryEventId: eventId,\n        localStorage: JSON.stringify(_localStorage),\n      }));\n    });\n  }\n\n  private selectTextArea(event: React.MouseEvent<HTMLTextAreaElement>) {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLTextAreaElement).select();\n    }\n  }\n\n  private async createGithubIssue() {\n    let body = \"\";\n    try {\n      const templateStrFn = (\n        await import(\n          /* webpackChunkName: \"bug-issue-template\" */ \"../bug-issue-template\"\n        )\n      ).default;\n      body = encodeURIComponent(templateStrFn(this.state.sentryEventId));\n    } catch (error) {\n      console.error(error);\n    }\n\n    window.open(\n      `https://github.com/excalidraw/excalidraw/issues/new?body=${body}`,\n    );\n  }\n\n  private errorSplash() {\n    return (\n      <div className=\"ErrorSplash excalidraw\">\n        <div className=\"ErrorSplash-messageContainer\">\n          <div className=\"ErrorSplash-paragraph bigger align-center\">\n            {t(\"errorSplash.headingMain_pre\")}\n            <button onClick={() => window.location.reload()}>\n              {t(\"errorSplash.headingMain_button\")}\n            </button>\n          </div>\n          <div className=\"ErrorSplash-paragraph align-center\">\n            {t(\"errorSplash.clearCanvasMessage\")}\n            <button\n              onClick={() => {\n                try {\n                  localStorage.clear();\n                  window.location.reload();\n                } catch (error) {\n                  console.error(error);\n                }\n              }}\n            >\n              {t(\"errorSplash.clearCanvasMessage_button\")}\n            </button>\n            <br />\n            <div className=\"smaller\">\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n              {t(\"errorSplash.clearCanvasCaveat\")}\n              <span role=\"img\" aria-hidden=\"true\">\n                ⚠️\n              </span>\n            </div>\n          </div>\n          <div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.trackedToSentry_pre\")}\n              {this.state.sentryEventId}\n              {t(\"errorSplash.trackedToSentry_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              {t(\"errorSplash.openIssueMessage_pre\")}\n              <button onClick={() => this.createGithubIssue()}>\n                {t(\"errorSplash.openIssueMessage_button\")}\n              </button>\n              {t(\"errorSplash.openIssueMessage_post\")}\n            </div>\n            <div className=\"ErrorSplash-paragraph\">\n              <div className=\"ErrorSplash-details\">\n                <label>{t(\"errorSplash.sceneContent\")}</label>\n                <textarea\n                  rows={5}\n                  onPointerDown={this.selectTextArea}\n                  readOnly={true}\n                  value={this.state.localStorage}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { ENV } from \"../../constants\";\nimport pkg from \"./package.json\";\nif (process.env.NODE_ENV !== ENV.TEST) {\n  /* eslint-disable */\n  /* global __webpack_public_path__:writable */\n  __webpack_public_path__ =\n    window.EXCALIDRAW_ASSET_PATH ||\n    `https://unpkg.com/${pkg.name}@${pkg.version}/dist/`;\n}\n","import React from \"react\";\n\nimport { LoadingMessage } from \"./LoadingMessage\";\nimport { defaultLang, Language, languages, setLanguage } from \"../i18n\";\n\ninterface Props {\n  langCode: Language[\"code\"];\n}\ninterface State {\n  isLoading: boolean;\n}\nexport class InitializeApp extends React.Component<Props, State> {\n  public state: { isLoading: boolean } = {\n    isLoading: true,\n  };\n\n  async componentDidMount() {\n    const currentLang =\n      languages.find((lang) => lang.code === this.props.langCode) ||\n      defaultLang;\n    await setLanguage(currentLang);\n    this.setState({\n      isLoading: false,\n    });\n  }\n\n  public render() {\n    return this.state.isLoading ? <LoadingMessage /> : this.props.children;\n  }\n}\n","// time constants (ms)\nexport const SAVE_TO_LOCAL_STORAGE_TIMEOUT = 300;\nexport const INITIAL_SCENE_UPDATE_TIMEOUT = 5000;\nexport const SYNC_FULL_SCENE_INTERVAL_MS = 20000;\n\nexport const BROADCAST = {\n  SERVER_VOLATILE: \"server-volatile-broadcast\",\n  SERVER: \"server-broadcast\",\n};\n\nexport enum SCENE {\n  INIT = \"SCENE_INIT\",\n  UPDATE = \"SCENE_UPDATE\",\n}\n","import React, { useEffect, forwardRef } from \"react\";\nimport \"./publicPath\";\n\nimport { InitializeApp } from \"../../components/InitializeApp\";\nimport App from \"../../components/App\";\n\nimport \"../../css/app.scss\";\nimport \"../../css/styles.scss\";\n\nimport { AppProps, ExcalidrawAPIRefValue, ExcalidrawProps } from \"../../types\";\nimport { defaultLang } from \"../../i18n\";\nimport { DEFAULT_UI_OPTIONS } from \"../../constants\";\n\nconst Excalidraw = (props: ExcalidrawProps) => {\n  const {\n    onChange,\n    initialData,\n    excalidrawRef,\n    onCollabButtonClick,\n    isCollaborating,\n    onPointerUpdate,\n    renderTopRightUI,\n    renderFooter,\n    langCode = defaultLang.code,\n    viewModeEnabled,\n    zenModeEnabled,\n    gridModeEnabled,\n    libraryReturnUrl,\n    theme,\n    name,\n    renderCustomStats,\n    onPaste,\n    detectScroll = true,\n    handleKeyboardGlobally = false,\n    onLibraryChange,\n    autoFocus = false,\n  } = props;\n\n  const canvasActions = props.UIOptions?.canvasActions;\n\n  const UIOptions: AppProps[\"UIOptions\"] = {\n    canvasActions: {\n      ...DEFAULT_UI_OPTIONS.canvasActions,\n      ...canvasActions,\n    },\n  };\n\n  if (canvasActions?.export) {\n    UIOptions.canvasActions.export.saveFileToDisk =\n      canvasActions.export?.saveFileToDisk ||\n      DEFAULT_UI_OPTIONS.canvasActions.export.saveFileToDisk;\n  }\n\n  useEffect(() => {\n    // Block pinch-zooming on iOS outside of the content area\n    const handleTouchMove = (event: TouchEvent) => {\n      // @ts-ignore\n      if (typeof event.scale === \"number\" && event.scale !== 1) {\n        event.preventDefault();\n      }\n    };\n\n    document.addEventListener(\"touchmove\", handleTouchMove, {\n      passive: false,\n    });\n\n    return () => {\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, []);\n\n  return (\n    <InitializeApp langCode={langCode}>\n      <App\n        onChange={onChange}\n        initialData={initialData}\n        excalidrawRef={excalidrawRef}\n        onCollabButtonClick={onCollabButtonClick}\n        isCollaborating={isCollaborating}\n        onPointerUpdate={onPointerUpdate}\n        renderTopRightUI={renderTopRightUI}\n        renderFooter={renderFooter}\n        langCode={langCode}\n        viewModeEnabled={viewModeEnabled}\n        zenModeEnabled={zenModeEnabled}\n        gridModeEnabled={gridModeEnabled}\n        libraryReturnUrl={libraryReturnUrl}\n        theme={theme}\n        name={name}\n        renderCustomStats={renderCustomStats}\n        UIOptions={UIOptions}\n        onPaste={onPaste}\n        detectScroll={detectScroll}\n        handleKeyboardGlobally={handleKeyboardGlobally}\n        onLibraryChange={onLibraryChange}\n        autoFocus={autoFocus}\n      />\n    </InitializeApp>\n  );\n};\n\ntype PublicExcalidrawProps = Omit<ExcalidrawProps, \"forwardedRef\">;\n\nconst areEqual = (\n  prevProps: PublicExcalidrawProps,\n  nextProps: PublicExcalidrawProps,\n) => {\n  const {\n    initialData: prevInitialData,\n    UIOptions: prevUIOptions = {},\n    ...prev\n  } = prevProps;\n  const {\n    initialData: nextInitialData,\n    UIOptions: nextUIOptions = {},\n    ...next\n  } = nextProps;\n\n  // comparing UIOptions\n  const prevUIOptionsKeys = Object.keys(prevUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n  const nextUIOptionsKeys = Object.keys(nextUIOptions) as (keyof Partial<\n    typeof DEFAULT_UI_OPTIONS\n  >)[];\n\n  if (prevUIOptionsKeys.length !== nextUIOptionsKeys.length) {\n    return false;\n  }\n\n  const isUIOptionsSame = prevUIOptionsKeys.every((key) => {\n    if (key === \"canvasActions\") {\n      const canvasOptionKeys = Object.keys(\n        prevUIOptions.canvasActions!,\n      ) as (keyof Partial<typeof DEFAULT_UI_OPTIONS.canvasActions>)[];\n      canvasOptionKeys.every((key) => {\n        if (\n          key === \"export\" &&\n          prevUIOptions?.canvasActions?.export &&\n          nextUIOptions?.canvasActions?.export\n        ) {\n          return (\n            prevUIOptions.canvasActions.export.saveFileToDisk ===\n            nextUIOptions.canvasActions.export.saveFileToDisk\n          );\n        }\n        return (\n          prevUIOptions?.canvasActions?.[key] ===\n          nextUIOptions?.canvasActions?.[key]\n        );\n      });\n    }\n    return true;\n  });\n\n  const prevKeys = Object.keys(prevProps) as (keyof typeof prev)[];\n  const nextKeys = Object.keys(nextProps) as (keyof typeof next)[];\n  return (\n    isUIOptionsSame &&\n    prevKeys.length === nextKeys.length &&\n    prevKeys.every((key) => prev[key] === next[key])\n  );\n};\n\nconst forwardedRefComp = forwardRef<\n  ExcalidrawAPIRefValue,\n  PublicExcalidrawProps\n>((props, ref) => <Excalidraw {...props} excalidrawRef={ref} />);\nexport default React.memo(forwardedRefComp, areEqual);\nexport {\n  getSceneVersion,\n  getElementMap,\n  isInvisiblySmallElement,\n} from \"../../element\";\nexport { defaultLang, languages } from \"../../i18n\";\nexport { restore, restoreAppState, restoreElements } from \"../../data/restore\";\nexport {\n  exportToCanvas,\n  exportToBlob,\n  exportToSvg,\n  serializeAsJSON,\n  loadLibraryFromBlob,\n  loadFromBlob,\n  getFreeDrawSvgPath,\n} from \"../../packages/utils\";\nexport { FONT_FAMILY } from \"../../constants\";\n","import { serializeAsJSON } from \"../../data/json\";\nimport { restore } from \"../../data/restore\";\nimport { ImportedDataState } from \"../../data/types\";\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { t } from \"../../i18n\";\nimport { AppState, UserIdleState } from \"../../types\";\n\nconst byteToHex = (byte: number): string => `0${byte.toString(16)}`.slice(-2);\n\nconst BACKEND_GET = process.env.REACT_APP_BACKEND_V1_GET_URL;\nconst BACKEND_V2_GET = process.env.REACT_APP_BACKEND_V2_GET_URL;\nconst BACKEND_V2_POST = process.env.REACT_APP_BACKEND_V2_POST_URL;\n\nconst generateRandomID = async () => {\n  const arr = new Uint8Array(10);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, byteToHex).join(\"\");\n};\n\nexport const generateEncryptionKey = async () => {\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n  return (await window.crypto.subtle.exportKey(\"jwk\", key)).k;\n};\n\nexport const SOCKET_SERVER = process.env.REACT_APP_SOCKET_SERVER_URL;\n\nexport type EncryptedData = {\n  data: ArrayBuffer;\n  iv: Uint8Array;\n};\n\nexport type SocketUpdateDataSource = {\n  SCENE_INIT: {\n    type: \"SCENE_INIT\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  SCENE_UPDATE: {\n    type: \"SCENE_UPDATE\";\n    payload: {\n      elements: readonly ExcalidrawElement[];\n    };\n  };\n  MOUSE_LOCATION: {\n    type: \"MOUSE_LOCATION\";\n    payload: {\n      socketId: string;\n      pointer: { x: number; y: number };\n      button: \"down\" | \"up\";\n      selectedElementIds: AppState[\"selectedElementIds\"];\n      username: string;\n    };\n  };\n  IDLE_STATUS: {\n    type: \"IDLE_STATUS\";\n    payload: {\n      socketId: string;\n      userState: UserIdleState;\n      username: string;\n    };\n  };\n};\n\nexport type SocketUpdateDataIncoming =\n  | SocketUpdateDataSource[keyof SocketUpdateDataSource]\n  | {\n      type: \"INVALID_RESPONSE\";\n    };\n\nexport type SocketUpdateData = SocketUpdateDataSource[keyof SocketUpdateDataSource] & {\n  _brand: \"socketUpdateData\";\n};\n\nconst IV_LENGTH_BYTES = 12; // 96 bits\n\nexport const createIV = () => {\n  const arr = new Uint8Array(IV_LENGTH_BYTES);\n  return window.crypto.getRandomValues(arr);\n};\n\nexport const encryptAESGEM = async (\n  data: Uint8Array,\n  key: string,\n): Promise<EncryptedData> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  return {\n    data: await window.crypto.subtle.encrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    ),\n    iv,\n  };\n};\n\nexport const decryptAESGEM = async (\n  data: ArrayBuffer,\n  key: string,\n  iv: Uint8Array,\n): Promise<SocketUpdateDataIncoming> => {\n  try {\n    const importedKey = await getImportedKey(key, \"decrypt\");\n    const decrypted = await window.crypto.subtle.decrypt(\n      {\n        name: \"AES-GCM\",\n        iv,\n      },\n      importedKey,\n      data,\n    );\n\n    const decodedData = new TextDecoder(\"utf-8\").decode(\n      new Uint8Array(decrypted) as any,\n    );\n    return JSON.parse(decodedData);\n  } catch (error) {\n    window.alert(t(\"alerts.decryptFailed\"));\n    console.error(error);\n  }\n  return {\n    type: \"INVALID_RESPONSE\",\n  };\n};\n\nexport const getCollaborationLinkData = (link: string) => {\n  const hash = new URL(link).hash;\n  const match = hash.match(/^#room=([a-zA-Z0-9_-]+),([a-zA-Z0-9_-]+)$/);\n  return match ? { roomId: match[1], roomKey: match[2] } : null;\n};\n\nexport const generateCollaborationLinkData = async () => {\n  const roomId = await generateRandomID();\n  const roomKey = await generateEncryptionKey();\n\n  if (!roomKey) {\n    throw new Error(\"Couldn't generate room key\");\n  }\n\n  return { roomId, roomKey };\n};\n\nexport const getCollaborationLink = (data: {\n  roomId: string;\n  roomKey: string;\n}) => {\n  return `${window.location.origin}${window.location.pathname}#room=${data.roomId},${data.roomKey}`;\n};\n\nexport const getImportedKey = (key: string, usage: KeyUsage) =>\n  window.crypto.subtle.importKey(\n    \"jwk\",\n    {\n      alg: \"A128GCM\",\n      ext: true,\n      k: key,\n      key_ops: [\"encrypt\", \"decrypt\"],\n      kty: \"oct\",\n    },\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    false, // extractable\n    [usage],\n  );\n\nexport const decryptImported = async (\n  iv: ArrayBuffer,\n  encrypted: ArrayBuffer,\n  privateKey: string,\n): Promise<ArrayBuffer> => {\n  const key = await getImportedKey(privateKey, \"decrypt\");\n  return window.crypto.subtle.decrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    key,\n    encrypted,\n  );\n};\n\nconst importFromBackend = async (\n  id: string | null,\n  privateKey?: string | null,\n): Promise<ImportedDataState> => {\n  try {\n    const response = await fetch(\n      privateKey ? `${BACKEND_V2_GET}${id}` : `${BACKEND_GET}${id}.json`,\n    );\n\n    if (!response.ok) {\n      window.alert(t(\"alerts.importBackendFailed\"));\n      return {};\n    }\n    let data: ImportedDataState;\n    if (privateKey) {\n      const buffer = await response.arrayBuffer();\n\n      let decrypted: ArrayBuffer;\n      try {\n        // Buffer should contain both the IV (fixed length) and encrypted data\n        const iv = buffer.slice(0, IV_LENGTH_BYTES);\n        const encrypted = buffer.slice(IV_LENGTH_BYTES, buffer.byteLength);\n        decrypted = await decryptImported(iv, encrypted, privateKey);\n      } catch (error) {\n        // Fixed IV (old format, backward compatibility)\n        const fixedIv = new Uint8Array(IV_LENGTH_BYTES);\n        decrypted = await decryptImported(fixedIv, buffer, privateKey);\n      }\n\n      // We need to convert the decrypted array buffer to a string\n      const string = new window.TextDecoder(\"utf-8\").decode(\n        new Uint8Array(decrypted) as any,\n      );\n      data = JSON.parse(string);\n    } else {\n      // Legacy format\n      data = await response.json();\n    }\n\n    return {\n      elements: data.elements || null,\n      appState: data.appState || null,\n    };\n  } catch (error) {\n    window.alert(t(\"alerts.importBackendFailed\"));\n    console.error(error);\n    return {};\n  }\n};\n\nexport const loadScene = async (\n  id: string | null,\n  privateKey: string | null,\n  // Supply local state even if importing from backend to ensure we restore\n  // localStorage user settings which we do not persist on server.\n  // Non-optional so we don't forget to pass it even if `undefined`.\n  localDataState: ImportedDataState | undefined | null,\n) => {\n  let data;\n  if (id != null) {\n    // the private key is used to decrypt the content from the server, take\n    // extra care not to leak it\n    data = restore(\n      await importFromBackend(id, privateKey),\n      localDataState?.appState,\n      localDataState?.elements,\n    );\n  } else {\n    data = restore(localDataState || null, null, null);\n  }\n\n  return {\n    elements: data.elements,\n    appState: data.appState,\n    commitToHistory: false,\n  };\n};\n\nexport const exportToBackend = async (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  const json = serializeAsJSON(elements, appState);\n  const encoded = new TextEncoder().encode(json);\n\n  const key = await window.crypto.subtle.generateKey(\n    {\n      name: \"AES-GCM\",\n      length: 128,\n    },\n    true, // extractable\n    [\"encrypt\", \"decrypt\"],\n  );\n\n  const iv = createIV();\n  // We use symmetric encryption. AES-GCM is the recommended algorithm and\n  // includes checks that the ciphertext has not been modified by an attacker.\n  const encrypted = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    key,\n    encoded,\n  );\n\n  // Concatenate IV with encrypted data (IV does not have to be secret).\n  const payloadBlob = new Blob([iv.buffer, encrypted]);\n  const payload = await new Response(payloadBlob).arrayBuffer();\n\n  // We use jwk encoding to be able to extract just the base64 encoded key.\n  // We will hardcode the rest of the attributes when importing back the key.\n  const exportedKey = await window.crypto.subtle.exportKey(\"jwk\", key);\n\n  try {\n    const response = await fetch(BACKEND_V2_POST, {\n      method: \"POST\",\n      body: payload,\n    });\n    const json = await response.json();\n    if (json.id) {\n      const url = new URL(window.location.href);\n      // We need to store the key (and less importantly the id) as hash instead\n      // of queryParam in order to never send it to the server\n      url.hash = `json=${json.id},${exportedKey.k!}`;\n      const urlString = url.toString();\n      window.prompt(`🔒${t(\"alerts.uploadedSecurly\")}`, urlString);\n    } else if (json.error_class === \"RequestTooLargeError\") {\n      window.alert(t(\"alerts.couldNotCreateShareableLinkTooBig\"));\n    } else {\n      window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n    }\n  } catch (error) {\n    console.error(error);\n    window.alert(t(\"alerts.couldNotCreateShareableLink\"));\n  }\n};\n","import { getImportedKey } from \"../data\";\nimport { createIV } from \"./index\";\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { getSceneVersion } from \"../../element\";\nimport Portal from \"../collab/Portal\";\nimport { restoreElements } from \"../../data/restore\";\n\n// private\n// -----------------------------------------------------------------------------\n\nlet firebasePromise: Promise<\n  typeof import(\"firebase/app\").default\n> | null = null;\nlet firestorePromise: Promise<any> | null = null;\nlet firebseStoragePromise: Promise<any> | null = null;\n\nconst _loadFirebase = async () => {\n  const firebase = (\n    await import(/* webpackChunkName: \"firebase\" */ \"firebase/app\")\n  ).default;\n\n  const firebaseConfig = JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG);\n  firebase.initializeApp(firebaseConfig);\n\n  return firebase;\n};\n\nconst _getFirebase = async (): Promise<\n  typeof import(\"firebase/app\").default\n> => {\n  if (!firebasePromise) {\n    firebasePromise = _loadFirebase();\n  }\n  return firebasePromise;\n};\n\n// -----------------------------------------------------------------------------\n\nconst loadFirestore = async () => {\n  const firebase = await _getFirebase();\n  if (!firestorePromise) {\n    firestorePromise = import(\n      /* webpackChunkName: \"firestore\" */ \"firebase/firestore\"\n    );\n    await firestorePromise;\n  }\n  return firebase;\n};\n\nexport const loadFirebaseStorage = async () => {\n  const firebase = await _getFirebase();\n  if (!firebseStoragePromise) {\n    firebseStoragePromise = import(\n      /* webpackChunkName: \"storage\" */ \"firebase/storage\"\n    );\n    await firebseStoragePromise;\n  }\n  return firebase;\n};\n\ninterface FirebaseStoredScene {\n  sceneVersion: number;\n  iv: firebase.default.firestore.Blob;\n  ciphertext: firebase.default.firestore.Blob;\n}\n\nconst encryptElements = async (\n  key: string,\n  elements: readonly ExcalidrawElement[],\n): Promise<{ ciphertext: ArrayBuffer; iv: Uint8Array }> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  const json = JSON.stringify(elements);\n  const encoded = new TextEncoder().encode(json);\n  const ciphertext = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    importedKey,\n    encoded,\n  );\n\n  return { ciphertext, iv };\n};\n\nconst decryptElements = async (\n  key: string,\n  iv: Uint8Array,\n  ciphertext: ArrayBuffer,\n): Promise<readonly ExcalidrawElement[]> => {\n  const importedKey = await getImportedKey(key, \"decrypt\");\n  const decrypted = await window.crypto.subtle.decrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    importedKey,\n    ciphertext,\n  );\n\n  const decodedData = new TextDecoder(\"utf-8\").decode(\n    new Uint8Array(decrypted) as any,\n  );\n  return JSON.parse(decodedData);\n};\n\nconst firebaseSceneVersionCache = new WeakMap<SocketIOClient.Socket, number>();\n\nexport const isSavedToFirebase = (\n  portal: Portal,\n  elements: readonly ExcalidrawElement[],\n): boolean => {\n  if (portal.socket && portal.roomId && portal.roomKey) {\n    const sceneVersion = getSceneVersion(elements);\n    return firebaseSceneVersionCache.get(portal.socket) === sceneVersion;\n  }\n  // if no room exists, consider the room saved so that we don't unnecessarily\n  // prevent unload (there's nothing we could do at that point anyway)\n  return true;\n};\n\nexport const saveToFirebase = async (\n  portal: Portal,\n  elements: readonly ExcalidrawElement[],\n) => {\n  const { roomId, roomKey, socket } = portal;\n  if (\n    // if no room exists, consider the room saved because there's nothing we can\n    // do at this point\n    !roomId ||\n    !roomKey ||\n    !socket ||\n    isSavedToFirebase(portal, elements)\n  ) {\n    return true;\n  }\n\n  const firebase = await loadFirestore();\n  const sceneVersion = getSceneVersion(elements);\n  const { ciphertext, iv } = await encryptElements(roomKey, elements);\n\n  const nextDocData = {\n    sceneVersion,\n    ciphertext: firebase.firestore.Blob.fromUint8Array(\n      new Uint8Array(ciphertext),\n    ),\n    iv: firebase.firestore.Blob.fromUint8Array(iv),\n  } as FirebaseStoredScene;\n\n  const db = firebase.firestore();\n  const docRef = db.collection(\"scenes\").doc(roomId);\n  const didUpdate = await db.runTransaction(async (transaction) => {\n    const doc = await transaction.get(docRef);\n    if (!doc.exists) {\n      transaction.set(docRef, nextDocData);\n      return true;\n    }\n\n    const prevDocData = doc.data() as FirebaseStoredScene;\n    if (prevDocData.sceneVersion >= nextDocData.sceneVersion) {\n      return false;\n    }\n\n    transaction.update(docRef, nextDocData);\n    return true;\n  });\n\n  if (didUpdate) {\n    firebaseSceneVersionCache.set(socket, sceneVersion);\n  }\n\n  return didUpdate;\n};\n\nexport const loadFromFirebase = async (\n  roomId: string,\n  roomKey: string,\n  socket: SocketIOClient.Socket | null,\n): Promise<readonly ExcalidrawElement[] | null> => {\n  const firebase = await loadFirestore();\n  const db = firebase.firestore();\n\n  const docRef = db.collection(\"scenes\").doc(roomId);\n  const doc = await docRef.get();\n  if (!doc.exists) {\n    return null;\n  }\n  const storedScene = doc.data() as FirebaseStoredScene;\n  const ciphertext = storedScene.ciphertext.toUint8Array();\n  const iv = storedScene.iv.toUint8Array();\n\n  const elements = await decryptElements(roomKey, iv, ciphertext);\n\n  if (socket) {\n    firebaseSceneVersionCache.set(socket, getSceneVersion(elements));\n  }\n\n  return restoreElements(elements, null);\n};\n","import { ExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport {\n  clearAppStateForLocalStorage,\n  getDefaultAppState,\n} from \"../../appState\";\nimport { clearElementsForLocalStorage } from \"../../element\";\nimport { STORAGE_KEYS as APP_STORAGE_KEYS } from \"../../constants\";\n\nexport const STORAGE_KEYS = {\n  LOCAL_STORAGE_ELEMENTS: \"excalidraw\",\n  LOCAL_STORAGE_APP_STATE: \"excalidraw-state\",\n  LOCAL_STORAGE_COLLAB: \"excalidraw-collab\",\n  LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG: \"collabLinkForceLoadFlag\",\n};\n\nexport const saveUsernameToLocalStorage = (username: string) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_COLLAB,\n      JSON.stringify({ username }),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importUsernameFromLocalStorage = (): string | null => {\n  try {\n    const data = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    if (data) {\n      return JSON.parse(data).username;\n    }\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  return null;\n};\n\nexport const saveToLocalStorage = (\n  elements: readonly ExcalidrawElement[],\n  appState: AppState,\n) => {\n  try {\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS,\n      JSON.stringify(clearElementsForLocalStorage(elements)),\n    );\n    localStorage.setItem(\n      STORAGE_KEYS.LOCAL_STORAGE_APP_STATE,\n      JSON.stringify(clearAppStateForLocalStorage(appState)),\n    );\n  } catch (error) {\n    // Unable to access window.localStorage\n    console.error(error);\n  }\n};\n\nexport const importFromLocalStorage = () => {\n  let savedElements = null;\n  let savedState = null;\n\n  try {\n    savedElements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    savedState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n  } catch (error) {\n    // Unable to access localStorage\n    console.error(error);\n  }\n\n  let elements: ExcalidrawElement[] = [];\n  if (savedElements) {\n    try {\n      elements = clearElementsForLocalStorage(JSON.parse(savedElements));\n    } catch (error) {\n      console.error(error);\n      // Do nothing because elements array is already empty\n    }\n  }\n\n  let appState = null;\n  if (savedState) {\n    try {\n      appState = {\n        ...getDefaultAppState(),\n        ...clearAppStateForLocalStorage(\n          JSON.parse(savedState) as Partial<AppState>,\n        ),\n      };\n    } catch (error) {\n      console.error(error);\n      // Do nothing because appState is already null\n    }\n  }\n  return { elements, appState };\n};\n\nexport const getElementsStorageSize = () => {\n  try {\n    const elements = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_ELEMENTS);\n    const elementsSize = elements?.length || 0;\n    return elementsSize;\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};\n\nexport const getTotalStorageSize = () => {\n  try {\n    const appState = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_APP_STATE);\n    const collab = localStorage.getItem(STORAGE_KEYS.LOCAL_STORAGE_COLLAB);\n    const library = localStorage.getItem(\n      APP_STORAGE_KEYS.LOCAL_STORAGE_LIBRARY,\n    );\n\n    const appStateSize = appState?.length || 0;\n    const collabSize = collab?.length || 0;\n    const librarySize = library?.length || 0;\n\n    return appStateSize + collabSize + librarySize + getElementsStorageSize();\n  } catch (error) {\n    console.error(error);\n    return 0;\n  }\n};\n","import {\n  encryptAESGEM,\n  SocketUpdateData,\n  SocketUpdateDataSource,\n} from \"../data\";\n\nimport CollabWrapper from \"./CollabWrapper\";\n\nimport { ExcalidrawElement } from \"../../element/types\";\nimport { BROADCAST, SCENE } from \"../app_constants\";\nimport { UserIdleState } from \"../../types\";\nimport { trackEvent } from \"../../analytics\";\n\nclass Portal {\n  collab: CollabWrapper;\n  socket: SocketIOClient.Socket | null = null;\n  socketInitialized: boolean = false; // we don't want the socket to emit any updates until it is fully initialized\n  roomId: string | null = null;\n  roomKey: string | null = null;\n  broadcastedElementVersions: Map<string, number> = new Map();\n\n  constructor(collab: CollabWrapper) {\n    this.collab = collab;\n  }\n\n  open(socket: SocketIOClient.Socket, id: string, key: string) {\n    this.socket = socket;\n    this.roomId = id;\n    this.roomKey = key;\n\n    // Initialize socket listeners\n    this.socket.on(\"init-room\", () => {\n      if (this.socket) {\n        this.socket.emit(\"join-room\", this.roomId);\n        trackEvent(\"share\", \"room joined\");\n      }\n    });\n    this.socket.on(\"new-user\", async (_socketId: string) => {\n      this.broadcastScene(\n        SCENE.INIT,\n        this.collab.getSyncableElements(\n          this.collab.getSceneElementsIncludingDeleted(),\n        ),\n        /* syncAll */ true,\n      );\n    });\n    this.socket.on(\"room-user-change\", (clients: string[]) => {\n      this.collab.setCollaborators(clients);\n    });\n  }\n\n  close() {\n    if (!this.socket) {\n      return;\n    }\n    this.socket.close();\n    this.socket = null;\n    this.roomId = null;\n    this.roomKey = null;\n    this.socketInitialized = false;\n    this.broadcastedElementVersions = new Map();\n  }\n\n  isOpen() {\n    return !!(\n      this.socketInitialized &&\n      this.socket &&\n      this.roomId &&\n      this.roomKey\n    );\n  }\n\n  async _broadcastSocketData(\n    data: SocketUpdateData,\n    volatile: boolean = false,\n  ) {\n    if (this.isOpen()) {\n      const json = JSON.stringify(data);\n      const encoded = new TextEncoder().encode(json);\n      const encrypted = await encryptAESGEM(encoded, this.roomKey!);\n      this.socket!.emit(\n        volatile ? BROADCAST.SERVER_VOLATILE : BROADCAST.SERVER,\n        this.roomId,\n        encrypted.data,\n        encrypted.iv,\n      );\n    }\n  }\n\n  broadcastScene = async (\n    sceneType: SCENE.INIT | SCENE.UPDATE,\n    syncableElements: ExcalidrawElement[],\n    syncAll: boolean,\n  ) => {\n    if (sceneType === SCENE.INIT && !syncAll) {\n      throw new Error(\"syncAll must be true when sending SCENE.INIT\");\n    }\n\n    if (!syncAll) {\n      // sync out only the elements we think we need to to save bandwidth.\n      // periodically we'll resync the whole thing to make sure no one diverges\n      // due to a dropped message (server goes down etc).\n      syncableElements = syncableElements.filter(\n        (syncableElement) =>\n          !this.broadcastedElementVersions.has(syncableElement.id) ||\n          syncableElement.version >\n            this.broadcastedElementVersions.get(syncableElement.id)!,\n      );\n    }\n\n    const data: SocketUpdateDataSource[typeof sceneType] = {\n      type: sceneType,\n      payload: {\n        elements: syncableElements,\n      },\n    };\n\n    for (const syncableElement of syncableElements) {\n      this.broadcastedElementVersions.set(\n        syncableElement.id,\n        syncableElement.version,\n      );\n    }\n\n    const broadcastPromise = this._broadcastSocketData(\n      data as SocketUpdateData,\n    );\n\n    if (syncAll && this.collab.isCollaborating) {\n      await Promise.all([\n        broadcastPromise,\n        this.collab.saveCollabRoomToFirebase(syncableElements),\n      ]);\n    } else {\n      await broadcastPromise;\n    }\n  };\n\n  broadcastIdleChange = (userState: UserIdleState) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"IDLE_STATUS\"] = {\n        type: \"IDLE_STATUS\",\n        payload: {\n          socketId: this.socket.id,\n          userState,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n\n  broadcastMouseLocation = (payload: {\n    pointer: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointer\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n  }) => {\n    if (this.socket?.id) {\n      const data: SocketUpdateDataSource[\"MOUSE_LOCATION\"] = {\n        type: \"MOUSE_LOCATION\",\n        payload: {\n          socketId: this.socket.id,\n          pointer: payload.pointer,\n          button: payload.button || \"up\",\n          selectedElementIds: this.collab.excalidrawAPI.getAppState()\n            .selectedElementIds,\n          username: this.collab.state.username,\n        },\n      };\n      return this._broadcastSocketData(\n        data as SocketUpdateData,\n        true, // volatile\n      );\n    }\n  };\n}\n\nexport default Portal;\n","import React, { useRef } from \"react\";\nimport { copyTextToSystemClipboard } from \"../../clipboard\";\nimport { Dialog } from \"../../components/Dialog\";\nimport {\n  clipboard,\n  start,\n  stop,\n  share,\n  shareIOS,\n  shareWindows,\n} from \"../../components/icons\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { t } from \"../../i18n\";\nimport \"./RoomDialog.scss\";\nimport Stack from \"../../components/Stack\";\nimport { AppState } from \"../../types\";\n\nconst getShareIcon = () => {\n  const navigator = window.navigator as any;\n  const isAppleBrowser = /Apple/.test(navigator.vendor);\n  const isWindowsBrowser = navigator.appVersion.indexOf(\"Win\") !== -1;\n\n  if (isAppleBrowser) {\n    return shareIOS;\n  } else if (isWindowsBrowser) {\n    return shareWindows;\n  }\n\n  return share;\n};\n\nconst RoomDialog = ({\n  handleClose,\n  activeRoomLink,\n  username,\n  onUsernameChange,\n  onRoomCreate,\n  onRoomDestroy,\n  setErrorMessage,\n  theme,\n}: {\n  handleClose: () => void;\n  activeRoomLink: string;\n  username: string;\n  onUsernameChange: (username: string) => void;\n  onRoomCreate: () => void;\n  onRoomDestroy: () => void;\n  setErrorMessage: (message: string) => void;\n  theme: AppState[\"theme\"];\n}) => {\n  const roomLinkInput = useRef<HTMLInputElement>(null);\n\n  const copyRoomLink = async () => {\n    try {\n      await copyTextToSystemClipboard(activeRoomLink);\n    } catch (error) {\n      setErrorMessage(error.message);\n    }\n    if (roomLinkInput.current) {\n      roomLinkInput.current.select();\n    }\n  };\n\n  const shareRoomLink = async () => {\n    try {\n      await navigator.share({\n        title: t(\"roomDialog.shareTitle\"),\n        text: t(\"roomDialog.shareTitle\"),\n        url: activeRoomLink,\n      });\n    } catch (error) {\n      // Just ignore.\n    }\n  };\n\n  const selectInput = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (event.target !== document.activeElement) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).select();\n    }\n  };\n\n  const renderRoomDialog = () => {\n    return (\n      <div className=\"RoomDialog-modal\">\n        {!activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_intro\")}</p>\n            <p>{`🔒 ${t(\"roomDialog.desc_privacy\")}`}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-startSession\"\n                type=\"button\"\n                icon={start}\n                title={t(\"roomDialog.button_startSession\")}\n                aria-label={t(\"roomDialog.button_startSession\")}\n                showAriaLabel={true}\n                onClick={onRoomCreate}\n              />\n            </div>\n          </>\n        )}\n        {activeRoomLink && (\n          <>\n            <p>{t(\"roomDialog.desc_inProgressIntro\")}</p>\n            <p>{t(\"roomDialog.desc_shareLink\")}</p>\n            <div className=\"RoomDialog-linkContainer\">\n              <Stack.Row gap={2}>\n                {\"share\" in navigator ? (\n                  <ToolButton\n                    type=\"button\"\n                    icon={getShareIcon()}\n                    title={t(\"labels.share\")}\n                    aria-label={t(\"labels.share\")}\n                    onClick={shareRoomLink}\n                  />\n                ) : null}\n                <ToolButton\n                  type=\"button\"\n                  icon={clipboard}\n                  title={t(\"labels.copy\")}\n                  aria-label={t(\"labels.copy\")}\n                  onClick={copyRoomLink}\n                />\n              </Stack.Row>\n              <input\n                value={activeRoomLink}\n                readOnly={true}\n                className=\"RoomDialog-link\"\n                ref={roomLinkInput}\n                onPointerDown={selectInput}\n              />\n            </div>\n            <div className=\"RoomDialog-usernameContainer\">\n              <label className=\"RoomDialog-usernameLabel\" htmlFor=\"username\">\n                {t(\"labels.yourName\")}\n              </label>\n              <input\n                id=\"username\"\n                value={username || \"\"}\n                className=\"RoomDialog-username TextInput\"\n                onChange={(event) => onUsernameChange(event.target.value)}\n                onKeyPress={(event) => event.key === \"Enter\" && handleClose()}\n              />\n            </div>\n            <p>\n              <span role=\"img\" aria-hidden=\"true\" className=\"RoomDialog-emoji\">\n                {\"🔒\"}\n              </span>{\" \"}\n              {t(\"roomDialog.desc_privacy\")}\n            </p>\n            <p>{t(\"roomDialog.desc_exitSession\")}</p>\n            <div className=\"RoomDialog-sessionStartButtonContainer\">\n              <ToolButton\n                className=\"RoomDialog-stopSession\"\n                type=\"button\"\n                icon={stop}\n                title={t(\"roomDialog.button_stopSession\")}\n                aria-label={t(\"roomDialog.button_stopSession\")}\n                showAriaLabel={true}\n                onClick={onRoomDestroy}\n              />\n            </div>\n          </>\n        )}\n      </div>\n    );\n  };\n  return (\n    <Dialog\n      small\n      onCloseRequest={handleClose}\n      title={t(\"labels.liveCollaboration\")}\n      theme={theme}\n    >\n      {renderRoomDialog()}\n    </Dialog>\n  );\n};\n\nexport default RoomDialog;\n","import throttle from \"lodash.throttle\";\nimport React, { PureComponent } from \"react\";\nimport { ExcalidrawImperativeAPI } from \"../../types\";\nimport { ErrorDialog } from \"../../components/ErrorDialog\";\nimport { APP_NAME, ENV, EVENT } from \"../../constants\";\nimport { ImportedDataState } from \"../../data/types\";\nimport { ExcalidrawElement } from \"../../element/types\";\nimport {\n  getElementMap,\n  getSceneVersion,\n} from \"../../packages/excalidraw/index\";\nimport { Collaborator, Gesture } from \"../../types\";\nimport { resolvablePromise, withBatchedUpdates } from \"../../utils\";\nimport {\n  INITIAL_SCENE_UPDATE_TIMEOUT,\n  SCENE,\n  SYNC_FULL_SCENE_INTERVAL_MS,\n} from \"../app_constants\";\nimport {\n  decryptAESGEM,\n  generateCollaborationLinkData,\n  getCollaborationLink,\n  SocketUpdateDataSource,\n  SOCKET_SERVER,\n} from \"../data\";\nimport {\n  isSavedToFirebase,\n  loadFromFirebase,\n  saveToFirebase,\n} from \"../data/firebase\";\nimport {\n  importUsernameFromLocalStorage,\n  saveUsernameToLocalStorage,\n  STORAGE_KEYS,\n} from \"../data/localStorage\";\nimport Portal from \"./Portal\";\nimport RoomDialog from \"./RoomDialog\";\nimport { createInverseContext } from \"../../createInverseContext\";\nimport { t } from \"../../i18n\";\nimport { UserIdleState } from \"../../types\";\nimport { IDLE_THRESHOLD, ACTIVE_THRESHOLD } from \"../../constants\";\nimport { trackEvent } from \"../../analytics\";\nimport { isInvisiblySmallElement } from \"../../element\";\n\ninterface CollabState {\n  modalIsShown: boolean;\n  errorMessage: string;\n  username: string;\n  userState: UserIdleState;\n  activeRoomLink: string;\n}\n\ntype CollabInstance = InstanceType<typeof CollabWrapper>;\n\nexport interface CollabAPI {\n  /** function so that we can access the latest value from stale callbacks */\n  isCollaborating: () => boolean;\n  username: CollabState[\"username\"];\n  userState: CollabState[\"userState\"];\n  onPointerUpdate: CollabInstance[\"onPointerUpdate\"];\n  initializeSocketClient: CollabInstance[\"initializeSocketClient\"];\n  onCollabButtonClick: CollabInstance[\"onCollabButtonClick\"];\n  broadcastElements: CollabInstance[\"broadcastElements\"];\n}\n\ntype ReconciledElements = readonly ExcalidrawElement[] & {\n  _brand: \"reconciledElements\";\n};\n\ninterface Props {\n  excalidrawAPI: ExcalidrawImperativeAPI;\n}\n\nconst {\n  Context: CollabContext,\n  Consumer: CollabContextConsumer,\n  Provider: CollabContextProvider,\n} = createInverseContext<{ api: CollabAPI | null }>({ api: null });\n\nexport { CollabContext, CollabContextConsumer };\n\nclass CollabWrapper extends PureComponent<Props, CollabState> {\n  portal: Portal;\n  excalidrawAPI: Props[\"excalidrawAPI\"];\n  isCollaborating: boolean = false;\n  activeIntervalId: number | null;\n  idleTimeoutId: number | null;\n\n  private socketInitializationTimer?: NodeJS.Timeout;\n  private lastBroadcastedOrReceivedSceneVersion: number = -1;\n  private collaborators = new Map<string, Collaborator>();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      modalIsShown: false,\n      errorMessage: \"\",\n      username: importUsernameFromLocalStorage() || \"\",\n      userState: UserIdleState.ACTIVE,\n      activeRoomLink: \"\",\n    };\n    this.portal = new Portal(this);\n    this.excalidrawAPI = props.excalidrawAPI;\n    this.activeIntervalId = null;\n    this.idleTimeoutId = null;\n  }\n\n  componentDidMount() {\n    window.addEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n    window.addEventListener(EVENT.UNLOAD, this.onUnload);\n\n    if (\n      process.env.NODE_ENV === ENV.TEST ||\n      process.env.NODE_ENV === ENV.DEVELOPMENT\n    ) {\n      window.collab = window.collab || ({} as Window[\"collab\"]);\n      Object.defineProperties(window, {\n        collab: {\n          configurable: true,\n          value: this,\n        },\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(EVENT.BEFORE_UNLOAD, this.beforeUnload);\n    window.removeEventListener(EVENT.UNLOAD, this.onUnload);\n    window.removeEventListener(EVENT.POINTER_MOVE, this.onPointerMove);\n    window.removeEventListener(\n      EVENT.VISIBILITY_CHANGE,\n      this.onVisibilityChange,\n    );\n    if (this.activeIntervalId) {\n      window.clearInterval(this.activeIntervalId);\n      this.activeIntervalId = null;\n    }\n    if (this.idleTimeoutId) {\n      window.clearTimeout(this.idleTimeoutId);\n      this.idleTimeoutId = null;\n    }\n  }\n\n  private onUnload = () => {\n    this.destroySocketClient({ isUnload: true });\n  };\n\n  private beforeUnload = withBatchedUpdates((event: BeforeUnloadEvent) => {\n    const syncableElements = this.getSyncableElements(\n      this.getSceneElementsIncludingDeleted(),\n    );\n\n    if (\n      this.isCollaborating &&\n      !isSavedToFirebase(this.portal, syncableElements)\n    ) {\n      // this won't run in time if user decides to leave the site, but\n      //  the purpose is to run in immediately after user decides to stay\n      this.saveCollabRoomToFirebase(syncableElements);\n\n      event.preventDefault();\n      // NOTE: modern browsers no longer allow showing a custom message here\n      event.returnValue = \"\";\n    }\n\n    if (this.isCollaborating || this.portal.roomId) {\n      try {\n        localStorage?.setItem(\n          STORAGE_KEYS.LOCAL_STORAGE_KEY_COLLAB_FORCE_FLAG,\n          JSON.stringify({\n            timestamp: Date.now(),\n            room: this.portal.roomId,\n          }),\n        );\n      } catch {}\n    }\n  });\n\n  saveCollabRoomToFirebase = async (\n    syncableElements: ExcalidrawElement[] = this.getSyncableElements(\n      this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n    ),\n  ) => {\n    try {\n      await saveToFirebase(this.portal, syncableElements);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  openPortal = async () => {\n    trackEvent(\"share\", \"room creation\");\n    return this.initializeSocketClient(null);\n  };\n\n  closePortal = () => {\n    this.saveCollabRoomToFirebase();\n    if (window.confirm(t(\"alerts.collabStopOverridePrompt\"))) {\n      window.history.pushState({}, APP_NAME, window.location.origin);\n      this.destroySocketClient();\n      trackEvent(\"share\", \"room closed\");\n    }\n  };\n\n  private destroySocketClient = (opts?: { isUnload: boolean }) => {\n    if (!opts?.isUnload) {\n      this.collaborators = new Map();\n      this.excalidrawAPI.updateScene({\n        collaborators: this.collaborators,\n      });\n      this.setState({\n        activeRoomLink: \"\",\n      });\n      this.isCollaborating = false;\n    }\n    this.portal.close();\n  };\n\n  private initializeSocketClient = async (\n    existingRoomLinkData: null | { roomId: string; roomKey: string },\n  ): Promise<ImportedDataState | null> => {\n    if (this.portal.socket) {\n      return null;\n    }\n\n    let roomId;\n    let roomKey;\n\n    if (existingRoomLinkData) {\n      ({ roomId, roomKey } = existingRoomLinkData);\n    } else {\n      ({ roomId, roomKey } = await generateCollaborationLinkData());\n      window.history.pushState(\n        {},\n        APP_NAME,\n        getCollaborationLink({ roomId, roomKey }),\n      );\n    }\n\n    const scenePromise = resolvablePromise<ImportedDataState | null>();\n\n    this.isCollaborating = true;\n\n    const { default: socketIOClient }: any = await import(\n      /* webpackChunkName: \"socketIoClient\" */ \"socket.io-client\"\n    );\n\n    this.portal.open(socketIOClient(SOCKET_SERVER), roomId, roomKey);\n\n    if (existingRoomLinkData) {\n      this.excalidrawAPI.resetScene();\n\n      try {\n        const elements = await loadFromFirebase(\n          roomId,\n          roomKey,\n          this.portal.socket,\n        );\n        if (elements) {\n          scenePromise.resolve({\n            elements,\n            scrollToContent: true,\n          });\n        }\n      } catch (error) {\n        // log the error and move on. other peers will sync us the scene.\n        console.error(error);\n      }\n    } else {\n      const elements = this.excalidrawAPI.getSceneElements();\n      // remove deleted elements from elements array & history to ensure we don't\n      // expose potentially sensitive user data in case user manually deletes\n      // existing elements (or clears scene), which would otherwise be persisted\n      // to database even if deleted before creating the room.\n      this.excalidrawAPI.history.clear();\n      this.excalidrawAPI.updateScene({\n        elements,\n        commitToHistory: true,\n      });\n    }\n\n    // fallback in case you're not alone in the room but still don't receive\n    // initial SCENE_UPDATE message\n    this.socketInitializationTimer = setTimeout(() => {\n      this.initializeSocket();\n      scenePromise.resolve(null);\n    }, INITIAL_SCENE_UPDATE_TIMEOUT);\n\n    // All socket listeners are moving to Portal\n    this.portal.socket!.on(\n      \"client-broadcast\",\n      async (encryptedData: ArrayBuffer, iv: Uint8Array) => {\n        if (!this.portal.roomKey) {\n          return;\n        }\n        const decryptedData = await decryptAESGEM(\n          encryptedData,\n          this.portal.roomKey,\n          iv,\n        );\n\n        switch (decryptedData.type) {\n          case \"INVALID_RESPONSE\":\n            return;\n          case SCENE.INIT: {\n            if (!this.portal.socketInitialized) {\n              this.initializeSocket();\n              const remoteElements = decryptedData.payload.elements;\n              const reconciledElements = this.reconcileElements(remoteElements);\n              this.handleRemoteSceneUpdate(reconciledElements, {\n                init: true,\n              });\n              // noop if already resolved via init from firebase\n              scenePromise.resolve({\n                elements: reconciledElements,\n                scrollToContent: true,\n              });\n            }\n            break;\n          }\n          case SCENE.UPDATE:\n            this.handleRemoteSceneUpdate(\n              this.reconcileElements(decryptedData.payload.elements),\n            );\n            break;\n          case \"MOUSE_LOCATION\": {\n            const {\n              pointer,\n              button,\n              username,\n              selectedElementIds,\n            } = decryptedData.payload;\n            const socketId: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"socketId\"] =\n              decryptedData.payload.socketId ||\n              // @ts-ignore legacy, see #2094 (#2097)\n              decryptedData.payload.socketID;\n\n            const collaborators = new Map(this.collaborators);\n            const user = collaborators.get(socketId) || {}!;\n            user.pointer = pointer;\n            user.button = button;\n            user.selectedElementIds = selectedElementIds;\n            user.username = username;\n            collaborators.set(socketId, user);\n            this.excalidrawAPI.updateScene({\n              collaborators,\n            });\n            break;\n          }\n          case \"IDLE_STATUS\": {\n            const { userState, socketId, username } = decryptedData.payload;\n            const collaborators = new Map(this.collaborators);\n            const user = collaborators.get(socketId) || {}!;\n            user.userState = userState;\n            user.username = username;\n            this.excalidrawAPI.updateScene({\n              collaborators,\n            });\n            break;\n          }\n        }\n      },\n    );\n\n    this.portal.socket!.on(\"first-in-room\", () => {\n      if (this.portal.socket) {\n        this.portal.socket.off(\"first-in-room\");\n      }\n      this.initializeSocket();\n      scenePromise.resolve(null);\n    });\n\n    this.initializeIdleDetector();\n\n    this.setState({\n      activeRoomLink: window.location.href,\n    });\n\n    return scenePromise;\n  };\n\n  private initializeSocket = () => {\n    this.portal.socketInitialized = true;\n    clearTimeout(this.socketInitializationTimer!);\n  };\n\n  private reconcileElements = (\n    elements: readonly ExcalidrawElement[],\n  ): ReconciledElements => {\n    const currentElements = this.getSceneElementsIncludingDeleted();\n    // create a map of ids so we don't have to iterate\n    // over the array more than once.\n    const localElementMap = getElementMap(currentElements);\n\n    const appState = this.excalidrawAPI.getAppState();\n\n    // Reconcile\n    const newElements: readonly ExcalidrawElement[] = elements\n      .reduce((elements, element) => {\n        // if the remote element references one that's currently\n        // edited on local, skip it (it'll be added in the next step)\n        if (\n          element.id === appState.editingElement?.id ||\n          element.id === appState.resizingElement?.id ||\n          element.id === appState.draggingElement?.id\n        ) {\n          return elements;\n        }\n\n        if (\n          localElementMap.hasOwnProperty(element.id) &&\n          localElementMap[element.id].version > element.version\n        ) {\n          elements.push(localElementMap[element.id]);\n          delete localElementMap[element.id];\n        } else if (\n          localElementMap.hasOwnProperty(element.id) &&\n          localElementMap[element.id].version === element.version &&\n          localElementMap[element.id].versionNonce !== element.versionNonce\n        ) {\n          // resolve conflicting edits deterministically by taking the one with the lowest versionNonce\n          if (localElementMap[element.id].versionNonce < element.versionNonce) {\n            elements.push(localElementMap[element.id]);\n          } else {\n            // it should be highly unlikely that the two versionNonces are the same. if we are\n            // really worried about this, we can replace the versionNonce with the socket id.\n            elements.push(element);\n          }\n          delete localElementMap[element.id];\n        } else {\n          elements.push(element);\n          delete localElementMap[element.id];\n        }\n\n        return elements;\n      }, [] as Mutable<typeof elements>)\n      // add local elements that weren't deleted or on remote\n      .concat(...Object.values(localElementMap));\n\n    // Avoid broadcasting to the rest of the collaborators the scene\n    // we just received!\n    // Note: this needs to be set before updating the scene as it\n    // synchronously calls render.\n    this.setLastBroadcastedOrReceivedSceneVersion(getSceneVersion(newElements));\n\n    return newElements as ReconciledElements;\n  };\n\n  private handleRemoteSceneUpdate = (\n    elements: ReconciledElements,\n    { init = false }: { init?: boolean } = {},\n  ) => {\n    this.excalidrawAPI.updateScene({\n      elements,\n      commitToHistory: !!init,\n    });\n\n    // We haven't yet implemented multiplayer undo functionality, so we clear the undo stack\n    // when we receive any messages from another peer. This UX can be pretty rough -- if you\n    // undo, a user makes a change, and then try to redo, your element(s) will be lost. However,\n    // right now we think this is the right tradeoff.\n    this.excalidrawAPI.history.clear();\n  };\n\n  private onPointerMove = () => {\n    if (this.idleTimeoutId) {\n      window.clearTimeout(this.idleTimeoutId);\n      this.idleTimeoutId = null;\n    }\n    this.idleTimeoutId = window.setTimeout(this.reportIdle, IDLE_THRESHOLD);\n    if (!this.activeIntervalId) {\n      this.activeIntervalId = window.setInterval(\n        this.reportActive,\n        ACTIVE_THRESHOLD,\n      );\n    }\n  };\n\n  private onVisibilityChange = () => {\n    if (document.hidden) {\n      if (this.idleTimeoutId) {\n        window.clearTimeout(this.idleTimeoutId);\n        this.idleTimeoutId = null;\n      }\n      if (this.activeIntervalId) {\n        window.clearInterval(this.activeIntervalId);\n        this.activeIntervalId = null;\n      }\n      this.onIdleStateChange(UserIdleState.AWAY);\n    } else {\n      this.idleTimeoutId = window.setTimeout(this.reportIdle, IDLE_THRESHOLD);\n      this.activeIntervalId = window.setInterval(\n        this.reportActive,\n        ACTIVE_THRESHOLD,\n      );\n      this.onIdleStateChange(UserIdleState.ACTIVE);\n    }\n  };\n\n  private reportIdle = () => {\n    this.onIdleStateChange(UserIdleState.IDLE);\n    if (this.activeIntervalId) {\n      window.clearInterval(this.activeIntervalId);\n      this.activeIntervalId = null;\n    }\n  };\n\n  private reportActive = () => {\n    this.onIdleStateChange(UserIdleState.ACTIVE);\n  };\n\n  private initializeIdleDetector = () => {\n    document.addEventListener(EVENT.POINTER_MOVE, this.onPointerMove);\n    document.addEventListener(EVENT.VISIBILITY_CHANGE, this.onVisibilityChange);\n  };\n\n  setCollaborators(sockets: string[]) {\n    this.setState((state) => {\n      const collaborators: InstanceType<\n        typeof CollabWrapper\n      >[\"collaborators\"] = new Map();\n      for (const socketId of sockets) {\n        if (this.collaborators.has(socketId)) {\n          collaborators.set(socketId, this.collaborators.get(socketId)!);\n        } else {\n          collaborators.set(socketId, {});\n        }\n      }\n      this.collaborators = collaborators;\n      this.excalidrawAPI.updateScene({ collaborators });\n    });\n  }\n\n  public setLastBroadcastedOrReceivedSceneVersion = (version: number) => {\n    this.lastBroadcastedOrReceivedSceneVersion = version;\n  };\n\n  public getLastBroadcastedOrReceivedSceneVersion = () => {\n    return this.lastBroadcastedOrReceivedSceneVersion;\n  };\n\n  public getSceneElementsIncludingDeleted = () => {\n    return this.excalidrawAPI.getSceneElementsIncludingDeleted();\n  };\n\n  onPointerUpdate = (payload: {\n    pointer: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"pointer\"];\n    button: SocketUpdateDataSource[\"MOUSE_LOCATION\"][\"payload\"][\"button\"];\n    pointersMap: Gesture[\"pointers\"];\n  }) => {\n    payload.pointersMap.size < 2 &&\n      this.portal.socket &&\n      this.portal.broadcastMouseLocation(payload);\n  };\n\n  onIdleStateChange = (userState: UserIdleState) => {\n    this.setState({ userState });\n    this.portal.broadcastIdleChange(userState);\n  };\n\n  broadcastElements = (elements: readonly ExcalidrawElement[]) => {\n    if (\n      getSceneVersion(elements) >\n      this.getLastBroadcastedOrReceivedSceneVersion()\n    ) {\n      this.portal.broadcastScene(\n        SCENE.UPDATE,\n        this.getSyncableElements(elements),\n        false,\n      );\n      this.lastBroadcastedOrReceivedSceneVersion = getSceneVersion(elements);\n      this.queueBroadcastAllElements();\n    }\n  };\n\n  queueBroadcastAllElements = throttle(() => {\n    this.portal.broadcastScene(\n      SCENE.UPDATE,\n      this.getSyncableElements(\n        this.excalidrawAPI.getSceneElementsIncludingDeleted(),\n      ),\n      true,\n    );\n    const currentVersion = this.getLastBroadcastedOrReceivedSceneVersion();\n    const newVersion = Math.max(\n      currentVersion,\n      getSceneVersion(this.getSceneElementsIncludingDeleted()),\n    );\n    this.setLastBroadcastedOrReceivedSceneVersion(newVersion);\n  }, SYNC_FULL_SCENE_INTERVAL_MS);\n\n  handleClose = () => {\n    this.setState({ modalIsShown: false });\n  };\n\n  onUsernameChange = (username: string) => {\n    this.setState({ username });\n    saveUsernameToLocalStorage(username);\n  };\n\n  onCollabButtonClick = () => {\n    this.setState({\n      modalIsShown: true,\n    });\n  };\n\n  getSyncableElements = (elements: readonly ExcalidrawElement[]) =>\n    elements.filter((el) => el.isDeleted || !isInvisiblySmallElement(el));\n\n  /** PRIVATE. Use `this.getContextValue()` instead. */\n  private contextValue: CollabAPI | null = null;\n\n  /** Getter of context value. Returned object is stable. */\n  getContextValue = (): CollabAPI => {\n    if (!this.contextValue) {\n      this.contextValue = {} as CollabAPI;\n    }\n\n    this.contextValue.isCollaborating = () => this.isCollaborating;\n    this.contextValue.username = this.state.username;\n    this.contextValue.onPointerUpdate = this.onPointerUpdate;\n    this.contextValue.initializeSocketClient = this.initializeSocketClient;\n    this.contextValue.onCollabButtonClick = this.onCollabButtonClick;\n    this.contextValue.broadcastElements = this.broadcastElements;\n    return this.contextValue;\n  };\n\n  render() {\n    const { modalIsShown, username, errorMessage, activeRoomLink } = this.state;\n\n    return (\n      <>\n        {modalIsShown && (\n          <RoomDialog\n            handleClose={this.handleClose}\n            activeRoomLink={activeRoomLink}\n            username={username}\n            onUsernameChange={this.onUsernameChange}\n            onRoomCreate={this.openPortal}\n            onRoomDestroy={this.closePortal}\n            setErrorMessage={(errorMessage) => {\n              this.setState({ errorMessage });\n            }}\n            theme={this.excalidrawAPI.getAppState().theme}\n          />\n        )}\n        {errorMessage && (\n          <ErrorDialog\n            message={errorMessage}\n            onClose={() => this.setState({ errorMessage: \"\" })}\n          />\n        )}\n        <CollabContextProvider\n          value={{\n            api: this.getContextValue(),\n          }}\n        />\n      </>\n    );\n  }\n}\n\ndeclare global {\n  interface Window {\n    collab: InstanceType<typeof CollabWrapper>;\n  }\n}\n\nif (\n  process.env.NODE_ENV === ENV.TEST ||\n  process.env.NODE_ENV === ENV.DEVELOPMENT\n) {\n  window.collab = window.collab || ({} as Window[\"collab\"]);\n}\n\nexport default CollabWrapper;\n","import React from \"react\";\n\nexport const createInverseContext = <T extends unknown = null>(\n  initialValue: T,\n) => {\n  const Context = React.createContext(initialValue) as React.Context<T> & {\n    _updateProviderValue?: (value: T) => void;\n  };\n\n  class InverseConsumer extends React.Component {\n    state = { value: initialValue };\n    constructor(props: any) {\n      super(props);\n      Context._updateProviderValue = (value: T) => this.setState({ value });\n    }\n    render() {\n      return (\n        <Context.Provider value={this.state.value}>\n          {this.props.children}\n        </Context.Provider>\n      );\n    }\n  }\n\n  class InverseProvider extends React.Component<{ value: T }> {\n    componentDidMount() {\n      Context._updateProviderValue?.(this.props.value);\n    }\n    componentDidUpdate() {\n      Context._updateProviderValue?.(this.props.value);\n    }\n    render() {\n      return <Context.Consumer>{() => this.props.children}</Context.Consumer>;\n    }\n  }\n\n  return {\n    Context,\n    Consumer: InverseConsumer,\n    Provider: InverseProvider,\n  };\n};\n","import React from \"react\";\nimport * as i18n from \"../../i18n\";\n\nexport const LanguageList = ({\n  onChange,\n  languages = i18n.languages,\n  currentLangCode = i18n.getLanguage().code,\n}: {\n  languages?: { code: string; label: string }[];\n  onChange: (langCode: i18n.Language[\"code\"]) => void;\n  currentLangCode?: i18n.Language[\"code\"];\n}) => (\n  <React.Fragment>\n    <select\n      className=\"dropdown-select dropdown-select__language\"\n      onChange={({ target }) => onChange(target.value)}\n      value={currentLangCode}\n      aria-label={i18n.t(\"buttons.selectLanguage\")}\n    >\n      <option key={i18n.defaultLang.code} value={i18n.defaultLang.code}>\n        {i18n.defaultLang.label}\n      </option>\n      {languages.map((lang) => (\n        <option key={lang.code} value={lang.code}>\n          {lang.label}\n        </option>\n      ))}\n    </select>\n  </React.Fragment>\n);\n","import React, { useEffect, useState } from \"react\";\nimport { debounce, getVersion, nFormatter } from \"../utils\";\nimport {\n  getElementsStorageSize,\n  getTotalStorageSize,\n} from \"./data/localStorage\";\nimport { DEFAULT_VERSION } from \"../constants\";\nimport { t } from \"../i18n\";\nimport { copyTextToSystemClipboard } from \"../clipboard\";\ntype StorageSizes = { scene: number; total: number };\n\nconst STORAGE_SIZE_TIMEOUT = 500;\n\nconst getStorageSizes = debounce((cb: (sizes: StorageSizes) => void) => {\n  cb({\n    scene: getElementsStorageSize(),\n    total: getTotalStorageSize(),\n  });\n}, STORAGE_SIZE_TIMEOUT);\n\ntype Props = {\n  setToastMessage: (message: string) => void;\n};\nconst CustomStats = (props: Props) => {\n  const [storageSizes, setStorageSizes] = useState<StorageSizes>({\n    scene: 0,\n    total: 0,\n  });\n\n  useEffect(() => {\n    getStorageSizes((sizes) => {\n      setStorageSizes(sizes);\n    });\n  });\n  useEffect(() => () => getStorageSizes.cancel(), []);\n\n  const version = getVersion();\n  let hash;\n  let timestamp;\n\n  if (version !== DEFAULT_VERSION) {\n    timestamp = version.slice(0, 16).replace(\"T\", \" \");\n    hash = version.slice(21);\n  } else {\n    timestamp = t(\"stats.versionNotAvailable\");\n  }\n\n  return (\n    <>\n      <tr>\n        <th colSpan={2}>{t(\"stats.storage\")}</th>\n      </tr>\n      <tr>\n        <td>{t(\"stats.scene\")}</td>\n        <td>{nFormatter(storageSizes.scene, 1)}</td>\n      </tr>\n      <tr>\n        <td>{t(\"stats.total\")}</td>\n        <td>{nFormatter(storageSizes.total, 1)}</td>\n      </tr>\n      <tr>\n        <th colSpan={2}>{t(\"stats.version\")}</th>\n      </tr>\n      <tr>\n        <td\n          colSpan={2}\n          style={{ textAlign: \"center\", cursor: \"pointer\" }}\n          onClick={async () => {\n            try {\n              await copyTextToSystemClipboard(getVersion());\n              props.setToastMessage(t(\"toast.copyToClipboard\"));\n            } catch {}\n          }}\n          title={t(\"stats.versionCopy\")}\n        >\n          {timestamp}\n          <br />\n          {hash}\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default CustomStats;\n","import { createIcon } from \"../../components/icons\";\n\nexport const excalidrawPlusIcon = createIcon(\n  <>\n    <path\n      d=\"M72.652 63.598c-1.368.91-1.191 2.833-.953 4.572.702 5.104.47 5.323 1.073 7.016.649 1.826.433 2.553-.08 3.292-.406.588-1.207 1.371-1.906 1.516-.98.204-2.967.01-3.922-.246-.643-.174-1.292-.94-1.598-1.53-.389-.751-1.256-1.951-.694-3.593.56-1.64 1.325-5.374 1.363-6.108.098-1.904.02-3.934-1.085-5.014-1.104-1.082-3.941-1.055-5.739-1.038-1.723.017-3.583 1.207-5.045 1.141-1.343-.061-2.939-.686-3.728-1.536-.79-.852-1.082-2.469-1.007-3.57.074-1.1.726-2.398 1.454-3.033.727-.635 1.91-.867 2.909-.777 1.472.13 4.1 1.342 5.928 1.564 1.67.203 4.016.501 5.04-.227 1.021-.73 1.048-2.717 1.094-4.145.07-2.063-1.021-6.528-.683-8.23.22-1.098 1.709-1.696 2.717-1.979 1.007-.282 2.521-.125 3.328.285.788.398 1.499 1.29 1.516 2.173.031 1.68-1.209 5.66-1.322 7.905-.058 1.133-.61 3.124.482 3.764 1.264.74 2.95 1.778 7.1.673 1.765-.47 3.157-.689 4.62-.622 1.342.06 2.939.685 3.728 1.536.787.85 1.08 2.468 1.006 3.568-.074 1.101-.726 2.4-1.454 3.035-.727.634-1.908.866-2.908.777-1.473-.13-3.164-.68-4.88-1.248-2.526-.835-5.176-.708-6.354.079z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M51.396 25.807c0 .237-.285.474-.617.474-.284 0-1.09 1.328-1.708 2.941-1.897 4.934-20.873 42.46-20.92 41.273 0-.616-.285-1.043-.76-1.043-.664 0-.759.38-.474 2.23.284 2.134.095 2.609-6.642 15.702-3.795 7.448-7.875 15.228-9.06 17.316-1.234 2.182-2.183 4.554-2.278 5.55-.142 1.708.047 1.945 4.175 5.503 2.372 2.088 5.408 4.697 6.736 5.883 5.978 5.456 8.777 7.638 9.536 7.496 1.138-.19 18.739-18.644 18.786-19.688 0-.475-.854-7.685-1.898-16.035-1.802-14.232-3.51-30.884-3.32-32.497.142-.996-.57-6.024-1.092-8.207-.426-1.708-.237-2.42 3.179-10.2 1.992-4.601 4.602-10.247 5.74-12.524 1.091-2.277 2.04-4.27 2.04-4.412 0-.142-.332-.237-.711-.237-.38 0-.712.19-.712.475zM40.485 61.245c.522 3.32 1.565 11.29 2.324 17.695 1.47 11.765 3.179 24.811 3.653 28.132.285 1.66.095 1.992-2.989 5.408-5.36 6.025-11.053 11.955-12.998 13.473l-1.803 1.423-9.25-8.634c-8.54-7.875-9.252-8.681-8.73-9.63.285-.522 2.704-4.934 5.361-9.773 2.657-4.839 6.167-11.29 7.78-14.327 1.66-3.084 3.179-5.74 3.463-5.882.332-.19.427 4.601.332 14.8-.19 15.23-.142 15.277 1.376 14.945.19 0 .332-7.686.332-17.031V74.86l4.981-9.963c2.752-5.503 5.03-9.915 5.124-9.867.095.047.57 2.846 1.044 6.215zM20.228 3.842c-3.51 2.799-8.919 7.543-13.189 11.623l-3.368 3.178.617 4.175c.332 2.277.949 6.736 1.328 9.867.427 3.132.854 6.073.996 6.5.19.57 0 .854-.521.854-.902 0-.95-.237 1.518 7.59.901 2.989 1.755 5.74 1.85 6.025.095.332.474.474.901.332.427-.19.664-.57.522-.901-.142-.38.095-.76.474-.902.522-.19.475-.569-.332-1.945-1.28-2.134-4.554-20.352-4.744-26.234-.142-4.175-.142-4.222 1.613-6.594 1.708-2.325 5.646-5.835 11.718-10.295 1.708-1.28 3.416-2.704 3.89-3.178.712-.854 1.044-.617 7.021 5.74 3.463 3.653 7.306 7.4 8.54 8.35l2.277 1.707-1.756 3.7c-.948 1.993-4.791 9.678-8.586 16.984-7.923 15.37-6.31 13.9-15.513 14.043l-5.978.047-1.992 2.277c-2.088 2.42-2.372 3.32-1.376 4.839.38.522.664 1.376.664 1.898 0 .854.332.996 2.23 1.09 1.186.048 2.277.19 2.42.333.142.142.331 3.083.474 6.547l.19 6.262-3.179 6.831c-5.266 11.386-7.353 16.604-7.353 18.312 0 .901.19 1.66.38 1.66.474 0 .474-.047 19.782-40.324 8.966-18.691 17.458-36.292 18.881-39.185 1.423-2.894 2.704-5.55 2.799-5.93.095-.427-3.178-3.7-8.397-8.303-4.696-4.174-8.824-7.97-9.203-8.396-1.091-1.329-2.704-.902-5.598 1.423zm-2.372 62.147c-.38.996-1.376 3.083-2.183 4.649-1.328 2.656-1.47 2.751-1.802 1.66-.19-.664-.332-2.61-.38-4.364-.047-3.464-.142-3.416 3.843-3.653l1.28-.048-.758 1.756zm3.985-7.59c-2.183 4.221-2.277 4.269-8.255 4.553-5.266.285-5.36.238-5.36-.759 0-.569-.19-1.328-.428-1.708-.284-.426-.094-1.186.57-2.23l1.043-1.612h4.744c2.61-.048 5.598-.237 6.642-.427 1.044-.19 1.945-.285 2.04-.237.095.047-.38 1.138-.996 2.42zm-.19-43.266c-.854.616-1.091 1.233-1.091 2.799 0 1.85.142 2.134 1.423 2.656 1.28.522 1.613.475 3.084-.522 1.945-1.328 1.992-1.66.569-3.795-1.234-1.85-2.467-2.182-3.985-1.138z\"\n      fill=\"currentColor\"\n    />\n    <path\n      d=\"M50.141 24.917c.352-.615 1.06-1.085 1.967-1.085.804 0 1.477.34 1.734.597.342.342.477.74.477 1.14 0 .089-.006.305-.119.612-.168.461-1.056 2.337-2.08 4.471-1.131 2.264-3.724 7.875-5.708 12.457-1.671 3.806-2.558 5.881-2.97 7.216-.301.975-.279 1.406-.123 2.032.558 2.33 1.27 7.704 1.122 8.73-.187 1.596 1.537 18.06 3.32 32.136 1.056 8.446 1.91 15.74 1.91 16.22l-.002.07c-.009.184-.087.607-.447 1.14-.506.747-1.932 2.414-3.805 4.476-4.242 4.672-10.806 11.46-13.673 14.059-.682.617-1.199 1.023-1.472 1.182a1.872 1.872 0 01-.612.236c-.41.077-1.225-.015-2.35-.737-1.495-.959-4.19-3.217-8.46-7.114-1.327-1.184-4.36-3.79-6.718-5.865-1.712-1.476-2.767-2.405-3.411-3.096-.677-.727-.994-1.291-1.16-1.839-.165-.544-.18-1.09-.117-1.847.104-1.1 1.103-3.737 2.466-6.15 1.182-2.08 5.247-9.833 9.031-17.26 3.34-6.491 5.06-9.853 5.906-11.859.677-1.603.696-2.113.587-2.93-.18-1.168-.195-1.884-.111-2.308.1-.511.321-.851.58-1.1.346-.331.813-.55 1.488-.55.199 0 .391.024.574.07 4.068-7.268 18.093-35.143 19.705-39.334.585-1.53 1.353-2.823 1.794-3.288.228-.24.462-.39.677-.482zM38.72 59.573a448.835 448.835 0 00-3.06 5.995l-4.823 9.646v16.63c0 8.501-.124 15.643-.287 16.987-.142 1.166-1.002 1.462-1.384 1.526l.16-.017c-.671.147-1.214.135-1.647-.047-.495-.209-1.058-.629-1.33-1.813-.332-1.439-.336-5.202-.22-14.563.04-4.272.047-7.59.016-9.984-.33.582-.666 1.188-.986 1.783-1.615 3.04-5.13 9.5-7.79 14.345-2.383 4.34-4.576 8.338-5.207 9.493.131.186.356.489.61.77 1.165 1.287 3.451 3.428 7.667 7.316l8.316 7.76.798-.63c1.917-1.495 7.517-7.35 12.808-13.295.898-.995 1.544-1.72 2-2.29.37-.464.594-.76.675-1.06.067-.247.004-.478-.051-.8l-.007-.041c-.475-3.324-2.184-16.382-3.657-28.168-.757-6.384-1.797-14.328-2.317-17.639l-.004-.023c-.089-.635-.185-1.272-.28-1.881zM19.289 2.67c1.673-1.343 3-2.096 4.04-2.364 1.537-.394 2.687.004 3.621 1.119.396.44 4.46 4.165 9.071 8.264 4.274 3.769 7.265 6.676 8.244 7.909.69.868.68 1.598.625 1.844-.002.013-.006.026-.009.038-.1.398-1.416 3.195-2.908 6.228-1.423 2.893-9.912 20.488-18.875 39.173C7.581 97.252 4.465 103.75 3.6 105.058c-.497.751-.885.854-1.111.924a1.729 1.729 0 01-.526.076c-.42 0-.964-.148-1.368-.767-.223-.342-.511-1.288-.511-2.394 0-.606.19-1.592.67-3.03.955-2.866 3.1-7.864 6.821-15.911l3.03-6.513-.178-5.89a153.908 153.908 0 00-.33-5.346c-.352-.041-.773-.081-1.14-.096-.98-.049-1.616-.131-2.03-.261-.645-.204-1.016-.535-1.267-.928-.221-.348-.358-.79-.358-1.4 0-.282-.173-.735-.377-1.016l-.04-.059c-.621-.945-.859-1.757-.79-2.608.085-1.023.72-2.222 2.283-4.034l1.607-1.836c-.218-.687-.996-3.199-1.807-5.89-1.558-4.942-2.122-6.841-2.152-7.56-.034-.83.282-1.245.57-1.51a1.53 1.53 0 01.406-.265c-.217-1.235-.55-3.498-.875-5.878a488.89 488.89 0 00-1.323-9.829l-.617-4.175a1.5 1.5 0 01.455-1.31l3.361-3.172c4.301-4.11 9.749-8.888 13.287-11.709zm-3.879 71.31c-.31.283-.612.394-.858.441a1.547 1.547 0 01-1.04-.132l.103 3.418v.018l1.795-3.746zm12.426 1.473a23.55 23.55 0 01-.225.553 43.912 43.912 0 01-.763 1.686c.328-.11.65-.094.966.015l.022.008v-2.262zm1.524-3.996l-.032.037a1.575 1.575 0 01-.862.5c.042.411.057.798 0 1.25l.894-1.787zM16.286 65.87c-.566.056-1.034.117-1.267.149-.014.118-.03.275-.035.408-.012.4-.001.889.007 1.466.006.237.014.477.024.716.49-.997.97-2.02 1.271-2.739zm4.486-3.076a4.31 4.31 0 01-.88.654c.136.22.21.469.22.721l.281-.585.38-.79zm-.299-5.017c-1.381.168-3.98.324-6.29.365h-3.956l-.594.92c-.19.298-.36.7-.429.874.215.444.399 1.073.478 1.666h.014c.771.012 1.964-.048 3.819-.148 2.63-.125 3.979-.11 4.898-.616.326-.18.561-.453.817-.83.374-.551.75-1.276 1.243-2.23zm4.52-3.77a6.345 6.345 0 01-1.098.892c.156.141.3.333.383.595l.714-1.487zm15.241-3.122c-.47.934-.941 1.866-1.41 2.789.6-.264 1.192-.034 1.288.014.079.04.308.15.517.425a27.335 27.335 0 00-.224-1.044c-.185-.74-.289-1.336-.17-2.184zM24.148 5.38c-.758.673-2.198 1.856-3.649 2.944-5.896 4.33-9.738 7.717-11.4 9.978-.594.803-.97 1.279-1.177 1.801-.316.802-.217 1.685-.143 3.852.132 4.065 1.762 14.092 3.157 20.466.555 2.535 1.023 4.46 1.383 5.059.528.9.771 1.5.842 1.889.088.484.016.86-.118 1.167a1.86 1.86 0 01-.27.446l2.687-.021c1.825-.028 3.22.008 4.349-.038.897-.038 1.587-.111 2.187-.396.71-.336 1.26-.968 1.948-2.018 1.313-2.003 2.904-5.314 5.721-10.782 3.785-7.286 7.618-14.95 8.563-16.935l1.23-2.593-1.311-.984c-1.258-.967-5.182-4.782-8.717-8.51-2.604-2.769-4.52-4.608-5.282-5.325zm-11.86 47.181l-.001-.003-.026-.064.027.067zm-1.503-1.764l.059-.024a1.07 1.07 0 00-.059.024zm42.106-24.884l-.002.022.001-.009.001-.013zm.003-.035l.002-.071-.002.071zM20.773 13.917c-1.241.896-1.713 1.74-1.713 4.015 0 1.663.252 2.444.727 3.002.334.391.822.714 1.63 1.043.743.303 1.275.437 1.771.44.735.005 1.457-.254 2.72-1.109 1.495-1.02 2.072-1.825 2.19-2.615.111-.744-.188-1.715-1.214-3.254-.872-1.307-1.805-2.006-2.727-2.266-1.036-.292-2.15-.105-3.356.723l-.028.02zm4.263 4.285c-.128-.242-.375-.69-.648-1.099-.4-.598-.691-1.03-1.123-1.056-.24-.015-.473.123-.744.308-.461.337-.461.721-.461 1.577 0 .417.04.883.058 1.064.1.052.282.142.431.203.283.115.47.216.66.218.084 0 .152-.057.255-.113.215-.115.46-.275.757-.476.311-.213.632-.472.815-.626zM19.293 2.669l-.005.003.005-.003z\"\n      fill=\"currentColor\"\n    />\n  </>,\n  { width: 89, height: 131, style: { transform: \"translateX(4px)\" } },\n);\n","import React from \"react\";\nimport { Card } from \"../../components/Card\";\nimport { ToolButton } from \"../../components/ToolButton\";\nimport { serializeAsJSON } from \"../../data/json\";\nimport { getImportedKey, createIV, generateEncryptionKey } from \"../data\";\nimport { loadFirebaseStorage } from \"../data/firebase\";\nimport { NonDeletedExcalidrawElement } from \"../../element/types\";\nimport { AppState } from \"../../types\";\nimport { nanoid } from \"nanoid\";\nimport { t } from \"../../i18n\";\nimport { excalidrawPlusIcon } from \"./icons\";\n\nconst encryptData = async (\n  key: string,\n  json: string,\n): Promise<{ blob: Blob; iv: Uint8Array }> => {\n  const importedKey = await getImportedKey(key, \"encrypt\");\n  const iv = createIV();\n  const encoded = new TextEncoder().encode(json);\n  const ciphertext = await window.crypto.subtle.encrypt(\n    {\n      name: \"AES-GCM\",\n      iv,\n    },\n    importedKey,\n    encoded,\n  );\n\n  return { blob: new Blob([new Uint8Array(ciphertext)]), iv };\n};\n\nconst exportToExcalidrawPlus = async (\n  elements: readonly NonDeletedExcalidrawElement[],\n  appState: AppState,\n) => {\n  const firebase = await loadFirebaseStorage();\n\n  const id = `${nanoid(12)}`;\n\n  const key = (await generateEncryptionKey())!;\n  const encryptedData = await encryptData(\n    key,\n    serializeAsJSON(elements, appState),\n  );\n\n  const blob = new Blob([encryptedData.iv, encryptedData.blob], {\n    type: \"application/octet-stream\",\n  });\n\n  await firebase\n    .storage()\n    .ref(`/migrations/scenes/${id}`)\n    .put(blob, {\n      customMetadata: {\n        data: JSON.stringify({ version: 1, name: appState.name }),\n        created: Date.now().toString(),\n      },\n    });\n\n  window.open(`https://plus.excalidraw.com/import?excalidraw=${id},${key}`);\n};\n\nexport const ExportToExcalidrawPlus: React.FC<{\n  elements: readonly NonDeletedExcalidrawElement[];\n  appState: AppState;\n  onError: (error: Error) => void;\n}> = ({ elements, appState, onError }) => {\n  return (\n    <Card color=\"indigo\">\n      <div className=\"Card-icon\">{excalidrawPlusIcon}</div>\n      <h2>Excalidraw+</h2>\n      <div className=\"Card-details\">\n        {t(\"exportDialog.excalidrawplus_description\")}\n      </div>\n      <ToolButton\n        className=\"Card-button\"\n        type=\"button\"\n        title={t(\"exportDialog.excalidrawplus_button\")}\n        aria-label={t(\"exportDialog.excalidrawplus_button\")}\n        showAriaLabel={true}\n        onClick={async () => {\n          try {\n            await exportToExcalidrawPlus(elements, appState);\n          } catch (error) {\n            console.error(error);\n            onError(new Error(t(\"exportDialog.excalidrawplus_exportError\")));\n          }\n        }}\n      />\n    </Card>\n  );\n};\n","import LanguageDetector from \"i18next-browser-languagedetector\";\nimport React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport { trackEvent } from \"../analytics\";\nimport { getDefaultAppState } from \"../appState\";\nimport { ErrorDialog } from \"../components/ErrorDialog\";\nimport { TopErrorBoundary } from \"../components/TopErrorBoundary\";\nimport {\n  APP_NAME,\n  EVENT,\n  STORAGE_KEYS,\n  TITLE_TIMEOUT,\n  URL_HASH_KEYS,\n  VERSION_TIMEOUT,\n} from \"../constants\";\nimport { loadFromBlob } from \"../data/blob\";\nimport { ImportedDataState } from \"../data/types\";\nimport {\n  ExcalidrawElement,\n  NonDeletedExcalidrawElement,\n} from \"../element/types\";\nimport { useCallbackRefState } from \"../hooks/useCallbackRefState\";\nimport { Language, t } from \"../i18n\";\nimport Excalidraw, {\n  defaultLang,\n  languages,\n} from \"../packages/excalidraw/index\";\nimport { AppState, LibraryItems, ExcalidrawImperativeAPI } from \"../types\";\nimport {\n  debounce,\n  getVersion,\n  ResolvablePromise,\n  resolvablePromise,\n} from \"../utils\";\nimport { SAVE_TO_LOCAL_STORAGE_TIMEOUT } from \"./app_constants\";\nimport CollabWrapper, {\n  CollabAPI,\n  CollabContext,\n  CollabContextConsumer,\n} from \"./collab/CollabWrapper\";\nimport { LanguageList } from \"./components/LanguageList\";\nimport { exportToBackend, getCollaborationLinkData, loadScene } from \"./data\";\nimport {\n  importFromLocalStorage,\n  saveToLocalStorage,\n} from \"./data/localStorage\";\nimport CustomStats from \"./CustomStats\";\nimport { restoreAppState, RestoredDataState } from \"../data/restore\";\nimport { Tooltip } from \"../components/Tooltip\";\nimport { shield } from \"../components/icons\";\n\nimport \"./index.scss\";\nimport { ExportToExcalidrawPlus } from \"./components/ExportToExcalidrawPlus\";\n\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init({\n  languageUtils: {\n    formatLanguageCode: (langCode: Language[\"code\"]) => langCode,\n    isWhitelisted: () => true,\n  },\n  checkWhitelist: false,\n});\n\nconst saveDebounced = debounce(\n  (elements: readonly ExcalidrawElement[], state: AppState) => {\n    saveToLocalStorage(elements, state);\n  },\n  SAVE_TO_LOCAL_STORAGE_TIMEOUT,\n);\n\nconst onBlur = () => {\n  saveDebounced.flush();\n};\n\nconst initializeScene = async (opts: {\n  collabAPI: CollabAPI;\n}): Promise<ImportedDataState | null> => {\n  const searchParams = new URLSearchParams(window.location.search);\n  const id = searchParams.get(\"id\");\n  const jsonBackendMatch = window.location.hash.match(\n    /^#json=([0-9]+),([a-zA-Z0-9_-]+)$/,\n  );\n  const externalUrlMatch = window.location.hash.match(/^#url=(.*)$/);\n\n  const localDataState = importFromLocalStorage();\n\n  let scene: RestoredDataState & {\n    scrollToContent?: boolean;\n  } = await loadScene(null, null, localDataState);\n\n  let roomLinkData = getCollaborationLinkData(window.location.href);\n  const isExternalScene = !!(id || jsonBackendMatch || roomLinkData);\n  if (isExternalScene) {\n    if (\n      // don't prompt if scene is empty\n      !scene.elements.length ||\n      // don't prompt for collab scenes because we don't override local storage\n      roomLinkData ||\n      // otherwise, prompt whether user wants to override current scene\n      window.confirm(t(\"alerts.loadSceneOverridePrompt\"))\n    ) {\n      // Backwards compatibility with legacy url format\n      if (id) {\n        scene = await loadScene(id, null, localDataState);\n      } else if (jsonBackendMatch) {\n        scene = await loadScene(\n          jsonBackendMatch[1],\n          jsonBackendMatch[2],\n          localDataState,\n        );\n      }\n      scene.scrollToContent = true;\n      if (!roomLinkData) {\n        window.history.replaceState({}, APP_NAME, window.location.origin);\n      }\n    } else {\n      // https://github.com/excalidraw/excalidraw/issues/1919\n      if (document.hidden) {\n        return new Promise((resolve, reject) => {\n          window.addEventListener(\n            \"focus\",\n            () => initializeScene(opts).then(resolve).catch(reject),\n            {\n              once: true,\n            },\n          );\n        });\n      }\n\n      roomLinkData = null;\n      window.history.replaceState({}, APP_NAME, window.location.origin);\n    }\n  } else if (externalUrlMatch) {\n    window.history.replaceState({}, APP_NAME, window.location.origin);\n\n    const url = externalUrlMatch[1];\n    try {\n      const request = await fetch(window.decodeURIComponent(url));\n      const data = await loadFromBlob(await request.blob(), null, null);\n      if (\n        !scene.elements.length ||\n        window.confirm(t(\"alerts.loadSceneOverridePrompt\"))\n      ) {\n        return data;\n      }\n    } catch (error) {\n      return {\n        appState: {\n          errorMessage: t(\"alerts.invalidSceneUrl\"),\n        },\n      };\n    }\n  }\n\n  if (roomLinkData) {\n    return opts.collabAPI.initializeSocketClient(roomLinkData);\n  } else if (scene) {\n    return scene;\n  }\n  return null;\n};\n\nconst PlusLinkJSX = (\n  <p style={{ direction: \"ltr\", unicodeBidi: \"embed\" }}>\n    Introducing Excalidraw+\n    <br />\n    <a\n      href=\"https://plus.excalidraw.com/?utm_source=excalidraw&utm_medium=banner&utm_campaign=launch\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n    >\n      Try out now!\n    </a>\n  </p>\n);\n\nconst ExcalidrawWrapper = () => {\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const currentLangCode = languageDetector.detect() || defaultLang.code;\n  const [langCode, setLangCode] = useState(currentLangCode);\n\n  // initial state\n  // ---------------------------------------------------------------------------\n\n  const initialStatePromiseRef = useRef<{\n    promise: ResolvablePromise<ImportedDataState | null>;\n  }>({ promise: null! });\n  if (!initialStatePromiseRef.current.promise) {\n    initialStatePromiseRef.current.promise = resolvablePromise<ImportedDataState | null>();\n  }\n\n  useEffect(() => {\n    // Delayed so that the app has a time to load the latest SW\n    setTimeout(() => {\n      trackEvent(\"load\", \"version\", getVersion());\n    }, VERSION_TIMEOUT);\n  }, []);\n\n  const [\n    excalidrawAPI,\n    excalidrawRefCallback,\n  ] = useCallbackRefState<ExcalidrawImperativeAPI>();\n\n  const collabAPI = useContext(CollabContext)?.api;\n\n  useEffect(() => {\n    if (!collabAPI || !excalidrawAPI) {\n      return;\n    }\n\n    initializeScene({ collabAPI }).then((scene) => {\n      if (scene) {\n        try {\n          scene.libraryItems =\n            JSON.parse(\n              localStorage.getItem(\n                STORAGE_KEYS.LOCAL_STORAGE_LIBRARY,\n              ) as string,\n            ) || [];\n        } catch (e) {\n          console.error(e);\n        }\n      }\n      initialStatePromiseRef.current.promise.resolve(scene);\n    });\n\n    const onHashChange = (event: HashChangeEvent) => {\n      event.preventDefault();\n      const hash = new URLSearchParams(window.location.hash.slice(1));\n      const libraryUrl = hash.get(URL_HASH_KEYS.addLibrary);\n      if (libraryUrl) {\n        // If hash changed and it contains library url, import it and replace\n        // the url to its previous state (important in case of collaboration\n        // and similar).\n        // Using history API won't trigger another hashchange.\n        window.history.replaceState({}, \"\", event.oldURL);\n        excalidrawAPI.importLibrary(libraryUrl, hash.get(\"token\"));\n      } else {\n        initializeScene({ collabAPI }).then((scene) => {\n          if (scene) {\n            excalidrawAPI.updateScene({\n              ...scene,\n              appState: restoreAppState(scene.appState, null),\n            });\n          }\n        });\n      }\n    };\n\n    const titleTimeout = setTimeout(\n      () => (document.title = APP_NAME),\n      TITLE_TIMEOUT,\n    );\n    window.addEventListener(EVENT.HASHCHANGE, onHashChange, false);\n    window.addEventListener(EVENT.UNLOAD, onBlur, false);\n    window.addEventListener(EVENT.BLUR, onBlur, false);\n    return () => {\n      window.removeEventListener(EVENT.HASHCHANGE, onHashChange, false);\n      window.removeEventListener(EVENT.UNLOAD, onBlur, false);\n      window.removeEventListener(EVENT.BLUR, onBlur, false);\n      clearTimeout(titleTimeout);\n    };\n  }, [collabAPI, excalidrawAPI]);\n\n  useEffect(() => {\n    languageDetector.cacheUserLanguage(langCode);\n  }, [langCode]);\n\n  const onChange = (\n    elements: readonly ExcalidrawElement[],\n    appState: AppState,\n  ) => {\n    if (collabAPI?.isCollaborating()) {\n      collabAPI.broadcastElements(elements);\n    } else {\n      // collab scenes are persisted to the server, so we don't have to persist\n      // them locally, which has the added benefit of not overwriting whatever\n      // the user was working on before joining\n      saveDebounced(elements, appState);\n    }\n  };\n\n  const onExportToBackend = async (\n    exportedElements: readonly NonDeletedExcalidrawElement[],\n    appState: AppState,\n    canvas: HTMLCanvasElement | null,\n  ) => {\n    if (exportedElements.length === 0) {\n      return window.alert(t(\"alerts.cannotExportEmptyCanvas\"));\n    }\n    if (canvas) {\n      try {\n        await exportToBackend(exportedElements, {\n          ...appState,\n          viewBackgroundColor: appState.exportBackground\n            ? appState.viewBackgroundColor\n            : getDefaultAppState().viewBackgroundColor,\n        });\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          const { width, height } = canvas;\n          console.error(error, { width, height });\n          setErrorMessage(error.message);\n        }\n      }\n    }\n  };\n\n  const renderTopRightUI = useCallback(\n    (isMobile: boolean, appState: AppState) => {\n      return (\n        <div\n          style={{\n            width: \"24ch\",\n            fontSize: \"0.7em\",\n            textAlign: \"center\",\n          }}\n        >\n          {/* <GitHubCorner theme={appState.theme} dir={document.dir} /> */}\n          {/* FIXME remove after 2021-05-20 */}\n          {PlusLinkJSX}\n        </div>\n      );\n    },\n    [],\n  );\n\n  const renderFooter = useCallback(\n    (isMobile: boolean) => {\n      const renderEncryptedIcon = () => (\n        <a\n          className=\"encrypted-icon tooltip\"\n          href=\"https://blog.excalidraw.com/end-to-end-encryption/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label={t(\"encrypted.link\")}\n        >\n          <Tooltip label={t(\"encrypted.tooltip\")} long={true}>\n            {shield}\n          </Tooltip>\n        </a>\n      );\n\n      const renderLanguageList = () => (\n        <LanguageList\n          onChange={(langCode) => setLangCode(langCode)}\n          languages={languages}\n          currentLangCode={langCode}\n        />\n      );\n      if (isMobile) {\n        const isTinyDevice = window.innerWidth < 362;\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: isTinyDevice ? \"column\" : \"row\",\n            }}\n          >\n            <fieldset>\n              <legend>{t(\"labels.language\")}</legend>\n              {renderLanguageList()}\n            </fieldset>\n            {/* FIXME remove after 2021-05-20 */}\n            <div\n              style={{\n                width: \"24ch\",\n                fontSize: \"0.7em\",\n                textAlign: \"center\",\n                marginTop: isTinyDevice ? 16 : undefined,\n                marginLeft: \"auto\",\n                marginRight: isTinyDevice ? \"auto\" : undefined,\n                padding: \"4px 2px\",\n                border: \"1px dashed #aaa\",\n                borderRadius: 12,\n              }}\n            >\n              {PlusLinkJSX}\n            </div>\n          </div>\n        );\n      }\n      return (\n        <>\n          {renderEncryptedIcon()}\n          {renderLanguageList()}\n        </>\n      );\n    },\n    [langCode],\n  );\n\n  const renderCustomStats = () => {\n    return (\n      <CustomStats\n        setToastMessage={(message) => excalidrawAPI!.setToastMessage(message)}\n      />\n    );\n  };\n\n  const onLibraryChange = async (items: LibraryItems) => {\n    if (!items.length) {\n      localStorage.removeItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY);\n      return;\n    }\n    const serializedItems = JSON.stringify(items);\n    localStorage.setItem(STORAGE_KEYS.LOCAL_STORAGE_LIBRARY, serializedItems);\n  };\n\n  return (\n    <>\n      <Excalidraw\n        ref={excalidrawRefCallback}\n        onChange={onChange}\n        initialData={initialStatePromiseRef.current.promise}\n        onCollabButtonClick={collabAPI?.onCollabButtonClick}\n        isCollaborating={collabAPI?.isCollaborating()}\n        onPointerUpdate={collabAPI?.onPointerUpdate}\n        UIOptions={{\n          canvasActions: {\n            export: {\n              onExportToBackend,\n              renderCustomUI: (elements, appState) => {\n                return (\n                  <ExportToExcalidrawPlus\n                    elements={elements}\n                    appState={appState}\n                    onError={(error) => {\n                      excalidrawAPI?.updateScene({\n                        appState: {\n                          errorMessage: error.message,\n                        },\n                      });\n                    }}\n                  />\n                );\n              },\n            },\n          },\n        }}\n        renderTopRightUI={renderTopRightUI}\n        renderFooter={renderFooter}\n        langCode={langCode}\n        renderCustomStats={renderCustomStats}\n        detectScroll={false}\n        handleKeyboardGlobally={true}\n        onLibraryChange={onLibraryChange}\n        autoFocus={true}\n      />\n      {excalidrawAPI && <CollabWrapper excalidrawAPI={excalidrawAPI} />}\n      {errorMessage && (\n        <ErrorDialog\n          message={errorMessage}\n          onClose={() => setErrorMessage(\"\")}\n        />\n      )}\n    </>\n  );\n};\n\nconst ExcalidrawApp = () => {\n  return (\n    <TopErrorBoundary>\n      <CollabContextConsumer>\n        <ExcalidrawWrapper />\n      </CollabContextConsumer>\n    </TopErrorBoundary>\n  );\n};\n\nexport default ExcalidrawApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport const register = (config?: Config) => {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n};\n\nconst registerValidSW = (swUrl: string, config?: Config) => {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              console.info(\n                \"New content is available and will be used when all tabs for this page are closed.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              console.info(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n};\n\nconst checkValidServiceWorker = (swUrl: string, config?: Config) => {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch((error) => {\n      console.info(\n        \"No internet connection found. App is running in offline mode.\",\n        error.message,\n      );\n    });\n};\n\nexport const unregister = () => {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n};\n","import { register as registerServiceWorker } from \"../serviceWorker\";\nimport { EVENT } from \"../constants\";\n\n// On Apple mobile devices add the proprietary app icon and splashscreen markup.\n// No one should have to do this manually, and eventually this annoyance will\n// go away once https://bugs.webkit.org/show_bug.cgi?id=183937 is fixed.\nif (\n  /\\b(iPad|iPhone|iPod|Safari)\\b/.test(navigator.userAgent) &&\n  !matchMedia(\"(display-mode: standalone)\").matches\n) {\n  import(/* webpackChunkName: \"pwacompat\" */ \"pwacompat\");\n}\n\nregisterServiceWorker({\n  onUpdate: (registration) => {\n    const waitingServiceWorker = registration.waiting;\n    if (waitingServiceWorker) {\n      waitingServiceWorker.addEventListener(\n        EVENT.STATE_CHANGE,\n        (event: Event) => {\n          const target = event.target as ServiceWorker;\n          const state = target.state as ServiceWorkerState;\n          if (state === \"activated\") {\n            window.location.reload();\n          }\n        },\n      );\n      waitingServiceWorker.postMessage({ type: \"SKIP_WAITING\" });\n    }\n  },\n});\n","import * as Sentry from \"@sentry/browser\";\nimport * as SentryIntegrations from \"@sentry/integrations\";\n\nconst SentryEnvHostnameMap: { [key: string]: string } = {\n  \"excalidraw.com\": \"production\",\n  \"vercel.app\": \"staging\",\n};\n\nconst REACT_APP_DISABLE_SENTRY =\n  process.env.REACT_APP_DISABLE_SENTRY === \"true\";\n\n// Disable Sentry locally or inside the Docker to avoid noise/respect privacy\nconst onlineEnv =\n  !REACT_APP_DISABLE_SENTRY &&\n  Object.keys(SentryEnvHostnameMap).find(\n    (item) => window.location.hostname.indexOf(item) >= 0,\n  );\n\nSentry.init({\n  dsn: onlineEnv\n    ? \"https://7bfc596a5bf945eda6b660d3015a5460@sentry.io/5179260\"\n    : undefined,\n  environment: onlineEnv ? SentryEnvHostnameMap[onlineEnv] : undefined,\n  release: process.env.REACT_APP_GIT_SHA,\n  ignoreErrors: [\n    \"undefined is not an object (evaluating 'window.__pad.performLoop')\", // Only happens on Safari, but spams our servers. Doesn't break anything\n  ],\n  integrations: [\n    new SentryIntegrations.CaptureConsole({\n      levels: [\"error\"],\n    }),\n  ],\n  beforeSend(event) {\n    if (event.request?.url) {\n      event.request.url = event.request.url.replace(/#.*$/, \"\");\n    }\n    return event;\n  },\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ExcalidrawApp from \"./excalidraw-app\";\n\nimport \"./excalidraw-app/pwa\";\nimport \"./excalidraw-app/sentry\";\nwindow.__EXCALIDRAW_SHA__ = process.env.REACT_APP_GIT_SHA;\n\nReactDOM.render(<ExcalidrawApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}